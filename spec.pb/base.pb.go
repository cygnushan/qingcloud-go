// Code generated by protoc-gen-go. DO NOT EDIT.
// source: base.proto

/*
Package spec is a generated protocol buffer package.

It is generated from these files:
	base.proto
	instances.proto
	nic.proto
	snapshot.proto
	zone.proto
	cache.proto
	job.proto
	rdb.proto
	tag.proto
	dns.proto
	key_pair.proto
	router.proto
	user_data.proto
	eip.proto
	load_balancer.proto
	security_group.proto
	volume.proto
	image.proto
	mongo.proto
	shared_storage.proto
	vxnet.proto

It has these top-level messages:
	CommonRequest
	Error
	DescribeInstanceTypes_Request
	DescribeInstanceTypes_Reponse
	InstanceTypeSetElem
*/
package spec

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/any"
import _ "github.com/golang/protobuf/ptypes/empty"
import google_protobuf2 "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_E_NULL ErrorCode = 0
	// Client
	ErrorCode_E_1100 ErrorCode = 1100
	ErrorCode_E_1200 ErrorCode = 1200
	ErrorCode_E_1300 ErrorCode = 1300
	ErrorCode_E_1400 ErrorCode = 1400
	ErrorCode_E_2100 ErrorCode = 2100
	ErrorCode_E_2400 ErrorCode = 2400
	ErrorCode_E_2500 ErrorCode = 2500
	// Server
	ErrorCode_E_5000 ErrorCode = 5000
	ErrorCode_E_5100 ErrorCode = 5100
	ErrorCode_E_5200 ErrorCode = 5200
	ErrorCode_E_5300 ErrorCode = 5300
)

var ErrorCode_name = map[int32]string{
	0:    "E_NULL",
	1100: "E_1100",
	1200: "E_1200",
	1300: "E_1300",
	1400: "E_1400",
	2100: "E_2100",
	2400: "E_2400",
	2500: "E_2500",
	5000: "E_5000",
	5100: "E_5100",
	5200: "E_5200",
	5300: "E_5300",
}
var ErrorCode_value = map[string]int32{
	"E_NULL": 0,
	"E_1100": 1100,
	"E_1200": 1200,
	"E_1300": 1300,
	"E_1400": 1400,
	"E_2100": 2100,
	"E_2400": 2400,
	"E_2500": 2500,
	"E_5000": 5000,
	"E_5100": 5100,
	"E_5200": 5200,
	"E_5300": 5300,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}
func (ErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CommonRequest struct {
	Action           string                      `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Zone             string                      `protobuf:"bytes,2,opt,name=zone" json:"zone,omitempty"`
	TimeStamp        *google_protobuf2.Timestamp `protobuf:"bytes,3,opt,name=time_stamp,json=timeStamp" json:"time_stamp,omitempty"`
	AccessKeyId      string                      `protobuf:"bytes,4,opt,name=access_key_id,json=accessKeyId" json:"access_key_id,omitempty"`
	Version          int32                       `protobuf:"varint,5,opt,name=version" json:"version,omitempty"`
	SignatureMethod  string                      `protobuf:"bytes,6,opt,name=signature_method,json=signatureMethod" json:"signature_method,omitempty"`
	SignatureVersion int32                       `protobuf:"varint,7,opt,name=signature_version,json=signatureVersion" json:"signature_version,omitempty"`
	Signature        string                      `protobuf:"bytes,8,opt,name=signature" json:"signature,omitempty"`
}

func (m *CommonRequest) Reset()                    { *m = CommonRequest{} }
func (m *CommonRequest) String() string            { return proto.CompactTextString(m) }
func (*CommonRequest) ProtoMessage()               {}
func (*CommonRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CommonRequest) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CommonRequest) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *CommonRequest) GetTimeStamp() *google_protobuf2.Timestamp {
	if m != nil {
		return m.TimeStamp
	}
	return nil
}

func (m *CommonRequest) GetAccessKeyId() string {
	if m != nil {
		return m.AccessKeyId
	}
	return ""
}

func (m *CommonRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *CommonRequest) GetSignatureMethod() string {
	if m != nil {
		return m.SignatureMethod
	}
	return ""
}

func (m *CommonRequest) GetSignatureVersion() int32 {
	if m != nil {
		return m.SignatureVersion
	}
	return 0
}

func (m *CommonRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type Error struct {
	RetCode int32  `protobuf:"varint,1,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Error) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*CommonRequest)(nil), "spec.CommonRequest")
	proto.RegisterType((*Error)(nil), "spec.Error")
	proto.RegisterEnum("spec.ErrorCode", ErrorCode_name, ErrorCode_value)
}

func init() { proto.RegisterFile("base.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 423 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0x3f, 0x8e, 0xd3, 0x40,
	0x14, 0xc6, 0xf1, 0x92, 0x38, 0xf1, 0x8b, 0x56, 0x0c, 0x83, 0x84, 0xbc, 0x01, 0x41, 0x94, 0x06,
	0x2f, 0x48, 0xde, 0xd9, 0x2c, 0x5b, 0x20, 0xd1, 0xad, 0xb6, 0x40, 0x2c, 0x14, 0xe6, 0x4f, 0x6b,
	0x4d, 0xec, 0x87, 0xb1, 0xc0, 0x1e, 0x33, 0x33, 0x01, 0x85, 0x13, 0x70, 0x00, 0xce, 0x40, 0x41,
	0x45, 0xb1, 0x47, 0xa0, 0xa4, 0xe0, 0x08, 0x1c, 0x80, 0x03, 0x50, 0xa2, 0x19, 0xcf, 0x24, 0x52,
	0xba, 0xf9, 0x7d, 0xef, 0x7b, 0xdf, 0xf7, 0x64, 0x03, 0x2c, 0xb9, 0xc2, 0xb4, 0x93, 0x42, 0x0b,
	0x3a, 0x50, 0x1d, 0x16, 0xd3, 0x83, 0x4a, 0x88, 0xea, 0x3d, 0x1e, 0x59, 0x6d, 0xb9, 0x7a, 0x73,
	0xc4, 0xdb, 0x75, 0x6f, 0x98, 0xde, 0xda, 0x1d, 0x61, 0xd3, 0x69, 0x3f, 0xbc, 0xbb, 0x3b, 0xd4,
	0x75, 0x83, 0x4a, 0xf3, 0xa6, 0x73, 0x86, 0x3b, 0xbb, 0x86, 0x4f, 0x92, 0x77, 0x1d, 0x4a, 0xd5,
	0xcf, 0xe7, 0xdf, 0xf7, 0x60, 0xff, 0x4c, 0x34, 0x8d, 0x68, 0x33, 0xfc, 0xb0, 0x42, 0xa5, 0xe9,
	0x4d, 0x08, 0x79, 0xa1, 0x6b, 0xd1, 0xc6, 0xc1, 0x2c, 0x48, 0xa2, 0xcc, 0x11, 0xa5, 0x30, 0xf8,
	0x2c, 0x5a, 0x8c, 0xf7, 0xac, 0x6a, 0xdf, 0xf4, 0x11, 0x80, 0x29, 0xcc, 0x6d, 0x63, 0x7c, 0x75,
	0x16, 0x24, 0x93, 0xc5, 0x34, 0xed, 0x2b, 0x53, 0x5f, 0x99, 0xbe, 0xf4, 0x37, 0x65, 0x91, 0x71,
	0xbf, 0x30, 0x4f, 0x3a, 0x87, 0x7d, 0x5e, 0x14, 0xa8, 0x54, 0xfe, 0x0e, 0xd7, 0x79, 0x5d, 0xc6,
	0x03, 0x9b, 0x3b, 0xe9, 0xc5, 0xa7, 0xb8, 0x7e, 0x52, 0xd2, 0x18, 0x46, 0x1f, 0x51, 0x2a, 0x73,
	0xcb, 0x70, 0x16, 0x24, 0xc3, 0xcc, 0x23, 0x3d, 0x04, 0xa2, 0xea, 0xaa, 0xe5, 0x7a, 0x25, 0x31,
	0x6f, 0x50, 0xbf, 0x15, 0x65, 0x1c, 0xda, 0x80, 0x6b, 0x1b, 0xfd, 0x99, 0x95, 0xe9, 0x03, 0xb8,
	0xbe, 0xb5, 0xfa, 0xb8, 0x91, 0x8d, 0xdb, 0x66, 0xbc, 0x76, 0xb9, 0xb7, 0x21, 0xda, 0x68, 0xf1,
	0xd8, 0x06, 0x6e, 0x85, 0xf9, 0x63, 0x18, 0x9e, 0x4b, 0x29, 0x24, 0x3d, 0x80, 0xb1, 0x44, 0x9d,
	0x17, 0xa2, 0x44, 0xfb, 0x95, 0x86, 0xd9, 0x48, 0xa2, 0x3e, 0x13, 0x25, 0x9a, 0x9b, 0x1b, 0x54,
	0x8a, 0x57, 0xfe, 0x4b, 0x79, 0xbc, 0xff, 0x2d, 0x80, 0xc8, 0xae, 0x5b, 0x1f, 0x40, 0x78, 0x9e,
	0x3f, 0x7f, 0x75, 0x71, 0x41, 0xae, 0xd0, 0x89, 0x79, 0x1f, 0x1f, 0x33, 0x46, 0x7e, 0x8d, 0x1d,
	0x2c, 0x18, 0x23, 0x3f, 0x22, 0x07, 0x27, 0x8c, 0x91, 0xaf, 0xe0, 0xe0, 0x21, 0x63, 0xe4, 0x9f,
	0x83, 0x85, 0xd9, 0xb9, 0x24, 0x0e, 0xcc, 0xe4, 0x0f, 0x75, 0x70, 0xca, 0x18, 0xf9, 0x79, 0xa3,
	0x87, 0x53, 0xc6, 0x18, 0xf9, 0x72, 0xcf, 0x81, 0xd9, 0xf9, 0xeb, 0xc1, 0xf4, 0xfc, 0x4e, 0x1c,
	0x98, 0x9e, 0xcb, 0xc3, 0x65, 0x68, 0xff, 0xdc, 0xc9, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8e,
	0x1b, 0x8b, 0x0e, 0xa7, 0x02, 0x00, 0x00,
}
