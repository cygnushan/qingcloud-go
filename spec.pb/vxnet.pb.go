// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vxnet.proto

package spec

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/any"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/golang/protobuf/ptypes/wrappers"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import request_data_pkg "github.com/chai2010/qingcloud-go/request/data"
import "github.com/chai2010/qingcloud-go/request/errors"

var _ = config.Config{}
var _ = request.Request{}
var _ = request_data_pkg.Operation{}
var _ = errors.ParameterRequiredError{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type VxnetServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *VxnetServiceProperties) Reset()                    { *m = VxnetServiceProperties{} }
func (m *VxnetServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*VxnetServiceProperties) ProtoMessage()               {}
func (*VxnetServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor29, []int{0} }

func (m *VxnetServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func init() {
	proto.RegisterType((*VxnetServiceProperties)(nil), "spec.VxnetServiceProperties")
}

type VxnetServiceInterface interface {
	DescribeVxnets(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	CreateVxnets(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	DeleteVxnets(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	JoinVxnet(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	LeaveVxnet(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	ModifyVxnetAttributes(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	DescribeVxnetInstances(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
}

type VxnetService struct {
	Config     *config.Config
	Properties *VxnetServiceProperties
}

func NewVxnetService(conf *config.Config, zone string) (p *VxnetService, err error) {
	return &VxnetService{
		Config:     conf,
		Properties: &VxnetServiceProperties{Zone: zone},
	}, nil
}

func (p *VxnetService) DescribeVxnets(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeVxnets",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *VxnetService) CreateVxnets(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateVxnets",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *VxnetService) DeleteVxnets(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteVxnets",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *VxnetService) JoinVxnet(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "JoinVxnet",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *VxnetService) LeaveVxnet(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "LeaveVxnet",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *VxnetService) ModifyVxnetAttributes(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifyVxnetAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *VxnetService) DescribeVxnetInstances(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeVxnetInstances",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func init() { proto.RegisterFile("vxnet.proto", fileDescriptor29) }

var fileDescriptor29 = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x91, 0x4f, 0x4b, 0x03, 0x31,
	0x10, 0xc5, 0x29, 0x16, 0xa1, 0x63, 0xf1, 0x10, 0x70, 0xd1, 0x15, 0x54, 0x3c, 0x79, 0x90, 0x2d,
	0xe8, 0x51, 0x11, 0xc5, 0x8a, 0x7f, 0x50, 0x10, 0x05, 0xef, 0xd9, 0xf5, 0xb5, 0x04, 0xba, 0x49,
	0x98, 0x4c, 0x57, 0xeb, 0x87, 0xf5, 0xb3, 0x48, 0xb3, 0x16, 0x74, 0xc1, 0xc3, 0xd6, 0x5b, 0xf2,
	0xde, 0xfb, 0x65, 0x5e, 0x18, 0x5a, 0xab, 0xde, 0x2d, 0x24, 0xf3, 0xec, 0xc4, 0xa9, 0x6e, 0xf0,
	0x28, 0xd2, 0xad, 0xb1, 0x73, 0xe3, 0x09, 0x06, 0x51, 0xcb, 0xa7, 0xa3, 0x81, 0xb6, 0xb3, 0x3a,
	0x90, 0x6e, 0x37, 0x2d, 0x94, 0x5e, 0x16, 0xe6, 0x6e, 0xd3, 0x14, 0x53, 0x22, 0x88, 0x2e, 0xfd,
	0x77, 0x60, 0xa7, 0x19, 0x78, 0x63, 0xed, 0x3d, 0x38, 0xd4, 0xfe, 0xfe, 0x21, 0x25, 0x2f, 0xf3,
	0x36, 0xcf, 0xe0, 0xca, 0x14, 0x78, 0x64, 0xe7, 0xc1, 0x62, 0x10, 0x94, 0xa2, 0xee, 0x87, 0xb3,
	0xd8, 0xec, 0xec, 0x75, 0x0e, 0x7a, 0x4f, 0xf1, 0x7c, 0xf4, 0xb9, 0x42, 0xfd, 0x9f, 0x71, 0x75,
	0x4e, 0xeb, 0x43, 0x84, 0x82, 0x4d, 0x8e, 0xa8, 0x07, 0x95, 0x64, 0xf5, 0xc4, 0x6c, 0x31, 0x31,
	0xbb, 0x9a, 0xf7, 0x4d, 0xff, 0xd0, 0xd5, 0x19, 0xf5, 0x2f, 0x19, 0x5a, 0xfe, 0xc1, 0x0f, 0x31,
	0xc1, 0xd2, 0xfc, 0x09, 0xf5, 0xee, 0x9c, 0xb1, 0x91, 0x6e, 0x0d, 0x9f, 0x12, 0xdd, 0x43, 0x57,
	0x58, 0x8e, 0xbe, 0xa6, 0x8d, 0x07, 0xf7, 0x6a, 0x46, 0xb3, 0x88, 0x5f, 0x88, 0xb0, 0xc9, 0xa7,
	0x82, 0xf6, 0x7f, 0xb8, 0xa1, 0xe4, 0xd7, 0x16, 0x6e, 0x6d, 0x10, 0x6d, 0x8b, 0xf6, 0x2f, 0xe5,
	0xab, 0xf1, 0x7e, 0xfc, 0x15, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x5d, 0x87, 0xe2, 0xa3, 0x02, 0x00,
	0x00,
}
