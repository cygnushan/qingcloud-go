// Code generated by protoc-gen-go. DO NOT EDIT.
// source: instances.proto

package spec

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Message struct {
	Msg string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Message) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type DescribeInstanceTypes_Request struct {
	Action        string   `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Zone          string   `protobuf:"bytes,2,opt,name=zone" json:"zone,omitempty"`
	InstanceTypes []string `protobuf:"bytes,3,rep,name=instance_types,json=instanceTypes" json:"instance_types,omitempty"`
}

func (m *DescribeInstanceTypes_Request) Reset()                    { *m = DescribeInstanceTypes_Request{} }
func (m *DescribeInstanceTypes_Request) String() string            { return proto.CompactTextString(m) }
func (*DescribeInstanceTypes_Request) ProtoMessage()               {}
func (*DescribeInstanceTypes_Request) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *DescribeInstanceTypes_Request) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeInstanceTypes_Request) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *DescribeInstanceTypes_Request) GetInstanceTypes() []string {
	if m != nil {
		return m.InstanceTypes
	}
	return nil
}

type DescribeInstanceTypes_Reponse struct {
	Action          string                 `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode         int32                  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	InstanceTypeSet []*InstanceTypeSetElem `protobuf:"bytes,3,rep,name=instance_type_set,json=instanceTypeSet" json:"instance_type_set,omitempty"`
	TotalCount      int32                  `protobuf:"varint,4,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *DescribeInstanceTypes_Reponse) Reset()                    { *m = DescribeInstanceTypes_Reponse{} }
func (m *DescribeInstanceTypes_Reponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeInstanceTypes_Reponse) ProtoMessage()               {}
func (*DescribeInstanceTypes_Reponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *DescribeInstanceTypes_Reponse) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeInstanceTypes_Reponse) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeInstanceTypes_Reponse) GetInstanceTypeSet() []*InstanceTypeSetElem {
	if m != nil {
		return m.InstanceTypeSet
	}
	return nil
}

func (m *DescribeInstanceTypes_Reponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type InstanceTypeSetElem struct {
	InstanceTypeId   string `protobuf:"bytes,1,opt,name=instance_type_id,json=instanceTypeId" json:"instance_type_id,omitempty"`
	InstanceTypeName string `protobuf:"bytes,2,opt,name=instance_type_name,json=instanceTypeName" json:"instance_type_name,omitempty"`
	Description      string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	VcpusCurrent     int32  `protobuf:"varint,4,opt,name=vcpus_current,json=vcpusCurrent" json:"vcpus_current,omitempty"`
	MemoryCurrent    int32  `protobuf:"varint,5,opt,name=memory_current,json=memoryCurrent" json:"memory_current,omitempty"`
	Status           string `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
}

func (m *InstanceTypeSetElem) Reset()                    { *m = InstanceTypeSetElem{} }
func (m *InstanceTypeSetElem) String() string            { return proto.CompactTextString(m) }
func (*InstanceTypeSetElem) ProtoMessage()               {}
func (*InstanceTypeSetElem) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *InstanceTypeSetElem) GetInstanceTypeId() string {
	if m != nil {
		return m.InstanceTypeId
	}
	return ""
}

func (m *InstanceTypeSetElem) GetInstanceTypeName() string {
	if m != nil {
		return m.InstanceTypeName
	}
	return ""
}

func (m *InstanceTypeSetElem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InstanceTypeSetElem) GetVcpusCurrent() int32 {
	if m != nil {
		return m.VcpusCurrent
	}
	return 0
}

func (m *InstanceTypeSetElem) GetMemoryCurrent() int32 {
	if m != nil {
		return m.MemoryCurrent
	}
	return 0
}

func (m *InstanceTypeSetElem) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "spec.Message")
	proto.RegisterType((*DescribeInstanceTypes_Request)(nil), "spec.DescribeInstanceTypes_Request")
	proto.RegisterType((*DescribeInstanceTypes_Reponse)(nil), "spec.DescribeInstanceTypes_Reponse")
	proto.RegisterType((*InstanceTypeSetElem)(nil), "spec.InstanceTypeSetElem")
}

func init() { proto.RegisterFile("instances.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 481 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0x15, 0xd2, 0xa4, 0x74, 0x52, 0x27, 0xee, 0x22, 0x2a, 0xb7, 0x08, 0x11, 0xa5, 0x42,
	0xca, 0xa1, 0x35, 0x10, 0x2e, 0x5c, 0x21, 0xed, 0xa1, 0x87, 0x72, 0x70, 0x7a, 0xb7, 0x36, 0xf6,
	0x50, 0xad, 0x88, 0xbd, 0x66, 0x67, 0x5c, 0x29, 0x7d, 0x0e, 0x9e, 0x86, 0xd7, 0xe2, 0x05, 0x90,
	0xd7, 0x76, 0x65, 0xa3, 0x96, 0x9a, 0x9b, 0xf7, 0xd7, 0x37, 0xfb, 0xcf, 0xfe, 0xe3, 0x5d, 0x98,
	0xa8, 0x94, 0x58, 0xa6, 0x11, 0x92, 0x9f, 0x19, 0xcd, 0x5a, 0xec, 0x50, 0x86, 0xd1, 0xec, 0x15,
	0xec, 0x5e, 0x21, 0x91, 0xbc, 0x41, 0xe1, 0x42, 0x3f, 0xa1, 0x1b, 0xaf, 0x37, 0xed, 0xcd, 0xf7,
	0x82, 0xe2, 0x73, 0x66, 0xe0, 0xf5, 0x39, 0x52, 0x64, 0xd4, 0x1a, 0x2f, 0xab, 0xea, 0xeb, 0x6d,
	0x86, 0x14, 0x06, 0xf8, 0x23, 0x47, 0x62, 0x71, 0x08, 0x43, 0x19, 0xb1, 0xd2, 0x69, 0x55, 0x55,
	0xad, 0x84, 0x80, 0x9d, 0x3b, 0x9d, 0xa2, 0xf7, 0xcc, 0xaa, 0xf6, 0x5b, 0xbc, 0x85, 0x71, 0xdd,
	0x42, 0xc8, 0xc5, 0x2e, 0x5e, 0x7f, 0xda, 0x9f, 0xef, 0x05, 0x8e, 0x6a, 0x6e, 0x3d, 0xfb, 0xd5,
	0x7b, 0xdc, 0x34, 0xd3, 0x29, 0xe1, 0xa3, 0xa6, 0x47, 0xf0, 0xdc, 0x20, 0x87, 0x91, 0x8e, 0x4b,
	0xe3, 0x41, 0xb0, 0x6b, 0x90, 0x97, 0x3a, 0x46, 0x71, 0x01, 0x07, 0x2d, 0xef, 0x90, 0x90, 0xad,
	0xfd, 0x68, 0x71, 0xe4, 0x17, 0x39, 0xf8, 0x4d, 0xab, 0x15, 0xf2, 0xc5, 0x06, 0x93, 0x60, 0xa2,
	0xda, 0xa2, 0x78, 0x03, 0x23, 0xd6, 0x2c, 0x37, 0x61, 0xa4, 0xf3, 0x94, 0xbd, 0x1d, 0x6b, 0x02,
	0x56, 0x5a, 0x16, 0xca, 0xec, 0x77, 0x0f, 0x5e, 0x3c, 0xb0, 0x93, 0x98, 0x83, 0xdb, 0xf6, 0x57,
	0x71, 0xd5, 0xfc, 0xb8, 0xe9, 0x71, 0x19, 0x8b, 0x53, 0x10, 0x6d, 0x32, 0x95, 0x49, 0x9d, 0xa3,
	0xdb, 0x64, 0xbf, 0xca, 0x04, 0xc5, 0x14, 0x46, 0xb1, 0xcd, 0x2a, 0xb3, 0x79, 0xf4, 0x2d, 0xd6,
	0x94, 0xc4, 0x09, 0x38, 0xb7, 0x51, 0x96, 0x53, 0x18, 0xe5, 0xc6, 0xe0, 0x7d, 0xd3, 0xfb, 0x56,
	0x5c, 0x96, 0x5a, 0x31, 0x9a, 0x04, 0x13, 0x6d, 0xb6, 0xf7, 0xd4, 0xc0, 0x52, 0x4e, 0xa9, 0xd6,
	0xd8, 0x21, 0x0c, 0x89, 0x25, 0xe7, 0xe4, 0x0d, 0xcb, 0xe0, 0xcb, 0xd5, 0xe2, 0xe7, 0x00, 0xdc,
	0xfa, 0xd4, 0xb4, 0x42, 0x73, 0xab, 0x22, 0x14, 0x1f, 0xe0, 0xe0, 0xef, 0x31, 0x92, 0x70, 0xca,
	0xb0, 0xab, 0x3f, 0xee, 0xb8, 0xbd, 0x14, 0xa7, 0xb0, 0x1f, 0xe4, 0x69, 0x57, 0x7a, 0x01, 0xe2,
	0x1a, 0x4d, 0xa2, 0x52, 0xc9, 0x9d, 0x1d, 0x7c, 0x18, 0xaf, 0x58, 0x1a, 0xee, 0xca, 0x9f, 0x81,
	0xb3, 0x62, 0x9d, 0x75, 0xc5, 0xdf, 0x83, 0x1b, 0x20, 0xfd, 0x8f, 0x81, 0x0f, 0xe3, 0x00, 0x09,
	0x3b, 0xf3, 0xef, 0x60, 0x12, 0x20, 0xa9, 0xbb, 0xce, 0x27, 0xfe, 0x04, 0xde, 0x95, 0x8e, 0xd5,
	0xb7, 0x6d, 0x5d, 0xf0, 0x99, 0xd9, 0xa8, 0x75, 0xce, 0x4f, 0x56, 0x4a, 0x78, 0xf9, 0xe0, 0x3d,
	0x14, 0x27, 0x25, 0xf7, 0xcf, 0x97, 0xe1, 0xf8, 0x09, 0xa8, 0xbc, 0xc9, 0x67, 0xe0, 0x2c, 0x0d,
	0x4a, 0xc6, 0x2f, 0x46, 0x7f, 0x47, 0xd3, 0x61, 0x1a, 0xe7, 0xb8, 0xc1, 0x8e, 0xf8, 0x7a, 0x68,
	0xdf, 0xb9, 0x8f, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x37, 0xb0, 0xe5, 0xfa, 0x04, 0x00,
	0x00,
}
