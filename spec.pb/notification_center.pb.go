// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notification_center.proto

package spec

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/any"
import _ "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/golang/protobuf/ptypes/wrappers"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import request_data_pkg "github.com/chai2010/qingcloud-go/request/data"
import "github.com/chai2010/qingcloud-go/request/errors"

var _ = config.Config{}
var _ = request.Request{}
var _ = request_data_pkg.Operation{}
var _ = errors.ParameterRequiredError{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type NotificationCenterServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *NotificationCenterServiceProperties) Reset()         { *m = NotificationCenterServiceProperties{} }
func (m *NotificationCenterServiceProperties) String() string { return proto.CompactTextString(m) }
func (*NotificationCenterServiceProperties) ProtoMessage()    {}
func (*NotificationCenterServiceProperties) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{0}
}

func (m *NotificationCenterServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type DescribeNotificationCenterUserPostsInput struct {
}

func (m *DescribeNotificationCenterUserPostsInput) Reset() {
	*m = DescribeNotificationCenterUserPostsInput{}
}
func (m *DescribeNotificationCenterUserPostsInput) String() string { return proto.CompactTextString(m) }
func (*DescribeNotificationCenterUserPostsInput) ProtoMessage()    {}
func (*DescribeNotificationCenterUserPostsInput) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{1}
}

type DescribeNotificationCenterUserPostsOutput struct {
}

func (m *DescribeNotificationCenterUserPostsOutput) Reset() {
	*m = DescribeNotificationCenterUserPostsOutput{}
}
func (m *DescribeNotificationCenterUserPostsOutput) String() string { return proto.CompactTextString(m) }
func (*DescribeNotificationCenterUserPostsOutput) ProtoMessage()    {}
func (*DescribeNotificationCenterUserPostsOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor16, []int{2}
}

func init() {
	proto.RegisterType((*NotificationCenterServiceProperties)(nil), "spec.NotificationCenterServiceProperties")
	proto.RegisterType((*DescribeNotificationCenterUserPostsInput)(nil), "spec.DescribeNotificationCenterUserPostsInput")
	proto.RegisterType((*DescribeNotificationCenterUserPostsOutput)(nil), "spec.DescribeNotificationCenterUserPostsOutput")
}

type NotificationCenterServiceInterface interface {
	DescribeNotificationCenterUserPosts(in *DescribeNotificationCenterUserPostsInput) (out *DescribeNotificationCenterUserPostsOutput, err error)
}

type NotificationCenterService struct {
	Config     *config.Config
	Properties *NotificationCenterServiceProperties
}

func NewNotificationCenterService(conf *config.Config, zone string) (p *NotificationCenterService, err error) {
	return &NotificationCenterService{
		Config:     conf,
		Properties: &NotificationCenterServiceProperties{Zone: zone},
	}, nil
}

func (p *NotificationCenterService) DescribeNotificationCenterUserPosts(in *DescribeNotificationCenterUserPostsInput) (out *DescribeNotificationCenterUserPostsOutput, err error) {
	if in == nil {
		in = &DescribeNotificationCenterUserPostsInput{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeNotificationCenterUserPosts",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeNotificationCenterUserPostsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func init() { proto.RegisterFile("notification_center.proto", fileDescriptor16) }

var fileDescriptor16 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x29, 0x2c, 0x82, 0x39, 0xe6, 0x64, 0x2b, 0xa8, 0x74, 0x2f, 0xab, 0x42, 0x0b, 0x7a,
	0xf2, 0xac, 0x17, 0x2f, 0xba, 0x28, 0x9e, 0x25, 0x0d, 0xb3, 0x4b, 0xc0, 0x66, 0x86, 0x99, 0x89,
	0xa2, 0x0f, 0xe0, 0x93, 0xf8, 0xa0, 0x62, 0xaa, 0x20, 0x15, 0x21, 0xb7, 0x90, 0xef, 0x63, 0xf8,
	0xf8, 0x4d, 0x1d, 0x51, 0xc3, 0x26, 0x78, 0xa7, 0x01, 0xe3, 0xa3, 0x87, 0xa8, 0xc0, 0x1d, 0x31,
	0x2a, 0xda, 0x85, 0x10, 0xf8, 0xa6, 0xde, 0x22, 0x6e, 0x9f, 0xa0, 0xcf, 0x7f, 0x43, 0xda, 0xf4,
	0x2e, 0xbe, 0x4e, 0x42, 0xb3, 0x3f, 0x47, 0x30, 0x92, 0xfe, 0xc0, 0xc3, 0x39, 0xd4, 0x30, 0x82,
	0xa8, 0x1b, 0xe9, 0x5b, 0x38, 0x98, 0x0b, 0x2f, 0xec, 0x88, 0x80, 0x65, 0xe2, 0xed, 0x85, 0x59,
	0xde, 0xfc, 0x6a, 0xbb, 0xcc, 0x69, 0xf7, 0xc0, 0xcf, 0xc1, 0xc3, 0x9a, 0x91, 0x80, 0x35, 0x80,
	0x58, 0x6b, 0x16, 0x6f, 0x18, 0x61, 0xaf, 0x3a, 0xaa, 0x56, 0xbb, 0x77, 0xf9, 0xdd, 0x9e, 0x98,
	0xd5, 0x15, 0x88, 0xe7, 0x30, 0xc0, 0xdf, 0x13, 0x0f, 0x02, 0xbc, 0x46, 0x51, 0xb9, 0x8e, 0x94,
	0xb4, 0x3d, 0x35, 0xc7, 0x05, 0xee, 0x6d, 0x52, 0x4a, 0x7a, 0xf6, 0x51, 0x99, 0xfa, 0xdf, 0x28,
	0xfb, 0x5e, 0x99, 0x65, 0xc1, 0x2d, 0xdb, 0x75, 0x5f, 0xcb, 0x76, 0xa5, 0x89, 0x4d, 0x5f, 0xec,
	0x4f, 0x99, 0xc3, 0x4e, 0x5e, 0xf0, 0xfc, 0x33, 0x00, 0x00, 0xff, 0xff, 0x7e, 0xc8, 0x99, 0xce,
	0xdd, 0x01, 0x00, 0x00,
}
