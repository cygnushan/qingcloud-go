// Copyright 2017 <chaishushan{AT}gmail.com>. All rights reserved.
// Use of this source code is governed by a Apache
// license that can be found in the LICENSE file.

syntax = "proto3";

package spec;

message ClusterServiceProperties {
	string zone = 1;
}

service ClusterService {
	rpc CreateCluster(CreateClusterInput) returns (CreateClusterOutput);
	rpc DescribeClusters(DescribeClustersInput) returns (DescribeClustersOutput);
	rpc DescribeClusterNodes(DescribeClusterNodesInput) returns (DescribeClusterNodesOutput);
	rpc StopClusters(StopClustersInput) returns (StopClustersOutput);
	rpc StartClusters(StartClustersInput) returns (StartClustersOutput);
	rpc DeleteClusters(DeleteClustersInput) returns (DeleteClustersOutput);
	rpc lease(leaseInput) returns (leaseOutput);
	rpc AddClusterNodes(AddClusterNodesInput) returns (AddClusterNodesOutput);
	rpc DeleteClusterNodes(DeleteClusterNodesInput) returns (DeleteClusterNodesOutput);
	rpc ResizeCluster(ResizeClusterInput) returns (ResizeClusterOutput);
	rpc ChangeClusterVxnet(ChangeClusterVxnetInput) returns (ChangeClusterVxnetOutput);
	rpc SuspendClusters(SuspendClustersInput) returns (SuspendClustersOutput);
	rpc UpdateClusterEnvironment(UpdateClusterEnvironmentInput) returns (UpdateClusterEnvironmentOutput);
	rpc ModifyClusterAttributes(ModifyClusterAttributesInput) returns (ModifyClusterAttributesOutput);
	rpc ModifyClusterNodeAttributes(ModifyClusterNodeAttributesInput) returns (ModifyClusterNodeAttributesOutput);
	rpc GetClustersStats(GetClustersStatsInput) returns (GetClustersStatsOutput);
	rpc DescribeClusterUsers(DescribeClusterUsersInput) returns (DescribeClusterUsersOutput);
	rpc RestartClusterService(RestartClusterServiceInput) returns (RestartClusterServiceOutput);
	rpc UpgradeClusters(UpgradeClustersInput) returns (UpgradeClustersOutput);
	rpc AuthorizeClustersBrokerToDeveloper(AuthorizeClustersBrokerToDeveloperInput) returns (AuthorizeClustersBrokerToDeveloperOutput);
	rpc RevokeClustersBrokerFromDeveloper(RevokeClustersBrokerFromDeveloperInput) returns (RevokeClustersBrokerFromDeveloperOutput);
}

/*
CreateCluster

conf - 配置文件格式

{
	"app_id": "app-zkv33646",
	"app_version": "1.0",
	"vxnet": "vxnet-p050mao",
	"node": {
		"container": {
		"type": "kvm",
		"image": "img-zookeeper",
		"zone": "allinone"
	},
	"instance_class": 0,
	"count": 3,
	"cpu": 1,
	"memory": 512,
	"volume": {
		"size": 3,
		"mount_point": "/zk_data",
		"filesystem": "xfs",
		"class": 0
	},
	"server_id_upper_bound":255,
	"service": {
		"start": {
			"cmd": "/opt/zookeeper/bin/zkServer.sh start"
		},
		"stop": {
			"cmd": "/opt/zookeeper/bin/zkServer.sh stop"
		}
	}
}
*/

message CreateClusterInput {
	string conf = 1; // 配置信息, JSON 字符串
}
message CreateClusterOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message DescribeClustersInput {
	repeated string clusters = 1;
	string scope = 2;
	string role = 3;
	repeated string app_id = 4;
	repeated string app_version = 5;
	repeated string users = 6;
}

message DescribeClustersOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

	int32 total_count = 4;
	repeated Cluster cluster_set = 5;
}

message Cluster {
	string global_uuid = 1;
	// TODO
}

message DescribeClusterNodesInput {
	string cluster = 1;
	repeated string cluster_nodes = 2;
	string role = 3;
}
message DescribeClusterNodesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message StopClustersInput {
	repeated string clusters = 1;
	int32 force = 2;
}
message StopClustersOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message StartClustersInput {
	repeated string clusters = 1;
}
message StartClustersOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message DeleteClustersInput {
	repeated string clusters = 1;
}
message DeleteClustersOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message leaseInput {
	repeated string clusters = 1;
}
message leaseOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message AddClusterNodesInput {
	string cluster = 1;
	int32 node_count = 2;
	string node_role = 3;
	string node_name = 4;
	repeated string private_ips = 5;
}
message AddClusterNodesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message DeleteClusterNodesInput {
	string cluster = 1;
	repeated string nodes = 2;
	int32 force = 3;
}
message DeleteClusterNodesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message ResizeClusterInput {
	string cluster = 1;
	string node_role = 2;
	int32 cpu = 3;
	int32 memory = 4;
	int32 storage_size = 5;
}
message ResizeClusterOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message ChangeClusterVxnetInput {
	string cluster = 1;
	string vxnet = 2;
	map<string, string> private_ips = 3;
	repeated string roles = 4;
}
message ChangeClusterVxnetOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message SuspendClustersInput {
	repeated string clusters = 1;
}
message SuspendClustersOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message UpdateClusterEnvironmentInput {
	string cluster = 1;
	repeated string roles = 2;
	map<string, string> env = 3;
}
message UpdateClusterEnvironmentOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message ModifyClusterAttributesInput {
	string cluster = 1;
	string name = 2;
	string description = 3;
}
message ModifyClusterAttributesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message ModifyClusterNodeAttributesInput {
	string cluster = 1;
	string cluster_node = 2;
	string name = 3;
}
message ModifyClusterNodeAttributesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message GetClustersStatsInput {
	repeated string zones = 1;
}
message GetClustersStatsOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message DescribeClusterUsersInput {
	repeated string zones = 1;
	repeated string apps = 2;
	repeated string app_versions = 3;
	repeated string users = 4;
	repeated string cluster_status = 5;
}
message DescribeClusterUsersOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message RestartClusterServiceInput {
	string cluster = 1;
	string role = 2;
}
message RestartClusterServiceOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message UpgradeClustersInput {
	repeated string clusters = 1;
	string app_version = 2;
}
message UpgradeClustersOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message AuthorizeClustersBrokerToDeveloperInput {
	repeated string clusters = 1;
}
message AuthorizeClustersBrokerToDeveloperOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

message RevokeClustersBrokerFromDeveloperInput {
	repeated string clusters = 1;
}
message RevokeClustersBrokerFromDeveloperOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}
