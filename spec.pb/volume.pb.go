// Code generated by protoc-gen-go. DO NOT EDIT.
// source: volume.proto

package spec

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"

var _ = config.Config{}
var _ = request.Request{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type VolumesServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *VolumesServiceProperties) Reset()                    { *m = VolumesServiceProperties{} }
func (m *VolumesServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*VolumesServiceProperties) ProtoMessage()               {}
func (*VolumesServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{0} }

func (m *VolumesServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type DescribeVolumesInput struct {
	Limit      int32    `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Offset     int32    `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	SearchWord string   `protobuf:"bytes,3,opt,name=search_word,json=searchWord" json:"search_word,omitempty"`
	Status     []string `protobuf:"bytes,4,rep,name=status" json:"status,omitempty"`
	Tags       []string `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	Verbose    int32    `protobuf:"varint,6,opt,name=verbose" json:"verbose,omitempty"`
	VolumeType int32    `protobuf:"varint,7,opt,name=volume_type,json=volumeType" json:"volume_type,omitempty"`
	Volumes    []string `protobuf:"bytes,8,rep,name=volumes" json:"volumes,omitempty"`
}

func (m *DescribeVolumesInput) Reset()                    { *m = DescribeVolumesInput{} }
func (m *DescribeVolumesInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeVolumesInput) ProtoMessage()               {}
func (*DescribeVolumesInput) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{1} }

func (m *DescribeVolumesInput) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeVolumesInput) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeVolumesInput) GetSearchWord() string {
	if m != nil {
		return m.SearchWord
	}
	return ""
}

func (m *DescribeVolumesInput) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeVolumesInput) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *DescribeVolumesInput) GetVerbose() int32 {
	if m != nil {
		return m.Verbose
	}
	return 0
}

func (m *DescribeVolumesInput) GetVolumeType() int32 {
	if m != nil {
		return m.VolumeType
	}
	return 0
}

func (m *DescribeVolumesInput) GetVolumes() []string {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type DescribeVolumesOutput struct {
	Action     string    `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode    int32     `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message    string    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	TotalCount int32     `protobuf:"varint,4,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	VolumeSet  []*Volume `protobuf:"bytes,6,rep,name=volume_set,json=volumeSet" json:"volume_set,omitempty"`
}

func (m *DescribeVolumesOutput) Reset()                    { *m = DescribeVolumesOutput{} }
func (m *DescribeVolumesOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeVolumesOutput) ProtoMessage()               {}
func (*DescribeVolumesOutput) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{2} }

func (m *DescribeVolumesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeVolumesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeVolumesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeVolumesOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeVolumesOutput) GetVolumeSet() []*Volume {
	if m != nil {
		return m.VolumeSet
	}
	return nil
}

type CreateVolumesInput struct {
	Count      int32  `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	Size       int32  `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	VolumeName string `protobuf:"bytes,3,opt,name=volume_name,json=volumeName" json:"volume_name,omitempty"`
	VolumeType int32  `protobuf:"varint,4,opt,name=volume_type,json=volumeType" json:"volume_type,omitempty"`
}

func (m *CreateVolumesInput) Reset()                    { *m = CreateVolumesInput{} }
func (m *CreateVolumesInput) String() string            { return proto.CompactTextString(m) }
func (*CreateVolumesInput) ProtoMessage()               {}
func (*CreateVolumesInput) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{3} }

func (m *CreateVolumesInput) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *CreateVolumesInput) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *CreateVolumesInput) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

func (m *CreateVolumesInput) GetVolumeType() int32 {
	if m != nil {
		return m.VolumeType
	}
	return 0
}

type CreateVolumesOutput struct {
	Action  string   `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32    `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string   `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	Volumes []string `protobuf:"bytes,5,rep,name=volumes" json:"volumes,omitempty"`
}

func (m *CreateVolumesOutput) Reset()                    { *m = CreateVolumesOutput{} }
func (m *CreateVolumesOutput) String() string            { return proto.CompactTextString(m) }
func (*CreateVolumesOutput) ProtoMessage()               {}
func (*CreateVolumesOutput) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{4} }

func (m *CreateVolumesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CreateVolumesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CreateVolumesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateVolumesOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *CreateVolumesOutput) GetVolumes() []string {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type DeleteVolumesInput struct {
	Volumes []string `protobuf:"bytes,1,rep,name=volumes" json:"volumes,omitempty"`
}

func (m *DeleteVolumesInput) Reset()                    { *m = DeleteVolumesInput{} }
func (m *DeleteVolumesInput) String() string            { return proto.CompactTextString(m) }
func (*DeleteVolumesInput) ProtoMessage()               {}
func (*DeleteVolumesInput) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{5} }

func (m *DeleteVolumesInput) GetVolumes() []string {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type DeleteVolumesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *DeleteVolumesOutput) Reset()                    { *m = DeleteVolumesOutput{} }
func (m *DeleteVolumesOutput) String() string            { return proto.CompactTextString(m) }
func (*DeleteVolumesOutput) ProtoMessage()               {}
func (*DeleteVolumesOutput) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{6} }

func (m *DeleteVolumesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DeleteVolumesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DeleteVolumesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteVolumesOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type AttachVolumesInput struct {
	Instance string   `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	Volumes  []string `protobuf:"bytes,2,rep,name=volumes" json:"volumes,omitempty"`
}

func (m *AttachVolumesInput) Reset()                    { *m = AttachVolumesInput{} }
func (m *AttachVolumesInput) String() string            { return proto.CompactTextString(m) }
func (*AttachVolumesInput) ProtoMessage()               {}
func (*AttachVolumesInput) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{7} }

func (m *AttachVolumesInput) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

func (m *AttachVolumesInput) GetVolumes() []string {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type AttachVolumesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *AttachVolumesOutput) Reset()                    { *m = AttachVolumesOutput{} }
func (m *AttachVolumesOutput) String() string            { return proto.CompactTextString(m) }
func (*AttachVolumesOutput) ProtoMessage()               {}
func (*AttachVolumesOutput) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{8} }

func (m *AttachVolumesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *AttachVolumesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *AttachVolumesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AttachVolumesOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type DetachVolumesInput struct {
	Instance string   `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	Volumes  []string `protobuf:"bytes,2,rep,name=volumes" json:"volumes,omitempty"`
}

func (m *DetachVolumesInput) Reset()                    { *m = DetachVolumesInput{} }
func (m *DetachVolumesInput) String() string            { return proto.CompactTextString(m) }
func (*DetachVolumesInput) ProtoMessage()               {}
func (*DetachVolumesInput) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{9} }

func (m *DetachVolumesInput) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

func (m *DetachVolumesInput) GetVolumes() []string {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type DetachVolumesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *DetachVolumesOutput) Reset()                    { *m = DetachVolumesOutput{} }
func (m *DetachVolumesOutput) String() string            { return proto.CompactTextString(m) }
func (*DetachVolumesOutput) ProtoMessage()               {}
func (*DetachVolumesOutput) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{10} }

func (m *DetachVolumesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DetachVolumesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DetachVolumesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DetachVolumesOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type ResizeVolumesInput struct {
	Size    int32    `protobuf:"varint,1,opt,name=size" json:"size,omitempty"`
	Volumes []string `protobuf:"bytes,2,rep,name=volumes" json:"volumes,omitempty"`
}

func (m *ResizeVolumesInput) Reset()                    { *m = ResizeVolumesInput{} }
func (m *ResizeVolumesInput) String() string            { return proto.CompactTextString(m) }
func (*ResizeVolumesInput) ProtoMessage()               {}
func (*ResizeVolumesInput) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{11} }

func (m *ResizeVolumesInput) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ResizeVolumesInput) GetVolumes() []string {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type ResizeVolumesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *ResizeVolumesOutput) Reset()                    { *m = ResizeVolumesOutput{} }
func (m *ResizeVolumesOutput) String() string            { return proto.CompactTextString(m) }
func (*ResizeVolumesOutput) ProtoMessage()               {}
func (*ResizeVolumesOutput) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{12} }

func (m *ResizeVolumesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ResizeVolumesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ResizeVolumesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ResizeVolumesOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type ModifyVolumeAttributesInput struct {
	Description string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Volume      string `protobuf:"bytes,2,opt,name=volume" json:"volume,omitempty"`
	VolumeName  string `protobuf:"bytes,3,opt,name=volume_name,json=volumeName" json:"volume_name,omitempty"`
}

func (m *ModifyVolumeAttributesInput) Reset()                    { *m = ModifyVolumeAttributesInput{} }
func (m *ModifyVolumeAttributesInput) String() string            { return proto.CompactTextString(m) }
func (*ModifyVolumeAttributesInput) ProtoMessage()               {}
func (*ModifyVolumeAttributesInput) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{13} }

func (m *ModifyVolumeAttributesInput) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ModifyVolumeAttributesInput) GetVolume() string {
	if m != nil {
		return m.Volume
	}
	return ""
}

func (m *ModifyVolumeAttributesInput) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

type ModifyVolumeAttributesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ModifyVolumeAttributesOutput) Reset()                    { *m = ModifyVolumeAttributesOutput{} }
func (m *ModifyVolumeAttributesOutput) String() string            { return proto.CompactTextString(m) }
func (*ModifyVolumeAttributesOutput) ProtoMessage()               {}
func (*ModifyVolumeAttributesOutput) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{14} }

func (m *ModifyVolumeAttributesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ModifyVolumeAttributesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ModifyVolumeAttributesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*VolumesServiceProperties)(nil), "spec.VolumesServiceProperties")
	proto.RegisterType((*DescribeVolumesInput)(nil), "spec.DescribeVolumesInput")
	proto.RegisterType((*DescribeVolumesOutput)(nil), "spec.DescribeVolumesOutput")
	proto.RegisterType((*CreateVolumesInput)(nil), "spec.CreateVolumesInput")
	proto.RegisterType((*CreateVolumesOutput)(nil), "spec.CreateVolumesOutput")
	proto.RegisterType((*DeleteVolumesInput)(nil), "spec.DeleteVolumesInput")
	proto.RegisterType((*DeleteVolumesOutput)(nil), "spec.DeleteVolumesOutput")
	proto.RegisterType((*AttachVolumesInput)(nil), "spec.AttachVolumesInput")
	proto.RegisterType((*AttachVolumesOutput)(nil), "spec.AttachVolumesOutput")
	proto.RegisterType((*DetachVolumesInput)(nil), "spec.DetachVolumesInput")
	proto.RegisterType((*DetachVolumesOutput)(nil), "spec.DetachVolumesOutput")
	proto.RegisterType((*ResizeVolumesInput)(nil), "spec.ResizeVolumesInput")
	proto.RegisterType((*ResizeVolumesOutput)(nil), "spec.ResizeVolumesOutput")
	proto.RegisterType((*ModifyVolumeAttributesInput)(nil), "spec.ModifyVolumeAttributesInput")
	proto.RegisterType((*ModifyVolumeAttributesOutput)(nil), "spec.ModifyVolumeAttributesOutput")
}

type VolumesServiceInterface interface {
	DescribeVolumes(in *DescribeVolumesInput) (out *DescribeVolumesOutput, err error)
	CreateVolumes(in *CreateVolumesInput) (out *CreateVolumesOutput, err error)
	DeleteVolumes(in *DeleteVolumesInput) (out *DeleteVolumesOutput, err error)
	AttachVolumes(in *AttachVolumesInput) (out *AttachVolumesOutput, err error)
	DetachVolumes(in *DetachVolumesInput) (out *DetachVolumesOutput, err error)
	ResizeVolumes(in *ResizeVolumesInput) (out *ResizeVolumesOutput, err error)
	ModifyVolumeAttributes(in *ModifyVolumeAttributesInput) (out *ModifyVolumeAttributesOutput, err error)
}

type VolumesService struct {
	Config     *config.Config
	Properties *VolumesServiceProperties
}

func NewVolumesService(conf *config.Config, zone string) (p *VolumesService, err error) {
	return &VolumesService{
		Config:     conf,
		Properties: &VolumesServiceProperties{Zone: zone},
	}, nil
}

func (p *VolumesService) DescribeVolumes(in *DescribeVolumesInput) (out *DescribeVolumesOutput, err error) {
	if in == nil {
		in = &DescribeVolumesInput{}
	}
	o := &request.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeVolumes",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeVolumesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *VolumesService) CreateVolumes(in *CreateVolumesInput) (out *CreateVolumesOutput, err error) {
	if in == nil {
		in = &CreateVolumesInput{}
	}
	o := &request.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateVolumes",
		RequestMethod: "GET", // GET or POST
	}

	x := &CreateVolumesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *VolumesService) DeleteVolumes(in *DeleteVolumesInput) (out *DeleteVolumesOutput, err error) {
	if in == nil {
		in = &DeleteVolumesInput{}
	}
	o := &request.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteVolumes",
		RequestMethod: "GET", // GET or POST
	}

	x := &DeleteVolumesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *VolumesService) AttachVolumes(in *AttachVolumesInput) (out *AttachVolumesOutput, err error) {
	if in == nil {
		in = &AttachVolumesInput{}
	}
	o := &request.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "AttachVolumes",
		RequestMethod: "GET", // GET or POST
	}

	x := &AttachVolumesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *VolumesService) DetachVolumes(in *DetachVolumesInput) (out *DetachVolumesOutput, err error) {
	if in == nil {
		in = &DetachVolumesInput{}
	}
	o := &request.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DetachVolumes",
		RequestMethod: "GET", // GET or POST
	}

	x := &DetachVolumesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *VolumesService) ResizeVolumes(in *ResizeVolumesInput) (out *ResizeVolumesOutput, err error) {
	if in == nil {
		in = &ResizeVolumesInput{}
	}
	o := &request.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ResizeVolumes",
		RequestMethod: "GET", // GET or POST
	}

	x := &ResizeVolumesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *VolumesService) ModifyVolumeAttributes(in *ModifyVolumeAttributesInput) (out *ModifyVolumeAttributesOutput, err error) {
	if in == nil {
		in = &ModifyVolumeAttributesInput{}
	}
	o := &request.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifyVolumeAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &ModifyVolumeAttributesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func init() { proto.RegisterFile("volume.proto", fileDescriptor28) }

var fileDescriptor28 = []byte{
	// 651 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xcd, 0x4e, 0xdb, 0x4e,
	0x10, 0x97, 0x21, 0x09, 0x64, 0x02, 0xff, 0xbf, 0xb4, 0x7c, 0xc8, 0x84, 0x4a, 0x4d, 0x7d, 0x42,
	0xaa, 0x94, 0x03, 0x7d, 0x02, 0x4a, 0x2e, 0x20, 0xf5, 0x43, 0xa6, 0x6a, 0x8f, 0x96, 0x63, 0x0f,
	0x60, 0x9a, 0x78, 0xad, 0xdd, 0x31, 0x6d, 0x38, 0xf5, 0x1d, 0x7a, 0xec, 0x5b, 0xf4, 0xa1, 0xfa,
	0x1c, 0x95, 0xf7, 0xa3, 0x78, 0x63, 0x2b, 0xbd, 0x94, 0xdc, 0x76, 0x66, 0x67, 0x7f, 0xf3, 0xfb,
	0xcd, 0xee, 0x8c, 0x0d, 0x3b, 0xf7, 0x7c, 0x56, 0xce, 0x71, 0x5c, 0x08, 0x4e, 0x9c, 0x75, 0x64,
	0x81, 0xc9, 0x70, 0x40, 0x8b, 0x02, 0xa5, 0x76, 0x05, 0x63, 0xf0, 0x3f, 0xaa, 0x10, 0x79, 0x85,
	0xe2, 0x3e, 0x4b, 0xf0, 0xbd, 0xe0, 0x05, 0x0a, 0xca, 0x50, 0x32, 0x06, 0x9d, 0x07, 0x9e, 0xa3,
	0xef, 0x8d, 0xbc, 0x93, 0x7e, 0xa8, 0xd6, 0xc1, 0x2f, 0x0f, 0xf6, 0x27, 0x28, 0x13, 0x91, 0x4d,
	0xd1, 0x1c, 0xbc, 0xc8, 0x8b, 0x92, 0xd8, 0x3e, 0x74, 0x67, 0xd9, 0x3c, 0x23, 0x15, 0xdd, 0x0d,
	0xb5, 0xc1, 0x0e, 0xa1, 0xc7, 0xaf, 0xaf, 0x25, 0x92, 0xbf, 0xa1, 0xdc, 0xc6, 0x62, 0xcf, 0x61,
	0x20, 0x31, 0x16, 0xc9, 0x6d, 0xf4, 0x85, 0x8b, 0xd4, 0xdf, 0x54, 0x19, 0x40, 0xbb, 0x3e, 0x71,
	0x91, 0x56, 0x07, 0x25, 0xc5, 0x54, 0x4a, 0xbf, 0x33, 0xda, 0x3c, 0xe9, 0x87, 0xc6, 0xaa, 0x38,
	0x51, 0x7c, 0x23, 0xfd, 0xae, 0xf2, 0xaa, 0x35, 0xf3, 0x61, 0xeb, 0x1e, 0xc5, 0x94, 0x4b, 0xf4,
	0x7b, 0x2a, 0x8b, 0x35, 0xab, 0x34, 0xba, 0x00, 0x51, 0xa5, 0xd9, 0xdf, 0x52, 0xbb, 0xa0, 0x5d,
	0x1f, 0x16, 0x05, 0xaa, 0xa3, 0x5a, 0x85, 0xbf, 0xad, 0x10, 0xad, 0x19, 0xfc, 0xf4, 0xe0, 0x60,
	0x49, 0xe8, 0xbb, 0x92, 0x2a, 0xa5, 0x87, 0xd0, 0x8b, 0x13, 0xca, 0x78, 0x6e, 0x0a, 0x63, 0x2c,
	0x76, 0x04, 0xdb, 0x02, 0x29, 0x4a, 0x78, 0x8a, 0x46, 0xed, 0x96, 0x40, 0x3a, 0xe7, 0xa9, 0x4a,
	0x33, 0x47, 0x29, 0xe3, 0x1b, 0x34, 0x52, 0xad, 0x59, 0x31, 0x24, 0x4e, 0xf1, 0x2c, 0x4a, 0x78,
	0x99, 0x93, 0xdf, 0xd1, 0x0c, 0x95, 0xeb, 0xbc, 0xf2, 0xb0, 0x97, 0x60, 0xf8, 0x46, 0x55, 0x15,
	0x7b, 0xa3, 0xcd, 0x93, 0xc1, 0xe9, 0xce, 0xb8, 0xba, 0xc8, 0xb1, 0xa6, 0x15, 0xf6, 0xf5, 0xfe,
	0x15, 0x52, 0xf0, 0xcd, 0x03, 0x76, 0x2e, 0x30, 0xa6, 0xc6, 0xdd, 0x68, 0x78, 0x73, 0x37, 0xca,
	0xa8, 0x4a, 0x29, 0xb3, 0x07, 0xcb, 0x55, 0xad, 0x6b, 0x05, 0xcb, 0xe3, 0xb9, 0x25, 0x6b, 0x08,
	0xbc, 0x8d, 0xe7, 0x8d, 0x8a, 0x76, 0x96, 0x2b, 0x1a, 0x7c, 0xf7, 0x60, 0xcf, 0xa1, 0xf0, 0x14,
	0x55, 0x3b, 0x80, 0xde, 0x1d, 0x9f, 0x46, 0x59, 0xaa, 0x08, 0xf4, 0xc3, 0xee, 0x1d, 0x9f, 0x5e,
	0xa4, 0xf5, 0xdb, 0xec, 0xba, 0xb7, 0x39, 0x06, 0x36, 0xc1, 0x19, 0x2e, 0xd5, 0xa5, 0x16, 0xef,
	0xb9, 0xf1, 0x0b, 0xd8, 0x73, 0xe2, 0xd7, 0x27, 0x22, 0xb8, 0x04, 0x76, 0x46, 0x14, 0x27, 0xb7,
	0x0e, 0xd5, 0x21, 0x6c, 0x67, 0xb9, 0xa4, 0x38, 0x4f, 0x6c, 0x3f, 0xfe, 0xb1, 0xeb, 0x32, 0x36,
	0x1a, 0x32, 0x1c, 0xac, 0xf5, 0xca, 0x98, 0xe0, 0xbf, 0x93, 0xe1, 0x60, 0xad, 0x51, 0xc6, 0x6b,
	0x60, 0x21, 0x56, 0xad, 0xe1, 0xc8, 0xb0, 0xad, 0xe3, 0xd5, 0x5a, 0x67, 0x25, 0x7d, 0x07, 0x63,
	0x8d, 0xf4, 0xbf, 0xc2, 0xf1, 0x1b, 0x9e, 0x66, 0xd7, 0x0b, 0x9d, 0xfa, 0x8c, 0x48, 0x64, 0xd3,
	0x92, 0xac, 0x8e, 0x11, 0x0c, 0x52, 0x35, 0xe3, 0x8a, 0x1a, 0x8f, 0xba, 0xab, 0x22, 0xa9, 0x65,
	0x28, 0x2a, 0xfd, 0xd0, 0x58, 0x7f, 0x1d, 0x14, 0xc1, 0x67, 0x78, 0xd6, 0x9e, 0xf9, 0x09, 0xd4,
	0x9f, 0xfe, 0xe8, 0xc0, 0x7f, 0xee, 0x67, 0x8c, 0x5d, 0xc2, 0xff, 0x4b, 0xe3, 0x9b, 0x0d, 0xf5,
	0xd8, 0x6c, 0xfb, 0x7c, 0x0d, 0x8f, 0x5b, 0xf7, 0x0c, 0xd7, 0x09, 0xec, 0x3a, 0x23, 0x8d, 0xf9,
	0x3a, 0xba, 0x39, 0x6a, 0x87, 0x47, 0x2d, 0x3b, 0x8f, 0x28, 0xce, 0x4c, 0xb1, 0x28, 0xcd, 0xc1,
	0x64, 0x51, 0xda, 0x46, 0xd0, 0x04, 0x76, 0x9d, 0x96, 0xb6, 0x28, 0xcd, 0x99, 0x61, 0x51, 0xda,
	0x26, 0x80, 0xe2, 0xd2, 0x82, 0xd2, 0x6c, 0xd9, 0x47, 0x2e, 0xad, 0x28, 0xce, 0xc3, 0xb6, 0x28,
	0xcd, 0x8e, 0xb1, 0x28, 0x6d, 0x7d, 0x10, 0xc1, 0x61, 0xfb, 0x4b, 0x61, 0x2f, 0xf4, 0xa1, 0x15,
	0x2f, 0x78, 0x18, 0xac, 0x0a, 0xd1, 0x09, 0xa6, 0x3d, 0xf5, 0xab, 0xf3, 0xea, 0x77, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x5d, 0xb1, 0xf2, 0xe0, 0x0d, 0x09, 0x00, 0x00,
}
