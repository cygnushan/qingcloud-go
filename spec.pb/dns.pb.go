// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dns.proto

package spec

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/any"
import _ "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/golang/protobuf/ptypes/wrappers"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import request_data_pkg "github.com/chai2010/qingcloud-go/request/data"
import "github.com/chai2010/qingcloud-go/request/errors"

var _ = config.Config{}
var _ = request.Request{}
var _ = request_data_pkg.Operation{}
var _ = errors.ParameterRequiredError{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DNSAliasServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *DNSAliasServiceProperties) Reset()                    { *m = DNSAliasServiceProperties{} }
func (m *DNSAliasServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*DNSAliasServiceProperties) ProtoMessage()               {}
func (*DNSAliasServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *DNSAliasServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type DescribeDNSAliasesInput struct {
}

func (m *DescribeDNSAliasesInput) Reset()                    { *m = DescribeDNSAliasesInput{} }
func (m *DescribeDNSAliasesInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeDNSAliasesInput) ProtoMessage()               {}
func (*DescribeDNSAliasesInput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

type DescribeDNSAliasesOutput struct {
}

func (m *DescribeDNSAliasesOutput) Reset()                    { *m = DescribeDNSAliasesOutput{} }
func (m *DescribeDNSAliasesOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeDNSAliasesOutput) ProtoMessage()               {}
func (*DescribeDNSAliasesOutput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

type AssociateDNSAliasInput struct {
}

func (m *AssociateDNSAliasInput) Reset()                    { *m = AssociateDNSAliasInput{} }
func (m *AssociateDNSAliasInput) String() string            { return proto.CompactTextString(m) }
func (*AssociateDNSAliasInput) ProtoMessage()               {}
func (*AssociateDNSAliasInput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

type AssociateDNSAliasOutput struct {
}

func (m *AssociateDNSAliasOutput) Reset()                    { *m = AssociateDNSAliasOutput{} }
func (m *AssociateDNSAliasOutput) String() string            { return proto.CompactTextString(m) }
func (*AssociateDNSAliasOutput) ProtoMessage()               {}
func (*AssociateDNSAliasOutput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{4} }

type DissociateDNSAliasesInput struct {
}

func (m *DissociateDNSAliasesInput) Reset()                    { *m = DissociateDNSAliasesInput{} }
func (m *DissociateDNSAliasesInput) String() string            { return proto.CompactTextString(m) }
func (*DissociateDNSAliasesInput) ProtoMessage()               {}
func (*DissociateDNSAliasesInput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{5} }

type DissociateDNSAliasesOutput struct {
}

func (m *DissociateDNSAliasesOutput) Reset()                    { *m = DissociateDNSAliasesOutput{} }
func (m *DissociateDNSAliasesOutput) String() string            { return proto.CompactTextString(m) }
func (*DissociateDNSAliasesOutput) ProtoMessage()               {}
func (*DissociateDNSAliasesOutput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{6} }

type GetDNSLabelInput struct {
}

func (m *GetDNSLabelInput) Reset()                    { *m = GetDNSLabelInput{} }
func (m *GetDNSLabelInput) String() string            { return proto.CompactTextString(m) }
func (*GetDNSLabelInput) ProtoMessage()               {}
func (*GetDNSLabelInput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{7} }

type GetDNSLabelOutput struct {
}

func (m *GetDNSLabelOutput) Reset()                    { *m = GetDNSLabelOutput{} }
func (m *GetDNSLabelOutput) String() string            { return proto.CompactTextString(m) }
func (*GetDNSLabelOutput) ProtoMessage()               {}
func (*GetDNSLabelOutput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{8} }

func init() {
	proto.RegisterType((*DNSAliasServiceProperties)(nil), "spec.DNSAliasServiceProperties")
	proto.RegisterType((*DescribeDNSAliasesInput)(nil), "spec.DescribeDNSAliasesInput")
	proto.RegisterType((*DescribeDNSAliasesOutput)(nil), "spec.DescribeDNSAliasesOutput")
	proto.RegisterType((*AssociateDNSAliasInput)(nil), "spec.AssociateDNSAliasInput")
	proto.RegisterType((*AssociateDNSAliasOutput)(nil), "spec.AssociateDNSAliasOutput")
	proto.RegisterType((*DissociateDNSAliasesInput)(nil), "spec.DissociateDNSAliasesInput")
	proto.RegisterType((*DissociateDNSAliasesOutput)(nil), "spec.DissociateDNSAliasesOutput")
	proto.RegisterType((*GetDNSLabelInput)(nil), "spec.GetDNSLabelInput")
	proto.RegisterType((*GetDNSLabelOutput)(nil), "spec.GetDNSLabelOutput")
}

type DNSAliasServiceInterface interface {
	DescribeDNSAliases(in *DescribeDNSAliasesInput) (out *DescribeDNSAliasesOutput, err error)
	AssociateDNSAlias(in *AssociateDNSAliasInput) (out *AssociateDNSAliasOutput, err error)
	DissociateDNSAliases(in *DissociateDNSAliasesInput) (out *DissociateDNSAliasesOutput, err error)
	GetDNSLabel(in *GetDNSLabelInput) (out *GetDNSLabelOutput, err error)
}

type DNSAliasService struct {
	Config     *config.Config
	Properties *DNSAliasServiceProperties
}

func NewDNSAliasService(conf *config.Config, zone string) (p *DNSAliasService, err error) {
	return &DNSAliasService{
		Config:     conf,
		Properties: &DNSAliasServiceProperties{Zone: zone},
	}, nil
}

func (p *DNSAliasService) DescribeDNSAliases(in *DescribeDNSAliasesInput) (out *DescribeDNSAliasesOutput, err error) {
	if in == nil {
		in = &DescribeDNSAliasesInput{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeDNSAliases",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeDNSAliasesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *DNSAliasService) AssociateDNSAlias(in *AssociateDNSAliasInput) (out *AssociateDNSAliasOutput, err error) {
	if in == nil {
		in = &AssociateDNSAliasInput{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "AssociateDNSAlias",
		RequestMethod: "GET", // GET or POST
	}

	x := &AssociateDNSAliasOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *DNSAliasService) DissociateDNSAliases(in *DissociateDNSAliasesInput) (out *DissociateDNSAliasesOutput, err error) {
	if in == nil {
		in = &DissociateDNSAliasesInput{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DissociateDNSAliases",
		RequestMethod: "GET", // GET or POST
	}

	x := &DissociateDNSAliasesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *DNSAliasService) GetDNSLabel(in *GetDNSLabelInput) (out *GetDNSLabelOutput, err error) {
	if in == nil {
		in = &GetDNSLabelInput{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "GetDNSLabel",
		RequestMethod: "GET", // GET or POST
	}

	x := &GetDNSLabelOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func init() { proto.RegisterFile("dns.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x5f, 0x4b, 0xc3, 0x30,
	0x14, 0xc5, 0x99, 0x0c, 0x61, 0xd7, 0x07, 0x5d, 0x94, 0x6d, 0xcd, 0xfe, 0xb2, 0x27, 0x9f, 0x56,
	0xd0, 0x77, 0x61, 0x50, 0x10, 0x41, 0xe6, 0xb0, 0x4f, 0x3e, 0xa6, 0xf5, 0x3a, 0x02, 0x6d, 0x13,
	0x92, 0x54, 0xd1, 0xaf, 0xe9, 0x17, 0x92, 0x35, 0xa9, 0x8c, 0xb4, 0x7d, 0x0b, 0xf7, 0x77, 0xce,
	0xbd, 0xb9, 0x27, 0x81, 0xc1, 0x7b, 0xa1, 0x37, 0x52, 0x09, 0x23, 0x48, 0x5f, 0x4b, 0x4c, 0x69,
	0x70, 0x10, 0xe2, 0x90, 0x61, 0x58, 0xd5, 0x92, 0xf2, 0x23, 0x64, 0xc5, 0xb7, 0x15, 0xd0, 0xa9,
	0x8f, 0x30, 0x97, 0xa6, 0x86, 0x4b, 0x1f, 0x1a, 0x9e, 0xa3, 0x36, 0x2c, 0x97, 0x4e, 0xb0, 0xf0,
	0x05, 0x5f, 0x8a, 0x49, 0x89, 0xca, 0x8d, 0x5f, 0x87, 0x10, 0x44, 0xbb, 0x78, 0x9b, 0x71, 0xa6,
	0x63, 0x54, 0x9f, 0x3c, 0xc5, 0xbd, 0x12, 0x12, 0x95, 0xe1, 0xa8, 0x09, 0x81, 0xfe, 0x8f, 0x28,
	0x70, 0xd2, 0x5b, 0xf5, 0x6e, 0x07, 0xaf, 0xd5, 0x79, 0x1d, 0xc0, 0x38, 0x42, 0x9d, 0x2a, 0x9e,
	0x60, 0x6d, 0x44, 0xfd, 0x54, 0xc8, 0xd2, 0xac, 0x29, 0x4c, 0x9a, 0xe8, 0xa5, 0x34, 0x47, 0x36,
	0x81, 0xd1, 0x56, 0x6b, 0x91, 0x72, 0x66, 0xfe, 0xa1, 0x75, 0x05, 0x30, 0x6e, 0x10, 0x67, 0x9a,
	0x42, 0x10, 0x71, 0x9f, 0xd5, 0xd3, 0x66, 0x40, 0xdb, 0xa0, 0xb3, 0x12, 0xb8, 0x7a, 0x44, 0x13,
	0xed, 0xe2, 0x67, 0x96, 0x60, 0x66, 0x1d, 0xd7, 0x30, 0x3c, 0xa9, 0x59, 0xe1, 0xdd, 0xef, 0x19,
	0x5c, 0x7a, 0x09, 0x90, 0x18, 0x48, 0x73, 0x11, 0x32, 0xdf, 0x1c, 0x9f, 0x6a, 0xd3, 0xb1, 0x3d,
	0x5d, 0x74, 0x61, 0x3b, 0x88, 0xec, 0x61, 0xd8, 0xd8, 0x93, 0xcc, 0xac, 0xa9, 0x3d, 0x1a, 0x3a,
	0xef, 0xa0, 0xae, 0xe3, 0x1b, 0xdc, 0xb4, 0x25, 0x40, 0x96, 0xee, 0x26, 0x5d, 0xd1, 0xd1, 0x55,
	0xb7, 0xc0, 0xb5, 0x7e, 0x80, 0x8b, 0x93, 0xa8, 0xc8, 0xc8, 0x1a, 0xfc, 0x44, 0xe9, 0xb8, 0x51,
	0xb7, 0xfe, 0xe4, 0xbc, 0xfa, 0x5d, 0xf7, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3e, 0x31, 0xd1,
	0xa1, 0xe9, 0x02, 0x00, 0x00,
}
