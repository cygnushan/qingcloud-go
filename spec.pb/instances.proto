// Copyright 2017 <chaishushan{AT}gmail.com>. All rights reserved.
// Use of this source code is governed by a Apache
// license that can be found in the LICENSE file.

syntax = "proto3";

package service;

import "types.proto";
import "qingcloud_sdk_rule/rule.proto";

import "google/protobuf/empty.proto";

// ----------------------------------------------------------------------------
// https://docs.qingcloud.com/api/instance/index.html
// ----------------------------------------------------------------------------

message InstanceServiceProperties {
	string zone = 1;
}

service InstanceService {
	option (qingcloud.sdk.rule.service_rule) = {
		service_name:     "QingCloud"
		sub_service_name: "Instance"
	};

	rpc DescribeInstances(DescribeInstancesInput) returns (DescribeInstancesOutput);
	rpc RunInstances(RunInstancesInput) returns (RunInstancesOutput);
	rpc TerminateInstances(TerminateInstancesInput) returns (TerminateInstancesOutput);
	rpc StartInstances(StartInstancesInput) returns (StartInstancesOutput);
	rpc StopInstances(StopInstancesInput) returns (StopInstancesOutput);
	rpc RestartInstances(RestartInstancesInput) returns (RestartInstancesOutput);
	rpc ResetInstances(ResetInstancesInput) returns (ResetInstancesOutput);
	rpc ResizeInstances(ResizeInstancesInput) returns (ResizeInstancesOutput);
	rpc ModifyInstanceAttributes(ModifyInstanceAttributesInput) returns (ModifyInstanceAttributesOutput);
	rpc DescribeInstanceTypes(DescribeInstanceTypesInput) returns (DescribeInstanceTypesOutput);
	rpc CreateBrokers(CreateBrokersInput) returns (CreateBrokersOutput);
	rpc DeleteBrokers(DeleteBrokersInput) returns (DeleteBrokersOutput);
}

message DescribeInstancesInput {
	repeated string image_id = 1;
	int32 instance_class = 2;
	repeated string instance_type = 3;
	repeated string instances = 4;
	int32 is_cluster_node = 5;
	int32 limit = 6;
	int32 offset = 7;
	string search_word = 8;
	repeated string status = 9;
	repeated string tags = 10;
	int32 verbose = 11;
}
message DescribeInstancesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

	repeated Instance instance_set = 4;
	int32 total_count = 5;
}

message RunInstancesInput {
	string billing_id = 1;
	int32 count = 2;
	int32 cpu = 3;
	string hostname = 4;
	string image_id = 5;
	int32 instance_class = 6;
	string instance_name = 7;
	string instance_type = 8;
	string login_keypair = 9;
	string login_mode = 10;
	string login_passwd = 11;
	int32 memory = 12;
	int32 need_newsid = 13;
	int32 need_userdata = 14;
	string security_group = 15;
	string ui_type = 16;
	string userdata_file = 17;
	string userdata_path = 18;
	string userdata_type = 19;
	string userdata_value = 20;
	repeated string volumes = 21;
	repeated string vxnets = 22;
}

message RunInstancesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

	repeated string instances = 4;
	string job_id = 5;
}

message TerminateInstancesInput {
	repeated string instances = 1;
}
message TerminateInstancesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

	string job_id = 4;
}

message StartInstancesInput {
	repeated string instances = 1;
}
message StartInstancesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

	string job_id = 4;
}

message StopInstancesInput {
	int32 force = 1;
	repeated string instances = 2;
}
message StopInstancesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

	string job_id = 4;
}

message RestartInstancesInput {
	repeated string instances = 1;
}

message RestartInstancesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

	string job_id = 4;
}

message ResetInstancesInput {}
message ResetInstancesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

}

message ResizeInstancesInput {}
message ResizeInstancesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

}

message ModifyInstanceAttributesInput {}
message ModifyInstanceAttributesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

}


// ----------------------------------------------------------------------------
//
// DescribeInstanceTypes
// https://docs.qingcloud.com/api/instance/describe_instance_types.html
//
// ----------------------------------------------------------------------------
//
// Example Request:
//
// https://api.qingcloud.com/iaas/?action=DescribeInstanceTypes
// &instance_types.1=c1m1
// &zone=pek2
// &COMMON_PARAMS
//
// Example Response:
//
// {
//    "action":"DescribeInstanceTypesResponse",
//    "total_count":1,
//    "instance_type_set":[
//      {
//        "vcpus_current":1,
//        "status":"available",
//        "description":"",
//        "instance_type_name":"1核1G",
//        "instance_type_id":"c1m1",
//        "zone_id":"pek2",
//        "memory_current":1024
//      }
//    ],
//    "ret_code":0
//  }
//
// ----------------------------------------------------------------------------

message DescribeInstanceTypesInput {
	string action = 1;                  // 用来标识所请求指令
	string zone = 2;                    // 区域 ID, 例如 pek3a
	repeated string instance_types = 3; // 指定查询的主机类型
}

message DescribeInstanceTypesOutput {
	string action = 1;                                  // 响应动作
	int32 ret_code = 2;                                 // 状态码

	repeated InstanceTypeSetElem instance_type_set = 3; // 主机类型列表
	int32 total_count = 4;                              // 根据过滤条件得到的主机类型总数

	message InstanceTypeSetElem {
		string instance_type_id = 1;   // 主机类型ID
		string instance_type_name = 2; // 主机类型名称
		string description = 3;        // 主机类型描述
		int32 vcpus_current = 4;       // 主机类型CPU核心数目
		int32 memory_current = 5;      // 主机类型内存大小, 单位为MB
		string status = 6;             // 主机类型状态. enum: {available, deprecated}
	}
}

message CreateBrokersInput {}
message CreateBrokersOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

}

message DeleteBrokersInput {}
message DeleteBrokersOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;
}

// ----------------------------------------------------------------------------
// END
// ----------------------------------------------------------------------------
