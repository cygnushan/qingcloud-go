// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nic.proto

package spec

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import request_data_pkg "github.com/chai2010/qingcloud-go/request/data"
import "github.com/chai2010/qingcloud-go/request/errors"

var _ = config.Config{}
var _ = request.Request{}
var _ = request_data_pkg.Operation{}
var _ = errors.ParameterRequiredError{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type NicServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *NicServiceProperties) Reset()                    { *m = NicServiceProperties{} }
func (m *NicServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*NicServiceProperties) ProtoMessage()               {}
func (*NicServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{0} }

func (m *NicServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type CreateNicsInput struct {
}

func (m *CreateNicsInput) Reset()                    { *m = CreateNicsInput{} }
func (m *CreateNicsInput) String() string            { return proto.CompactTextString(m) }
func (*CreateNicsInput) ProtoMessage()               {}
func (*CreateNicsInput) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{1} }

type CreateNicsOutput struct {
}

func (m *CreateNicsOutput) Reset()                    { *m = CreateNicsOutput{} }
func (m *CreateNicsOutput) String() string            { return proto.CompactTextString(m) }
func (*CreateNicsOutput) ProtoMessage()               {}
func (*CreateNicsOutput) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{2} }

type DescribeNicsInput struct {
	Instances []string `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
	Limit     int32    `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	NicName   string   `protobuf:"bytes,3,opt,name=nic_name,json=nicName" json:"nic_name,omitempty"`
	Nics      []string `protobuf:"bytes,4,rep,name=nics" json:"nics,omitempty"`
	Offset    int32    `protobuf:"varint,5,opt,name=offset" json:"offset,omitempty"`
	Status    string   `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	VxnetType int32    `protobuf:"varint,7,opt,name=vxnet_type,json=vxnetType" json:"vxnet_type,omitempty"`
	Vxnets    []string `protobuf:"bytes,8,rep,name=vxnets" json:"vxnets,omitempty"`
}

func (m *DescribeNicsInput) Reset()                    { *m = DescribeNicsInput{} }
func (m *DescribeNicsInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeNicsInput) ProtoMessage()               {}
func (*DescribeNicsInput) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{3} }

func (m *DescribeNicsInput) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *DescribeNicsInput) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeNicsInput) GetNicName() string {
	if m != nil {
		return m.NicName
	}
	return ""
}

func (m *DescribeNicsInput) GetNics() []string {
	if m != nil {
		return m.Nics
	}
	return nil
}

func (m *DescribeNicsInput) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeNicsInput) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DescribeNicsInput) GetVxnetType() int32 {
	if m != nil {
		return m.VxnetType
	}
	return 0
}

func (m *DescribeNicsInput) GetVxnets() []string {
	if m != nil {
		return m.Vxnets
	}
	return nil
}

type DescribeNicsOutput struct {
	Message    string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Action     string `protobuf:"bytes,2,opt,name=action" json:"action,omitempty"`
	NicSet     []*NIC `protobuf:"bytes,3,rep,name=nic_set,json=nicSet" json:"nic_set,omitempty"`
	RetCode    int32  `protobuf:"varint,4,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	TotalCount int32  `protobuf:"varint,5,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *DescribeNicsOutput) Reset()                    { *m = DescribeNicsOutput{} }
func (m *DescribeNicsOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeNicsOutput) ProtoMessage()               {}
func (*DescribeNicsOutput) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{4} }

func (m *DescribeNicsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeNicsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeNicsOutput) GetNicSet() []*NIC {
	if m != nil {
		return m.NicSet
	}
	return nil
}

func (m *DescribeNicsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeNicsOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type NIC struct {
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	InstanceId       string                      `protobuf:"bytes,2,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	NicId            string                      `protobuf:"bytes,3,opt,name=nic_id,json=nicId" json:"nic_id,omitempty"`
	NicName          string                      `protobuf:"bytes,4,opt,name=nic_name,json=nicName" json:"nic_name,omitempty"`
	Owner            string                      `protobuf:"bytes,5,opt,name=owner" json:"owner,omitempty"`
	PrivateIp        string                      `protobuf:"bytes,6,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	Role             int32                       `protobuf:"varint,7,opt,name=role" json:"role,omitempty"`
	RootUserId       string                      `protobuf:"bytes,8,opt,name=root_user_id,json=rootUserId" json:"root_user_id,omitempty"`
	SecurityGroup    string                      `protobuf:"bytes,9,opt,name=security_group,json=securityGroup" json:"security_group,omitempty"`
	Sequence         int32                       `protobuf:"varint,10,opt,name=sequence" json:"sequence,omitempty"`
	Status           string                      `protobuf:"bytes,11,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,12,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,13,rep,name=tags" json:"tags,omitempty"`
	VxnetId          string                      `protobuf:"bytes,14,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
	Eip              *Eip                        `protobuf:"bytes,15,opt,name=eip" json:"eip,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,16,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	Controller       string                      `protobuf:"bytes,17,opt,name=controller" json:"controller,omitempty"`
	VxnetType        int32                       `protobuf:"varint,18,opt,name=vxnet_type,json=vxnetType" json:"vxnet_type,omitempty"`
	ConsoleId        string                      `protobuf:"bytes,19,opt,name=console_id,json=consoleId" json:"console_id,omitempty"`
	ResourceId       string                      `protobuf:"bytes,20,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
}

func (m *NIC) Reset()                    { *m = NIC{} }
func (m *NIC) String() string            { return proto.CompactTextString(m) }
func (*NIC) ProtoMessage()               {}
func (*NIC) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{5} }

func (m *NIC) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *NIC) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *NIC) GetNicId() string {
	if m != nil {
		return m.NicId
	}
	return ""
}

func (m *NIC) GetNicName() string {
	if m != nil {
		return m.NicName
	}
	return ""
}

func (m *NIC) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *NIC) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *NIC) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *NIC) GetRootUserId() string {
	if m != nil {
		return m.RootUserId
	}
	return ""
}

func (m *NIC) GetSecurityGroup() string {
	if m != nil {
		return m.SecurityGroup
	}
	return ""
}

func (m *NIC) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *NIC) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *NIC) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *NIC) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *NIC) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

func (m *NIC) GetEip() *Eip {
	if m != nil {
		return m.Eip
	}
	return nil
}

func (m *NIC) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *NIC) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *NIC) GetVxnetType() int32 {
	if m != nil {
		return m.VxnetType
	}
	return 0
}

func (m *NIC) GetConsoleId() string {
	if m != nil {
		return m.ConsoleId
	}
	return ""
}

func (m *NIC) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

type Eip struct {
	EipId     string `protobuf:"bytes,1,opt,name=eip_id,json=eipId" json:"eip_id,omitempty"`
	EipAddr   string `protobuf:"bytes,2,opt,name=eip_addr,json=eipAddr" json:"eip_addr,omitempty"`
	Bandwidth int32  `protobuf:"varint,3,opt,name=bandwidth" json:"bandwidth,omitempty"`
}

func (m *Eip) Reset()                    { *m = Eip{} }
func (m *Eip) String() string            { return proto.CompactTextString(m) }
func (*Eip) ProtoMessage()               {}
func (*Eip) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{6} }

func (m *Eip) GetEipId() string {
	if m != nil {
		return m.EipId
	}
	return ""
}

func (m *Eip) GetEipAddr() string {
	if m != nil {
		return m.EipAddr
	}
	return ""
}

func (m *Eip) GetBandwidth() int32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

type Tag struct {
	Color             string                      `protobuf:"bytes,1,opt,name=color" json:"color,omitempty"`
	CreateTime        *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description       string                      `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Owner             string                      `protobuf:"bytes,4,opt,name=owner" json:"owner,omitempty"`
	ResourceCount     int32                       `protobuf:"varint,5,opt,name=resource_count,json=resourceCount" json:"resource_count,omitempty"`
	ResourceTagPairs  []*ResourceTagPair          `protobuf:"bytes,6,rep,name=resource_tag_pairs,json=resourceTagPairs" json:"resource_tag_pairs,omitempty"`
	ResourceTypeCount []*ResourceTypeCount        `protobuf:"bytes,7,rep,name=resource_type_count,json=resourceTypeCount" json:"resource_type_count,omitempty"`
	TagId             string                      `protobuf:"bytes,8,opt,name=tag_id,json=tagId" json:"tag_id,omitempty"`
	TagKey            string                      `protobuf:"bytes,9,opt,name=tag_key,json=tagKey" json:"tag_key,omitempty"`
	TagName           string                      `protobuf:"bytes,10,opt,name=tag_name,json=tagName" json:"tag_name,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{7} }

func (m *Tag) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *Tag) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Tag) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Tag) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Tag) GetResourceCount() int32 {
	if m != nil {
		return m.ResourceCount
	}
	return 0
}

func (m *Tag) GetResourceTagPairs() []*ResourceTagPair {
	if m != nil {
		return m.ResourceTagPairs
	}
	return nil
}

func (m *Tag) GetResourceTypeCount() []*ResourceTypeCount {
	if m != nil {
		return m.ResourceTypeCount
	}
	return nil
}

func (m *Tag) GetTagId() string {
	if m != nil {
		return m.TagId
	}
	return ""
}

func (m *Tag) GetTagKey() string {
	if m != nil {
		return m.TagKey
	}
	return ""
}

func (m *Tag) GetTagName() string {
	if m != nil {
		return m.TagName
	}
	return ""
}

type ResourceTagPair struct {
	ResourceId   string                      `protobuf:"bytes,1,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	ResourceType string                      `protobuf:"bytes,2,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
	Status       string                      `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	StatusTime   *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	TagId        string                      `protobuf:"bytes,5,opt,name=tag_id,json=tagId" json:"tag_id,omitempty"`
}

func (m *ResourceTagPair) Reset()                    { *m = ResourceTagPair{} }
func (m *ResourceTagPair) String() string            { return proto.CompactTextString(m) }
func (*ResourceTagPair) ProtoMessage()               {}
func (*ResourceTagPair) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{8} }

func (m *ResourceTagPair) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *ResourceTagPair) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *ResourceTagPair) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ResourceTagPair) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *ResourceTagPair) GetTagId() string {
	if m != nil {
		return m.TagId
	}
	return ""
}

type ResourceTypeCount struct {
	Count        int32  `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	ResourceType string `protobuf:"bytes,2,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
}

func (m *ResourceTypeCount) Reset()                    { *m = ResourceTypeCount{} }
func (m *ResourceTypeCount) String() string            { return proto.CompactTextString(m) }
func (*ResourceTypeCount) ProtoMessage()               {}
func (*ResourceTypeCount) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{9} }

func (m *ResourceTypeCount) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ResourceTypeCount) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

type AttachNicsInput struct {
}

func (m *AttachNicsInput) Reset()                    { *m = AttachNicsInput{} }
func (m *AttachNicsInput) String() string            { return proto.CompactTextString(m) }
func (*AttachNicsInput) ProtoMessage()               {}
func (*AttachNicsInput) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{10} }

type AttachNicsOutput struct {
}

func (m *AttachNicsOutput) Reset()                    { *m = AttachNicsOutput{} }
func (m *AttachNicsOutput) String() string            { return proto.CompactTextString(m) }
func (*AttachNicsOutput) ProtoMessage()               {}
func (*AttachNicsOutput) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{11} }

type DetachNicsInput struct {
}

func (m *DetachNicsInput) Reset()                    { *m = DetachNicsInput{} }
func (m *DetachNicsInput) String() string            { return proto.CompactTextString(m) }
func (*DetachNicsInput) ProtoMessage()               {}
func (*DetachNicsInput) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{12} }

type DetachNicsOutput struct {
}

func (m *DetachNicsOutput) Reset()                    { *m = DetachNicsOutput{} }
func (m *DetachNicsOutput) String() string            { return proto.CompactTextString(m) }
func (*DetachNicsOutput) ProtoMessage()               {}
func (*DetachNicsOutput) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{13} }

type ModifyNicAttributesInput struct {
}

func (m *ModifyNicAttributesInput) Reset()                    { *m = ModifyNicAttributesInput{} }
func (m *ModifyNicAttributesInput) String() string            { return proto.CompactTextString(m) }
func (*ModifyNicAttributesInput) ProtoMessage()               {}
func (*ModifyNicAttributesInput) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{14} }

type ModifyNicAttributesOutput struct {
}

func (m *ModifyNicAttributesOutput) Reset()                    { *m = ModifyNicAttributesOutput{} }
func (m *ModifyNicAttributesOutput) String() string            { return proto.CompactTextString(m) }
func (*ModifyNicAttributesOutput) ProtoMessage()               {}
func (*ModifyNicAttributesOutput) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{15} }

type DeleteNicsInput struct {
}

func (m *DeleteNicsInput) Reset()                    { *m = DeleteNicsInput{} }
func (m *DeleteNicsInput) String() string            { return proto.CompactTextString(m) }
func (*DeleteNicsInput) ProtoMessage()               {}
func (*DeleteNicsInput) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{16} }

type DeleteNicsOutput struct {
}

func (m *DeleteNicsOutput) Reset()                    { *m = DeleteNicsOutput{} }
func (m *DeleteNicsOutput) String() string            { return proto.CompactTextString(m) }
func (*DeleteNicsOutput) ProtoMessage()               {}
func (*DeleteNicsOutput) Descriptor() ([]byte, []int) { return fileDescriptor15, []int{17} }

func init() {
	proto.RegisterType((*NicServiceProperties)(nil), "spec.NicServiceProperties")
	proto.RegisterType((*CreateNicsInput)(nil), "spec.CreateNicsInput")
	proto.RegisterType((*CreateNicsOutput)(nil), "spec.CreateNicsOutput")
	proto.RegisterType((*DescribeNicsInput)(nil), "spec.DescribeNicsInput")
	proto.RegisterType((*DescribeNicsOutput)(nil), "spec.DescribeNicsOutput")
	proto.RegisterType((*NIC)(nil), "spec.NIC")
	proto.RegisterType((*Eip)(nil), "spec.Eip")
	proto.RegisterType((*Tag)(nil), "spec.Tag")
	proto.RegisterType((*ResourceTagPair)(nil), "spec.ResourceTagPair")
	proto.RegisterType((*ResourceTypeCount)(nil), "spec.ResourceTypeCount")
	proto.RegisterType((*AttachNicsInput)(nil), "spec.AttachNicsInput")
	proto.RegisterType((*AttachNicsOutput)(nil), "spec.AttachNicsOutput")
	proto.RegisterType((*DetachNicsInput)(nil), "spec.DetachNicsInput")
	proto.RegisterType((*DetachNicsOutput)(nil), "spec.DetachNicsOutput")
	proto.RegisterType((*ModifyNicAttributesInput)(nil), "spec.ModifyNicAttributesInput")
	proto.RegisterType((*ModifyNicAttributesOutput)(nil), "spec.ModifyNicAttributesOutput")
	proto.RegisterType((*DeleteNicsInput)(nil), "spec.DeleteNicsInput")
	proto.RegisterType((*DeleteNicsOutput)(nil), "spec.DeleteNicsOutput")
}

type NicServiceInterface interface {
	CreateNics(in *CreateNicsInput) (out *CreateNicsOutput, err error)
	DescribeNics(in *DescribeNicsInput) (out *DescribeNicsOutput, err error)
	AttachNics(in *AttachNicsInput) (out *AttachNicsOutput, err error)
	DetachNics(in *DetachNicsInput) (out *DetachNicsOutput, err error)
	ModifyNicAttributes(in *ModifyNicAttributesInput) (out *ModifyNicAttributesOutput, err error)
	DeleteNics(in *DeleteNicsInput) (out *DeleteNicsOutput, err error)
}

type NicService struct {
	Config     *config.Config
	Properties *NicServiceProperties
}

func NewNicService(conf *config.Config, zone string) (p *NicService, err error) {
	return &NicService{
		Config:     conf,
		Properties: &NicServiceProperties{Zone: zone},
	}, nil
}

func (p *NicService) CreateNics(in *CreateNicsInput) (out *CreateNicsOutput, err error) {
	if in == nil {
		in = &CreateNicsInput{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateNics",
		RequestMethod: "GET", // GET or POST
	}

	x := &CreateNicsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *NicService) DescribeNics(in *DescribeNicsInput) (out *DescribeNicsOutput, err error) {
	if in == nil {
		in = &DescribeNicsInput{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeNics",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeNicsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *NicService) AttachNics(in *AttachNicsInput) (out *AttachNicsOutput, err error) {
	if in == nil {
		in = &AttachNicsInput{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "AttachNics",
		RequestMethod: "GET", // GET or POST
	}

	x := &AttachNicsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *NicService) DetachNics(in *DetachNicsInput) (out *DetachNicsOutput, err error) {
	if in == nil {
		in = &DetachNicsInput{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DetachNics",
		RequestMethod: "GET", // GET or POST
	}

	x := &DetachNicsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *NicService) ModifyNicAttributes(in *ModifyNicAttributesInput) (out *ModifyNicAttributesOutput, err error) {
	if in == nil {
		in = &ModifyNicAttributesInput{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifyNicAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &ModifyNicAttributesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *NicService) DeleteNics(in *DeleteNicsInput) (out *DeleteNicsOutput, err error) {
	if in == nil {
		in = &DeleteNicsInput{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteNics",
		RequestMethod: "GET", // GET or POST
	}

	x := &DeleteNicsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func init() { proto.RegisterFile("nic.proto", fileDescriptor15) }

var fileDescriptor15 = []byte{
	// 1051 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xdd, 0x6e, 0xdb, 0x36,
	0x14, 0x86, 0x2b, 0x3b, 0x8e, 0x8f, 0xf3, 0x67, 0x26, 0x6d, 0x55, 0x77, 0x69, 0x0c, 0x0f, 0x05,
	0x82, 0x0d, 0x70, 0x81, 0xec, 0x32, 0x57, 0x81, 0x5b, 0x14, 0xc2, 0x30, 0xaf, 0x50, 0xd3, 0xdd,
	0x0a, 0xb4, 0xc4, 0xa8, 0xc4, 0x6c, 0x91, 0x23, 0xa9, 0x74, 0xde, 0x53, 0xec, 0xbe, 0xf7, 0x7b,
	0x91, 0x3d, 0xc7, 0xde, 0x65, 0x38, 0x24, 0x15, 0xc9, 0x4a, 0xbb, 0xb5, 0x77, 0x3a, 0x1f, 0x0f,
	0x0f, 0x0f, 0xbf, 0xef, 0x3b, 0xa6, 0x61, 0x50, 0xf0, 0x74, 0x26, 0x95, 0x30, 0x82, 0x74, 0xb5,
	0x64, 0xe9, 0xf8, 0x2c, 0x17, 0x22, 0x5f, 0xb1, 0x17, 0x16, 0x5b, 0x96, 0x37, 0x2f, 0x0c, 0x5f,
	0x33, 0x6d, 0xe8, 0x5a, 0xba, 0xb4, 0xe9, 0x77, 0x70, 0xb2, 0xe0, 0xe9, 0x5b, 0xa6, 0x6e, 0x79,
	0xca, 0xde, 0x28, 0x21, 0x99, 0x32, 0x9c, 0x69, 0x42, 0xa0, 0xfb, 0x87, 0x28, 0x58, 0xd8, 0x99,
	0x74, 0xce, 0x07, 0xb1, 0xfd, 0x9e, 0x8e, 0xe0, 0x70, 0xae, 0x18, 0x35, 0x6c, 0xc1, 0x53, 0x1d,
	0x15, 0xb2, 0x34, 0x53, 0x02, 0x47, 0x35, 0xf4, 0x73, 0x69, 0x10, 0xfb, 0xa7, 0x03, 0xa3, 0x97,
	0x4c, 0xa7, 0x8a, 0x2f, 0xeb, 0x4c, 0xf2, 0x0d, 0x0c, 0x78, 0xa1, 0x0d, 0x2d, 0x52, 0xa6, 0xc3,
	0xce, 0x24, 0x38, 0x1f, 0xc4, 0x35, 0x40, 0x4e, 0xa0, 0xb7, 0xe2, 0x6b, 0x6e, 0xc2, 0x07, 0x93,
	0xce, 0x79, 0x2f, 0x76, 0x01, 0x79, 0x02, 0xbb, 0x05, 0x4f, 0x93, 0x82, 0xae, 0x59, 0x18, 0xd8,
	0x46, 0xfa, 0x05, 0x4f, 0x17, 0x74, 0xcd, 0xb0, 0xbf, 0x82, 0xa7, 0x3a, 0xec, 0xda, 0x4a, 0xf6,
	0x9b, 0x3c, 0x82, 0x1d, 0x71, 0x73, 0xa3, 0x99, 0x09, 0x7b, 0xb6, 0x8a, 0x8f, 0x10, 0xd7, 0x86,
	0x9a, 0x52, 0x87, 0x3b, 0xb6, 0x88, 0x8f, 0xc8, 0x29, 0xc0, 0xed, 0xef, 0x05, 0x33, 0x89, 0xd9,
	0x48, 0x16, 0xf6, 0xed, 0x9e, 0x81, 0x45, 0xae, 0x37, 0x92, 0xe1, 0x36, 0x1b, 0xe8, 0x70, 0xd7,
	0x1e, 0xe2, 0xa3, 0xe9, 0x5f, 0x1d, 0x20, 0xcd, 0xfb, 0xb9, 0x6b, 0x93, 0x10, 0xfa, 0x6b, 0xa6,
	0x35, 0xcd, 0x2b, 0xd2, 0xaa, 0x10, 0x0b, 0xd1, 0xd4, 0x70, 0x51, 0xd8, 0xdb, 0x0d, 0x62, 0x1f,
	0x91, 0x29, 0xe0, 0x75, 0x12, 0x6c, 0x38, 0x98, 0x04, 0xe7, 0xc3, 0x8b, 0xc1, 0x0c, 0x45, 0x9b,
	0x2d, 0xa2, 0x79, 0xbc, 0x53, 0xa0, 0x2a, 0x96, 0x02, 0xc5, 0x4c, 0x92, 0x8a, 0x8c, 0x85, 0x5d,
	0xdb, 0x61, 0x5f, 0x31, 0x33, 0x17, 0x19, 0x23, 0x67, 0x30, 0x34, 0xc2, 0xd0, 0x55, 0x92, 0x8a,
	0xb2, 0xa8, 0xee, 0x0c, 0x16, 0x9a, 0x23, 0x32, 0xfd, 0xd8, 0x83, 0x60, 0x11, 0xcd, 0xc9, 0x25,
	0x0c, 0x53, 0x2b, 0x52, 0x82, 0xea, 0xdb, 0xee, 0x86, 0x17, 0xe3, 0x99, 0xb3, 0xc6, 0xac, 0xb2,
	0xc6, 0xec, 0xba, 0xb2, 0x46, 0x0c, 0x2e, 0x1d, 0x01, 0x3c, 0xa5, 0x92, 0x29, 0xe1, 0x99, 0xbf,
	0x01, 0x54, 0x50, 0x94, 0x91, 0x87, 0x80, 0xbd, 0xe2, 0x9a, 0x93, 0xa8, 0x57, 0xf0, 0x34, 0xca,
	0xb6, 0xb4, 0xeb, 0x6e, 0x6b, 0x77, 0x02, 0x3d, 0xf1, 0xa1, 0x60, 0xca, 0xb6, 0x3c, 0x88, 0x5d,
	0x80, 0x6a, 0x48, 0xc5, 0x6f, 0xb1, 0x4d, 0x2e, 0xbd, 0x52, 0x03, 0x8f, 0x44, 0x12, 0x05, 0x57,
	0x62, 0x55, 0xc9, 0x64, 0xbf, 0xc9, 0x04, 0xf6, 0x94, 0x10, 0x26, 0x29, 0x35, 0x53, 0xd8, 0xc0,
	0xae, 0x6b, 0x0e, 0xb1, 0x77, 0x9a, 0xa9, 0x28, 0x23, 0xcf, 0xe1, 0x40, 0xb3, 0xb4, 0x54, 0xdc,
	0x6c, 0x92, 0x5c, 0x89, 0x52, 0x86, 0x03, 0x9b, 0xb3, 0x5f, 0xa1, 0xaf, 0x11, 0x24, 0x63, 0xd8,
	0xd5, 0xec, 0xb7, 0x92, 0x15, 0x29, 0x0b, 0xc1, 0x1e, 0x70, 0x17, 0x37, 0xdc, 0x33, 0xdc, 0x72,
	0xcf, 0x25, 0x0c, 0xdd, 0x97, 0x63, 0x75, 0xef, 0xff, 0x59, 0x75, 0xe9, 0x96, 0xd5, 0x53, 0xe8,
	0x1a, 0x9a, 0xeb, 0x70, 0xbf, 0xa9, 0xfb, 0x35, 0xcd, 0x63, 0x0b, 0x23, 0x79, 0xce, 0x99, 0x3c,
	0x0b, 0x0f, 0x1c, 0x79, 0x36, 0x8e, 0x32, 0xf2, 0x14, 0x02, 0xc6, 0x65, 0x78, 0x68, 0x8f, 0xf3,
	0x1b, 0x5f, 0x71, 0x19, 0x23, 0x4a, 0xbe, 0x87, 0x91, 0x51, 0xb4, 0xd0, 0x1c, 0xfd, 0x95, 0xf8,
	0xb6, 0x8f, 0x6c, 0x81, 0xa3, 0x7a, 0xe1, 0xad, 0xbb, 0xc0, 0x33, 0x80, 0x54, 0x14, 0x46, 0x89,
	0xd5, 0x8a, 0xa9, 0x70, 0xe4, 0xb8, 0xab, 0x91, 0xd6, 0x78, 0x90, 0xf6, 0x78, 0x9c, 0xda, 0xed,
	0x5a, 0xac, 0xac, 0x2f, 0x8e, 0x9d, 0x5e, 0x1e, 0x89, 0x32, 0xf4, 0x8d, 0x62, 0x5a, 0x94, 0xca,
	0xf9, 0xe6, 0xc4, 0x4b, 0xe3, 0xa1, 0x28, 0x9b, 0xbe, 0x83, 0xe0, 0x15, 0x97, 0x68, 0x1f, 0xc6,
	0x25, 0xa6, 0xb8, 0xa9, 0xe9, 0x31, 0x2e, 0x9d, 0x7d, 0x10, 0xa6, 0x59, 0xa6, 0xbc, 0xe7, 0xfa,
	0x8c, 0xcb, 0xab, 0x2c, 0x53, 0xf8, 0x4b, 0xb2, 0xa4, 0x45, 0xf6, 0x81, 0x67, 0xe6, 0xbd, 0xf5,
	0x5c, 0x2f, 0xae, 0x81, 0xe9, 0x9f, 0x01, 0x04, 0xd7, 0x34, 0x47, 0x93, 0xa5, 0x62, 0x25, 0x54,
	0x55, 0xd6, 0x06, 0xed, 0x51, 0x78, 0xf0, 0x55, 0xa3, 0x30, 0x81, 0x61, 0x66, 0xe7, 0x5e, 0xda,
	0x61, 0x76, 0x76, 0x6f, 0x42, 0xb5, 0xb3, 0xbb, 0x4d, 0x67, 0x3f, 0x87, 0x83, 0x3b, 0x2a, 0x9a,
	0xb3, 0xba, 0x5f, 0xa1, 0x76, 0x5c, 0xc9, 0x1c, 0xc8, 0x5d, 0x9a, 0xa1, 0x79, 0x22, 0x29, 0x57,
	0xf8, 0x93, 0x85, 0x0e, 0x79, 0xe8, 0x84, 0x8e, 0xfd, 0xfa, 0x35, 0xcd, 0xdf, 0x50, 0xae, 0xe2,
	0x23, 0xb5, 0x0d, 0x68, 0xf2, 0x1a, 0x8e, 0xeb, 0x22, 0x1b, 0x59, 0x1d, 0xd8, 0xb7, 0x55, 0x1e,
	0xb7, 0xaa, 0x6c, 0xa4, 0x3b, 0x3a, 0x1e, 0xa9, 0x36, 0x84, 0xba, 0x60, 0x13, 0x77, 0x53, 0xd5,
	0x33, 0x34, 0x8f, 0x32, 0xf2, 0x18, 0xfa, 0x08, 0xff, 0xca, 0x36, 0x7e, 0x92, 0x30, 0xeb, 0x47,
	0xb6, 0x41, 0xc1, 0x70, 0xc1, 0xce, 0x3b, 0x38, 0xc1, 0x0c, 0xcd, 0x71, 0xde, 0xa7, 0x7f, 0x77,
	0xe0, 0xb0, 0xd5, 0x79, 0xdb, 0x1e, 0x9d, 0xb6, 0x3d, 0xc8, 0xb7, 0xb0, 0xbf, 0x75, 0x11, 0xef,
	0x82, 0xbd, 0x66, 0xa7, 0x8d, 0xd9, 0x0c, 0xfe, 0x6b, 0x36, 0xbb, 0x5f, 0x35, 0x9b, 0xf5, 0xcd,
	0x7b, 0x8d, 0x9b, 0x4f, 0x17, 0x30, 0xba, 0x47, 0x9c, 0x73, 0x19, 0x12, 0xdc, 0x71, 0xef, 0x96,
	0x0d, 0xbe, 0xa8, 0x77, 0x7c, 0x4d, 0xaf, 0x8c, 0xa1, 0xe9, 0xfb, 0xad, 0xd7, 0xb4, 0x86, 0xfc,
	0x6b, 0x3a, 0x82, 0xc3, 0x97, 0xec, 0x5e, 0x5a, 0x0d, 0xf9, 0xb4, 0x31, 0x84, 0x3f, 0x89, 0x8c,
	0xdf, 0x6c, 0x16, 0x3c, 0xbd, 0x32, 0x46, 0xf1, 0x65, 0x69, 0x98, 0xcf, 0x7f, 0x0a, 0x4f, 0x3e,
	0xb1, 0xd6, 0xac, 0xbf, 0x62, 0xad, 0x47, 0xbd, 0x86, 0x5c, 0xda, 0xc5, 0xc7, 0x00, 0xa0, 0xfe,
	0xa3, 0x40, 0x2e, 0x01, 0xea, 0x77, 0x9f, 0x78, 0x77, 0xb6, 0xfe, 0x1c, 0x8c, 0x1f, 0xb5, 0x61,
	0xff, 0x52, 0x5e, 0xc1, 0x5e, 0xf3, 0xfd, 0x24, 0xde, 0x96, 0xf7, 0xfe, 0x33, 0x8c, 0xc3, 0xfb,
	0x0b, 0xbe, 0xc4, 0x25, 0x40, 0xcd, 0x54, 0x75, 0x7e, 0x8b, 0xce, 0xea, 0xfc, 0x36, 0xa5, 0xb8,
	0xb9, 0xe6, 0xaf, 0xda, 0xdc, 0x22, 0xb9, 0xda, 0xdc, 0x26, 0x9a, 0xfc, 0x02, 0xc7, 0x9f, 0x20,
	0x93, 0x3c, 0x73, 0xe9, 0x9f, 0xd3, 0x60, 0x7c, 0xf6, 0xd9, 0xf5, 0x66, 0x53, 0x15, 0xe9, 0x75,
	0x53, 0x5b, 0xca, 0xd4, 0x4d, 0x6d, 0xab, 0xb3, 0xdc, 0xb1, 0x96, 0xfe, 0xe1, 0xdf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xe4, 0x8d, 0x07, 0x72, 0x00, 0x0a, 0x00, 0x00,
}
