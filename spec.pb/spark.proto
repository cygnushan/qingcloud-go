// Copyright 2017 <chaishushan{AT}gmail.com>. All rights reserved.
// Use of this source code is governed by a Apache
// license that can be found in the LICENSE file.

syntax = "proto3";

package service;

import "qingcloud_sdk_rule/rule.proto";

// ----------------------------------------------------------------------------
// https://docs.qingcloud.com/api/spark/index.html
// ----------------------------------------------------------------------------

message SparkServiceProperties {
	string zone = 1;
}

service SparkService {
	option (qingcloud.sdk.rule.service_rule) = {
		service_name:     "QingCloud"
		sub_service_name: "Spark"
	};

	rpc CreateSpark(CreateSparkInput) returns (CreateSparkOutput);
	rpc DescribeSparks(DescribeSparksInput) returns (DescribeSparksOutput);
	rpc AddSparkNodes(AddSparkNodesInput) returns (AddSparkNodesOutput);
	rpc DeleteSparkNodes(DeleteSparkNodesInput) returns (DeleteSparkNodesOutput);
	rpc StartSparks(StartSparksInput) returns (StartSparksOutput);
	rpc StopSparks(StopSparksInput) returns (StopSparksOutput);
	rpc DeleteSparks(DeleteSparksInput) returns (DeleteSparksOutput);
}

// ----------------------------------------------------------------------------

message CreateSparkInput {}
message CreateSparkOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

}

// ----------------------------------------------------------------------------

message DescribeSparksInput {}
message DescribeSparksOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

}

// ----------------------------------------------------------------------------

message AddSparkNodesInput {}
message AddSparkNodesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

}

// ----------------------------------------------------------------------------

message DeleteSparkNodesInput {}
message DeleteSparkNodesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

}

// ----------------------------------------------------------------------------

message StartSparksInput {}
message StartSparksOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

}

// ----------------------------------------------------------------------------

message StopSparksInput {}
message StopSparksOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

}

// ----------------------------------------------------------------------------

message DeleteSparksInput {}
message DeleteSparksOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

}

// ----------------------------------------------------------------------------
// END
// ----------------------------------------------------------------------------
