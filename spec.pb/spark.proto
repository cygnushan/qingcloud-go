// Copyright 2017 <chaishushan{AT}gmail.com>. All rights reserved.
// Use of this source code is governed by a Apache
// license that can be found in the LICENSE file.

syntax = "proto3";

package service;

import "types.proto";
import "qingcloud_sdk_rule/rule.proto";

// ----------------------------------------------------------------------------
// https://docs.qingcloud.com/api/spark/index.html
// ----------------------------------------------------------------------------

message SparkServiceProperties {
	string zone = 1;
}

service SparkService {
	option (qingcloud.sdk.rule.service_rule) = {
		service_name:     "QingCloud"
		sub_service_name: "Spark"
	};

	rpc CreateSpark(CreateSparkInput) returns (CreateSparkOutput);
	rpc DescribeSparks(DescribeSparksInput) returns (DescribeSparksOutput);
	rpc AddSparkNodes(AddSparkNodesInput) returns (AddSparkNodesOutput);
	rpc DeleteSparkNodes(DeleteSparkNodesInput) returns (DeleteSparkNodesOutput);
	rpc StartSparks(StartSparksInput) returns (StartSparksOutput);
	rpc StopSparks(StopSparksInput) returns (StopSparksOutput);
	rpc DeleteSparks(DeleteSparksInput) returns (DeleteSparksOutput);
}

// ----------------------------------------------------------------------------

message CreateSparkInput {
	string spark_version = 1;
	int32 node_count = 2;
	int32 enable_hdfs = 3;
	int32 spark_type = 4;
	int32 storage_size = 5;
	string vxnet = 6;
	string description = 7;
	string spark_name = 8;
	int32 spark_class = 9;
	repeated SparkPrivateIps private_ips = 10;
}
message CreateSparkOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

	string spark_id = 4;
	string spark_name = 5;
	string spark_version = 6;
	string vxnet_id = 7;
	repeated string spark_node_ids = 8;
}

// ----------------------------------------------------------------------------

message DescribeSparksInput {
	repeated string sparks = 1;
	repeated string status = 2;
	string search_word = 3;
	repeated string tags = 4;
	int32 verbose = 5;
	int32 offset = 6;
	int32 limit = 7;
}
message DescribeSparksOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

	repeated string spark_set = 4;
	int32 total_count = 5;
}

// ----------------------------------------------------------------------------

message AddSparkNodesInput {
	string spark = 1;
	int32 node_count = 2;
	string spark_node_name = 3;
	repeated SparkPrivateIps private_ips = 4;
}
message AddSparkNodesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

	string spark_id = 4;
	repeated string spark_new_node_ids = 5;
}

// ----------------------------------------------------------------------------

message DeleteSparkNodesInput {
	string spark = 1;
	repeated string spark_nodes = 2;
}
message DeleteSparkNodesOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

	string spark_id = 4;
}

// ----------------------------------------------------------------------------

message StartSparksInput {
	repeated string sparks = 1;
}
message StartSparksOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

	string job_id = 4;
}

// ----------------------------------------------------------------------------

message StopSparksInput {
	repeated string sparks = 1;
}
message StopSparksOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

	string job_id = 4;
}

// ----------------------------------------------------------------------------

message DeleteSparksInput {
	repeated string sparks = 1;
}
message DeleteSparksOutput {
	string action = 1;
	int32 ret_code = 2;
	string message = 3;

	repeated string spark_ids = 4;
	string job_id = 5;
}

// ----------------------------------------------------------------------------
// END
// ----------------------------------------------------------------------------
