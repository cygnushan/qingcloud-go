// Code generated by protoc-gen-go. DO NOT EDIT.
// source: spark.proto

package spec

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/any"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/golang/protobuf/ptypes/wrappers"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import request_data_pkg "github.com/chai2010/qingcloud-go/request/data"
import "github.com/chai2010/qingcloud-go/request/errors"

var _ = config.Config{}
var _ = request.Request{}
var _ = request_data_pkg.Operation{}
var _ = errors.ParameterRequiredError{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SparkServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *SparkServiceProperties) Reset()                    { *m = SparkServiceProperties{} }
func (m *SparkServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*SparkServiceProperties) ProtoMessage()               {}
func (*SparkServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{0} }

func (m *SparkServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func init() {
	proto.RegisterType((*SparkServiceProperties)(nil), "spec.SparkServiceProperties")
}

type SparkServiceInterface interface {
	CreateSpark(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	DescribeSparks(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	AddSparkNodes(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	DeleteSparkNodes(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	StartSparks(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	StopSparks(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	DeleteSparks(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
}

type SparkService struct {
	Config     *config.Config
	Properties *SparkServiceProperties
}

func NewSparkService(conf *config.Config, zone string) (p *SparkService, err error) {
	return &SparkService{
		Config:     conf,
		Properties: &SparkServiceProperties{Zone: zone},
	}, nil
}

func (p *SparkService) CreateSpark(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateSpark",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *SparkService) DescribeSparks(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeSparks",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *SparkService) AddSparkNodes(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "AddSparkNodes",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *SparkService) DeleteSparkNodes(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteSparkNodes",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *SparkService) StartSparks(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "StartSparks",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *SparkService) StopSparks(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "StopSparks",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}
func (p *SparkService) DeleteSparks(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &request_data_pkg.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteSparks",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func init() { proto.RegisterFile("spark.proto", fileDescriptor24) }

var fileDescriptor24 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x4f, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0xa5, 0x58, 0x04, 0x27, 0x55, 0x64, 0x0f, 0x45, 0x23, 0xa8, 0x78, 0xf2, 0x20, 0x29, 0xe8,
	0xd5, 0xfa, 0x59, 0xaf, 0x22, 0xe6, 0x17, 0x6c, 0x92, 0x67, 0x09, 0x36, 0xdd, 0x61, 0x76, 0x54,
	0xf4, 0x5f, 0xfa, 0x8f, 0xa4, 0x9b, 0x16, 0x42, 0xc0, 0x43, 0x72, 0xdb, 0x7d, 0x5f, 0xf3, 0x1e,
	0x45, 0x9e, 0xad, 0xbc, 0x27, 0x2c, 0x4e, 0x9d, 0x19, 0x7a, 0x46, 0x1e, 0x1f, 0xce, 0x9d, 0x9b,
	0x2f, 0x30, 0x09, 0x58, 0xf6, 0xf1, 0x36, 0xb1, 0xcb, 0xef, 0x5a, 0x10, 0x1f, 0xb5, 0x29, 0x54,
	0xac, 0x1b, 0xf2, 0xa4, 0x4d, 0x6a, 0x59, 0xc1, 0xab, 0xad, 0x78, 0x2d, 0x38, 0x6e, 0x0b, 0xbe,
	0xc4, 0x32, 0x43, 0x7c, 0xcd, 0x9f, 0x5d, 0xd0, 0x38, 0x5d, 0xb5, 0x49, 0x21, 0x9f, 0x65, 0x8e,
	0x17, 0x71, 0x0c, 0xd1, 0x12, 0xde, 0x18, 0x1a, 0xfe, 0xb8, 0x25, 0x0e, 0x06, 0xa7, 0x83, 0xf3,
	0x9d, 0xd7, 0xf0, 0xbe, 0xfc, 0xdd, 0xa2, 0x51, 0x53, 0x6e, 0xa6, 0x14, 0x3d, 0x0a, 0xac, 0x22,
	0xa0, 0x66, 0x9c, 0xd4, 0xe7, 0x92, 0xcd, 0xb9, 0xe4, 0x69, 0x55, 0x36, 0xfe, 0x07, 0x37, 0x77,
	0xb4, 0x37, 0x83, 0xcf, 0xa5, 0xcc, 0xea, 0x00, 0xdf, 0x39, 0xe1, 0x96, 0x76, 0xef, 0x8b, 0x22,
	0x98, 0x9f, 0x5d, 0x81, 0xee, 0x01, 0x0f, 0xb4, 0x3f, 0xc3, 0x02, 0xeb, 0x05, 0xfd, 0x32, 0xa6,
	0x14, 0xa5, 0x6a, 0x45, 0x7b, 0x6e, 0xb8, 0x26, 0x4a, 0xd5, 0x71, 0x4f, 0xf7, 0x0d, 0x8d, 0x1a,
	0x03, 0x3a, 0xfb, 0xb3, 0xed, 0xf0, 0xbf, 0xfa, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x7d, 0x1c, 0x11,
	0x80, 0x96, 0x02, 0x00, 0x00,
}
