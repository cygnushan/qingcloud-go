// Code generated by protoc-gen-go. DO NOT EDIT.
// source: qingcloud_sdk_rule/rule.proto

/*
Package qingcloud_sdk_rule is a generated protocol buffer package.

It is generated from these files:
	qingcloud_sdk_rule/rule.proto

It has these top-level messages:
	ServiceRule
	MethodRule
	MethodInputRule
*/
package qingcloud_sdk_rule

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 服务规则
// 有主服务和子服务之分, 子服务隶属于某个主服务
type ServiceRule struct {
	DocUrl         string `protobuf:"bytes,1,opt,name=doc_url,json=docUrl" json:"doc_url,omitempty"`
	ServiceName    string `protobuf:"bytes,2,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	SubServiceName string `protobuf:"bytes,3,opt,name=sub_service_name,json=subServiceName" json:"sub_service_name,omitempty"`
}

func (m *ServiceRule) Reset()                    { *m = ServiceRule{} }
func (m *ServiceRule) String() string            { return proto.CompactTextString(m) }
func (*ServiceRule) ProtoMessage()               {}
func (*ServiceRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ServiceRule) GetDocUrl() string {
	if m != nil {
		return m.DocUrl
	}
	return ""
}

func (m *ServiceRule) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ServiceRule) GetSubServiceName() string {
	if m != nil {
		return m.SubServiceName
	}
	return ""
}

// 方法规则
type MethodRule struct {
	DocUrl     string `protobuf:"bytes,1,opt,name=doc_url,json=docUrl" json:"doc_url,omitempty"`
	HttpAction string `protobuf:"bytes,2,opt,name=http_action,json=httpAction" json:"http_action,omitempty"`
}

func (m *MethodRule) Reset()                    { *m = MethodRule{} }
func (m *MethodRule) String() string            { return proto.CompactTextString(m) }
func (*MethodRule) ProtoMessage()               {}
func (*MethodRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MethodRule) GetDocUrl() string {
	if m != nil {
		return m.DocUrl
	}
	return ""
}

func (m *MethodRule) GetHttpAction() string {
	if m != nil {
		return m.HttpAction
	}
	return ""
}

// 输入参数规则
// 输入参数成员只有数值类型和字符串, 以及对应的数组, 不含嵌套结构
type MethodInputRule struct {
	RequiredFileds string `protobuf:"bytes,1,opt,name=required_fileds,json=requiredFileds" json:"required_fileds,omitempty"`
	DefaultValue   string `protobuf:"bytes,2,opt,name=default_value,json=defaultValue" json:"default_value,omitempty"`
	EnumValue      string `protobuf:"bytes,3,opt,name=enum_value,json=enumValue" json:"enum_value,omitempty"`
	Minimum        string `protobuf:"bytes,4,opt,name=minimum" json:"minimum,omitempty"`
	Maximum        string `protobuf:"bytes,5,opt,name=maximum" json:"maximum,omitempty"`
	MultipleOf     string `protobuf:"bytes,6,opt,name=multipleOf" json:"multipleOf,omitempty"`
}

func (m *MethodInputRule) Reset()                    { *m = MethodInputRule{} }
func (m *MethodInputRule) String() string            { return proto.CompactTextString(m) }
func (*MethodInputRule) ProtoMessage()               {}
func (*MethodInputRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MethodInputRule) GetRequiredFileds() string {
	if m != nil {
		return m.RequiredFileds
	}
	return ""
}

func (m *MethodInputRule) GetDefaultValue() string {
	if m != nil {
		return m.DefaultValue
	}
	return ""
}

func (m *MethodInputRule) GetEnumValue() string {
	if m != nil {
		return m.EnumValue
	}
	return ""
}

func (m *MethodInputRule) GetMinimum() string {
	if m != nil {
		return m.Minimum
	}
	return ""
}

func (m *MethodInputRule) GetMaximum() string {
	if m != nil {
		return m.Maximum
	}
	return ""
}

func (m *MethodInputRule) GetMultipleOf() string {
	if m != nil {
		return m.MultipleOf
	}
	return ""
}

var E_ServiceRule = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.ServiceOptions)(nil),
	ExtensionType: (*ServiceRule)(nil),
	Field:         10001,
	Name:          "qingcloud.sdk.rule.service_rule",
	Tag:           "bytes,10001,opt,name=service_rule,json=serviceRule",
	Filename:      "qingcloud_sdk_rule/rule.proto",
}

var E_MethodRule = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*MethodRule)(nil),
	Field:         10001,
	Name:          "qingcloud.sdk.rule.method_rule",
	Tag:           "bytes,10001,opt,name=method_rule,json=methodRule",
	Filename:      "qingcloud_sdk_rule/rule.proto",
}

var E_MethodInputRule = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*MethodInputRule)(nil),
	Field:         10001,
	Name:          "qingcloud.sdk.rule.method_input_rule",
	Tag:           "bytes,10001,opt,name=method_input_rule,json=methodInputRule",
	Filename:      "qingcloud_sdk_rule/rule.proto",
}

func init() {
	proto.RegisterType((*ServiceRule)(nil), "qingcloud.sdk.rule.ServiceRule")
	proto.RegisterType((*MethodRule)(nil), "qingcloud.sdk.rule.MethodRule")
	proto.RegisterType((*MethodInputRule)(nil), "qingcloud.sdk.rule.MethodInputRule")
	proto.RegisterExtension(E_ServiceRule)
	proto.RegisterExtension(E_MethodRule)
	proto.RegisterExtension(E_MethodInputRule)
}

func init() { proto.RegisterFile("qingcloud_sdk_rule/rule.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 451 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0xcd, 0x72, 0xd3, 0x30,
	0x14, 0x85, 0x27, 0xfc, 0xa4, 0xd3, 0xeb, 0xd2, 0x80, 0x36, 0x78, 0x98, 0x69, 0x12, 0xd2, 0x05,
	0xd9, 0x20, 0x97, 0xb2, 0x0b, 0x2b, 0x58, 0x74, 0x86, 0x45, 0x53, 0x26, 0x1d, 0x58, 0xb0, 0x31,
	0xb6, 0xa4, 0x38, 0x9a, 0x4a, 0x96, 0xa3, 0x9f, 0x0e, 0xaf, 0xc1, 0xab, 0xf1, 0x44, 0x8c, 0x24,
	0xc7, 0xa1, 0x35, 0x65, 0xe3, 0xb1, 0xbe, 0x73, 0x7d, 0x8f, 0xef, 0x3d, 0x36, 0x9c, 0x6c, 0x79,
	0x5d, 0x11, 0xa1, 0x1c, 0xcd, 0x0d, 0xbd, 0xc9, 0xb5, 0x13, 0x2c, 0xf3, 0x17, 0xdc, 0x68, 0x65,
	0x15, 0x42, 0x9d, 0x8c, 0x0d, 0xbd, 0xc1, 0x5e, 0x79, 0x35, 0xad, 0x94, 0xaa, 0x04, 0xcb, 0x42,
	0x45, 0xe9, 0xd6, 0x19, 0x65, 0x86, 0x68, 0xde, 0x58, 0xa5, 0xe3, 0x53, 0x33, 0x03, 0xc9, 0x35,
	0xd3, 0xb7, 0x9c, 0xb0, 0x95, 0x13, 0x0c, 0xbd, 0x84, 0x03, 0xaa, 0x48, 0xee, 0xb4, 0x48, 0x07,
	0xd3, 0xc1, 0xfc, 0x70, 0x35, 0xa4, 0x8a, 0x7c, 0xd5, 0x02, 0xbd, 0x86, 0x23, 0x13, 0xeb, 0xf2,
	0xba, 0x90, 0x2c, 0x7d, 0x14, 0xd4, 0xa4, 0x65, 0xcb, 0x42, 0x32, 0x34, 0x87, 0xe7, 0xc6, 0x95,
	0xf9, 0x9d, 0xb2, 0xc7, 0xa1, 0xec, 0xd8, 0xb8, 0xf2, 0x7a, 0x5f, 0x39, 0xbb, 0x00, 0xb8, 0x64,
	0x76, 0xa3, 0xe8, 0xff, 0x3d, 0x27, 0x90, 0x6c, 0xac, 0x6d, 0xf2, 0x82, 0x58, 0xae, 0xea, 0xd6,
	0x12, 0x3c, 0xfa, 0x18, 0xc8, 0xec, 0xf7, 0x00, 0x46, 0xb1, 0xd1, 0xe7, 0xba, 0x71, 0x36, 0x74,
	0x7b, 0x03, 0x23, 0xcd, 0xb6, 0x8e, 0x6b, 0x46, 0xf3, 0x35, 0x17, 0x8c, 0x9a, 0xb6, 0xeb, 0xf1,
	0x0e, 0x5f, 0x04, 0x8a, 0x4e, 0xe1, 0x19, 0x65, 0xeb, 0xc2, 0x09, 0x9b, 0xdf, 0x16, 0xc2, 0xed,
	0x46, 0x3a, 0x6a, 0xe1, 0x37, 0xcf, 0xd0, 0x09, 0x00, 0xab, 0x9d, 0x6c, 0x2b, 0xe2, 0x34, 0x87,
	0x9e, 0x44, 0x39, 0x85, 0x03, 0xc9, 0x6b, 0x2e, 0x9d, 0x4c, 0x9f, 0x04, 0x6d, 0x77, 0x0c, 0x4a,
	0xf1, 0x33, 0x28, 0x4f, 0x5b, 0x25, 0x1e, 0xd1, 0x18, 0x40, 0x3a, 0x61, 0x79, 0x23, 0xd8, 0xd5,
	0x3a, 0x1d, 0xc6, 0xa1, 0xf6, 0x64, 0x41, 0xf7, 0x9b, 0xf6, 0x19, 0xa2, 0x09, 0x8e, 0x21, 0xe2,
	0x5d, 0x88, 0xb8, 0x5d, 0xe5, 0x55, 0xe3, 0x97, 0x60, 0xd2, 0x5f, 0xcb, 0xe9, 0x60, 0x9e, 0x9c,
	0x4f, 0x70, 0xff, 0x03, 0xc0, 0x7f, 0x65, 0xdb, 0x85, 0xe5, 0x0f, 0x8b, 0x1f, 0x90, 0xc8, 0xb0,
	0xb9, 0x68, 0x32, 0xee, 0x99, 0xc4, 0xbd, 0xde, 0xf3, 0x18, 0xff, 0xcb, 0x63, 0x1f, 0xe5, 0x0a,
	0x64, 0x77, 0xbf, 0xd8, 0xc2, 0x8b, 0xd6, 0x81, 0xfb, 0x70, 0x1e, 0x1a, 0xe6, 0x92, 0x19, 0x53,
	0x54, 0xf7, 0x87, 0x39, 0x7d, 0xd8, 0xa8, 0x8b, 0x7a, 0x35, 0x92, 0x77, 0xc1, 0xa7, 0x2f, 0xdf,
	0x97, 0x15, 0xb7, 0x1b, 0x57, 0x62, 0xa2, 0x64, 0x46, 0x36, 0x05, 0x3f, 0x3f, 0x7b, 0x77, 0x96,
	0x75, 0xad, 0xde, 0x56, 0x2a, 0x33, 0x0d, 0x23, 0xb8, 0x29, 0xb3, 0xfe, 0xcf, 0xf4, 0xa1, 0x8f,
	0xca, 0x61, 0x78, 0xcf, 0xf7, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xba, 0x3f, 0x45, 0xb0, 0x7c,
	0x03, 0x00, 0x00,
}
