// Code generated by protoc-gen-qingcloud. DO NOT EDIT.
// plugin: https://github.com/chai2010/qingcloud-go/tree/master/pkg/cmd/protoc-gen-qingcloud
// plugin: https://github.com/chai2010/qingcloud-go/tree/master/pkg/cmd/protoc-gen-qingcloud/generator/golang
// source: misc.proto

package qcli_pb

import (
	"fmt"

	"github.com/golang/protobuf/jsonpb"
	"github.com/golang/protobuf/proto"
	"github.com/urfave/cli"

	pb "github.com/chai2010/qingcloud-go/pkg/api"
	"github.com/chai2010/qingcloud-go/pkg/config"
	"github.com/chai2010/qingcloud-go/pkg/logger"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf

	_ = cli.Command{}
	_ = jsonpb.Unmarshal
	_ = proto.Marshal

	_ = config.Config{}
	_ = logger.Info
	_ = pb.AlarmService{}
)

func init() {
	AllCommands = append(AllCommands, CmdMiscService)
}

var CmdMiscService = cli.Command{
	Name:    "misc",
	Aliases: []string{},
	Usage:   "manage MiscService",
	Subcommands: []cli.Command{
		{
			Name:    "GrantQuotaIndep",
			Aliases: []string{},
			Usage:   "GrantQuotaIndep",
			Action:  cmdGrantQuotaIndep,
		},
		{
			Name:    "RevokeQuotaIndep",
			Aliases: []string{},
			Usage:   "RevokeQuotaIndep",
			Action:  cmdRevokeQuotaIndep,
		},
		{
			Name:    "GetQuotaLeft",
			Aliases: []string{},
			Usage:   "GetQuotaLeft",
			Action:  cmdGetQuotaLeft,
		},
	},
}

func cmdGrantQuotaIndep(c *cli.Context) error {
	var conf *config.Config
	var zone string
	qc := pb.NewMiscService(conf, zone)

	in := new(pb.GrantQuotaIndepInput)

	// TODO: fill field from flags

	out, err := qc.GrantQuotaIndep(in)
	if err != nil {
		logger.Fatal(err)
	}

	jsonMarshaler := &jsonpb.Marshaler{
		OrigName:     true,
		EnumsAsInts:  true,
		EmitDefaults: true,
		Indent:       "  ",
	}
	s, err := jsonMarshaler.MarshalToString(out)
	if err != nil {
		logger.Fatal(err)
	}

	fmt.Println(s)
	return nil
}

func cmdRevokeQuotaIndep(c *cli.Context) error {
	var conf *config.Config
	var zone string
	qc := pb.NewMiscService(conf, zone)

	in := new(pb.RevokeQuotaIndepInput)

	// TODO: fill field from flags

	out, err := qc.RevokeQuotaIndep(in)
	if err != nil {
		logger.Fatal(err)
	}

	jsonMarshaler := &jsonpb.Marshaler{
		OrigName:     true,
		EnumsAsInts:  true,
		EmitDefaults: true,
		Indent:       "  ",
	}
	s, err := jsonMarshaler.MarshalToString(out)
	if err != nil {
		logger.Fatal(err)
	}

	fmt.Println(s)
	return nil
}

func cmdGetQuotaLeft(c *cli.Context) error {
	var conf *config.Config
	var zone string
	qc := pb.NewMiscService(conf, zone)

	in := new(pb.GetQuotaLeftInput)

	// TODO: fill field from flags

	out, err := qc.GetQuotaLeft(in)
	if err != nil {
		logger.Fatal(err)
	}

	jsonMarshaler := &jsonpb.Marshaler{
		OrigName:     true,
		EnumsAsInts:  true,
		EmitDefaults: true,
		Indent:       "  ",
	}
	s, err := jsonMarshaler.MarshalToString(out)
	if err != nil {
		logger.Fatal(err)
	}

	fmt.Println(s)
	return nil
}
