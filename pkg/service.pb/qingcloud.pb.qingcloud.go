// Code generated by protoc-gen-qingcloud-go. DO NOT EDIT.
// plugin: https://github.com/chai2010/qingcloud-go/protoc-gen-qingcloud-go
// source: qingcloud.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import "regexp"

import "github.com/chai2010/qingcloud-go/pkg/config"
import "github.com/chai2010/qingcloud-go/pkg/logger"
import "github.com/chai2010/qingcloud-go/pkg/request"
import "github.com/chai2010/qingcloud-go/pkg/request/data"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

var _ = regexp.Match
var _ = config.Config{}
var _ = logger.SetLevel
var _ = request.Request{}
var _ = data.Operation{}

// See https://docs.qingcloud.com/api/index.html
type QingCloudServiceInterface interface {
	DescribeZones(in *DescribeZonesInput) (out *DescribeZonesOutput, err error)
}

// See https://docs.qingcloud.com/api/index.html
type QingCloudService struct {
	Config           *config.Config
	Properties       *QingCloudServiceProperties
	LastResponseBody string
}

func Init(c *config.Config) (*QingCloudService, error) {
	properties := &QingCloudServiceProperties{}
	logger.SetLevel(c.LogLevel)
	return &QingCloudService{Config: c, Properties: properties}, nil
}

func (p *QingCloudService) DescribeZones(in *DescribeZonesInput) (out *DescribeZonesOutput, err error) {
	if in == nil {
		in = &DescribeZonesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeZones",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeZonesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}
