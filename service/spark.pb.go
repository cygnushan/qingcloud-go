// Code generated by protoc-gen-go. DO NOT EDIT.
// source: spark.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/chai2010/qingcloud-go/spec.pb/qingcloud_sdk_rule"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import "github.com/chai2010/qingcloud-go/request/data"

var _ = config.Config{}
var _ = request.Request{}
var _ = data.Operation{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SparkServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *SparkServiceProperties) Reset()                    { *m = SparkServiceProperties{} }
func (m *SparkServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*SparkServiceProperties) ProtoMessage()               {}
func (*SparkServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{0} }

func (m *SparkServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func init() {
	proto.RegisterType((*SparkServiceProperties)(nil), "service.SparkServiceProperties")
}

type SparkServiceInterface interface {
	CreateSpark(in *google_protobuf2.Empty) (out *google_protobuf2.Empty, err error)
	DescribeSparks(in *google_protobuf2.Empty) (out *google_protobuf2.Empty, err error)
	AddSparkNodes(in *google_protobuf2.Empty) (out *google_protobuf2.Empty, err error)
	DeleteSparkNodes(in *google_protobuf2.Empty) (out *google_protobuf2.Empty, err error)
	StartSparks(in *google_protobuf2.Empty) (out *google_protobuf2.Empty, err error)
	StopSparks(in *google_protobuf2.Empty) (out *google_protobuf2.Empty, err error)
	DeleteSparks(in *google_protobuf2.Empty) (out *google_protobuf2.Empty, err error)
}

type SparkService struct {
	Config           *config.Config
	Properties       *SparkServiceProperties
	LastResponseBody string
}

func NewSparkService(conf *config.Config, zone string) (p *SparkService) {
	return &SparkService{
		Config:     conf,
		Properties: &SparkServiceProperties{Zone: zone},
	}
}

func (s *QingCloudService) Spark(zone string) (*SparkService, error) {
	properties := &SparkServiceProperties{
		Zone: zone,
	}

	return &SparkService{Config: s.Config, Properties: properties}, nil
}

func (p *SparkService) CreateSpark(in *google_protobuf2.Empty) (out *google_protobuf2.Empty, err error) {
	if in == nil {
		in = &google_protobuf2.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateSpark",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf2.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SparkService) DescribeSparks(in *google_protobuf2.Empty) (out *google_protobuf2.Empty, err error) {
	if in == nil {
		in = &google_protobuf2.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeSparks",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf2.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SparkService) AddSparkNodes(in *google_protobuf2.Empty) (out *google_protobuf2.Empty, err error) {
	if in == nil {
		in = &google_protobuf2.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "AddSparkNodes",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf2.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SparkService) DeleteSparkNodes(in *google_protobuf2.Empty) (out *google_protobuf2.Empty, err error) {
	if in == nil {
		in = &google_protobuf2.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteSparkNodes",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf2.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SparkService) StartSparks(in *google_protobuf2.Empty) (out *google_protobuf2.Empty, err error) {
	if in == nil {
		in = &google_protobuf2.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "StartSparks",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf2.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SparkService) StopSparks(in *google_protobuf2.Empty) (out *google_protobuf2.Empty, err error) {
	if in == nil {
		in = &google_protobuf2.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "StopSparks",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf2.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SparkService) DeleteSparks(in *google_protobuf2.Empty) (out *google_protobuf2.Empty, err error) {
	if in == nil {
		in = &google_protobuf2.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteSparks",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf2.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func init() { proto.RegisterFile("spark.proto", fileDescriptor24) }

var fileDescriptor24 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0x2e, 0x48, 0x2c,
	0xca, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e,
	0x95, 0x92, 0x2d, 0xcc, 0xcc, 0x4b, 0x4f, 0xce, 0xc9, 0x2f, 0x4d, 0x89, 0x2f, 0x4e, 0xc9, 0x8e,
	0x2f, 0x2a, 0xcd, 0x49, 0xd5, 0x07, 0x11, 0x10, 0x75, 0x52, 0xd2, 0xe9, 0xf9, 0xf9, 0xe9, 0x39,
	0xa9, 0xfa, 0x60, 0x5e, 0x52, 0x69, 0x9a, 0x7e, 0x6a, 0x6e, 0x41, 0x49, 0x25, 0x44, 0x52, 0x49,
	0x87, 0x4b, 0x2c, 0x18, 0x64, 0x66, 0x30, 0xc4, 0xac, 0x80, 0xa2, 0xfc, 0x82, 0xd4, 0xa2, 0x92,
	0xcc, 0xd4, 0x62, 0x21, 0x21, 0x2e, 0x96, 0xaa, 0xfc, 0xbc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d,
	0xce, 0x20, 0x30, 0xdb, 0xe8, 0x25, 0x33, 0x17, 0x0f, 0xb2, 0x72, 0x21, 0x5b, 0x2e, 0x6e, 0xe7,
	0xa2, 0xd4, 0xc4, 0x92, 0x54, 0xb0, 0xa8, 0x90, 0x98, 0x1e, 0xc4, 0x2e, 0x3d, 0x98, 0x5d, 0x7a,
	0xae, 0x20, 0xbb, 0xa4, 0x70, 0x88, 0x0b, 0x39, 0x70, 0xf1, 0xb9, 0xa4, 0x16, 0x27, 0x17, 0x65,
	0x26, 0x41, 0x0c, 0x28, 0x26, 0xd9, 0x04, 0x7b, 0x2e, 0x5e, 0xc7, 0x94, 0x14, 0xb0, 0x66, 0xbf,
	0xfc, 0x94, 0x54, 0xd2, 0x0d, 0x70, 0xe2, 0x12, 0x70, 0x49, 0xcd, 0x49, 0x85, 0xfa, 0x80, 0x3c,
	0x33, 0x6c, 0xb9, 0xb8, 0x83, 0x4b, 0x12, 0x8b, 0x4a, 0xc8, 0xf4, 0x83, 0x0d, 0x17, 0x57, 0x70,
	0x49, 0x7e, 0x01, 0x99, 0xba, 0xed, 0xb8, 0x78, 0x90, 0x3c, 0x40, 0xb2, 0x7e, 0x29, 0xb1, 0xae,
	0x8f, 0x2c, 0x42, 0x5c, 0x9c, 0x81, 0x99, 0x79, 0xe9, 0xce, 0xa0, 0x34, 0x24, 0xc4, 0x0a, 0x36,
	0x28, 0x89, 0x0d, 0xac, 0xce, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x0c, 0x8d, 0x88, 0x63, 0x74,
	0x02, 0x00, 0x00,
}
