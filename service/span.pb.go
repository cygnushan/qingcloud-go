// Code generated by protoc-gen-go. DO NOT EDIT.
// source: span.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/chai2010/qingcloud-go/spec.pb/qingcloud_sdk_rule"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import "github.com/chai2010/qingcloud-go/request/data"

var _ = config.Config{}
var _ = request.Request{}
var _ = data.Operation{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SpanServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *SpanServiceProperties) Reset()                    { *m = SpanServiceProperties{} }
func (m *SpanServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*SpanServiceProperties) ProtoMessage()               {}
func (*SpanServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{0} }

func (m *SpanServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type CreateSpanInput struct {
	SpanName   string `protobuf:"bytes,1,opt,name=span_name,json=spanName" json:"span_name,omitempty"`
	Flag       int32  `protobuf:"varint,2,opt,name=flag" json:"flag,omitempty"`
	IpAddr     string `protobuf:"bytes,3,opt,name=ip_addr,json=ipAddr" json:"ip_addr,omitempty"`
	TunnelType string `protobuf:"bytes,4,opt,name=tunnel_type,json=tunnelType" json:"tunnel_type,omitempty"`
	TunnelKey  int32  `protobuf:"varint,5,opt,name=tunnel_key,json=tunnelKey" json:"tunnel_key,omitempty"`
}

func (m *CreateSpanInput) Reset()                    { *m = CreateSpanInput{} }
func (m *CreateSpanInput) String() string            { return proto.CompactTextString(m) }
func (*CreateSpanInput) ProtoMessage()               {}
func (*CreateSpanInput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{1} }

func (m *CreateSpanInput) GetSpanName() string {
	if m != nil {
		return m.SpanName
	}
	return ""
}

func (m *CreateSpanInput) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *CreateSpanInput) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *CreateSpanInput) GetTunnelType() string {
	if m != nil {
		return m.TunnelType
	}
	return ""
}

func (m *CreateSpanInput) GetTunnelKey() int32 {
	if m != nil {
		return m.TunnelKey
	}
	return 0
}

type CreateSpanOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	SpanId  string `protobuf:"bytes,4,opt,name=span_id,json=spanId" json:"span_id,omitempty"`
}

func (m *CreateSpanOutput) Reset()                    { *m = CreateSpanOutput{} }
func (m *CreateSpanOutput) String() string            { return proto.CompactTextString(m) }
func (*CreateSpanOutput) ProtoMessage()               {}
func (*CreateSpanOutput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{2} }

func (m *CreateSpanOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CreateSpanOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CreateSpanOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateSpanOutput) GetSpanId() string {
	if m != nil {
		return m.SpanId
	}
	return ""
}

type DescribeSpansInput struct {
	Spans    []string `protobuf:"bytes,1,rep,name=spans" json:"spans,omitempty"`
	SpanName string   `protobuf:"bytes,2,opt,name=span_name,json=spanName" json:"span_name,omitempty"`
	IpAddr   string   `protobuf:"bytes,3,opt,name=ip_addr,json=ipAddr" json:"ip_addr,omitempty"`
	Tags     []string `protobuf:"bytes,4,rep,name=tags" json:"tags,omitempty"`
	Offset   int32    `protobuf:"varint,5,opt,name=offset" json:"offset,omitempty"`
	Limit    int32    `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty"`
}

func (m *DescribeSpansInput) Reset()                    { *m = DescribeSpansInput{} }
func (m *DescribeSpansInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeSpansInput) ProtoMessage()               {}
func (*DescribeSpansInput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{3} }

func (m *DescribeSpansInput) GetSpans() []string {
	if m != nil {
		return m.Spans
	}
	return nil
}

func (m *DescribeSpansInput) GetSpanName() string {
	if m != nil {
		return m.SpanName
	}
	return ""
}

func (m *DescribeSpansInput) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *DescribeSpansInput) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *DescribeSpansInput) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeSpansInput) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type DescribeSpansOutput struct {
	Action     string                              `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode    int32                               `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message    string                              `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	SpanSet    []*DescribeSpansOutput_ResponseItem `protobuf:"bytes,4,rep,name=span_set,json=spanSet" json:"span_set,omitempty"`
	TotalCount int32                               `protobuf:"varint,5,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *DescribeSpansOutput) Reset()                    { *m = DescribeSpansOutput{} }
func (m *DescribeSpansOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeSpansOutput) ProtoMessage()               {}
func (*DescribeSpansOutput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{4} }

func (m *DescribeSpansOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeSpansOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeSpansOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeSpansOutput) GetSpanSet() []*DescribeSpansOutput_ResponseItem {
	if m != nil {
		return m.SpanSet
	}
	return nil
}

func (m *DescribeSpansOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type DescribeSpansOutput_ResponseItem struct {
	IsApplied  int32                                          `protobuf:"varint,1,opt,name=is_applied,json=isApplied" json:"is_applied,omitempty"`
	SpanName   string                                         `protobuf:"bytes,2,opt,name=span_name,json=spanName" json:"span_name,omitempty"`
	IpAddr     string                                         `protobuf:"bytes,3,opt,name=ip_addr,json=ipAddr" json:"ip_addr,omitempty"`
	TunnelType string                                         `protobuf:"bytes,4,opt,name=tunnel_type,json=tunnelType" json:"tunnel_type,omitempty"`
	Tags       []string                                       `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	Flag       int32                                          `protobuf:"varint,6,opt,name=flag" json:"flag,omitempty"`
	TunnelKey  int32                                          `protobuf:"varint,7,opt,name=tunnel_key,json=tunnelKey" json:"tunnel_key,omitempty"`
	CreateTime *google_protobuf1.Timestamp                    `protobuf:"bytes,8,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime *google_protobuf1.Timestamp                    `protobuf:"bytes,9,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SpanId     string                                         `protobuf:"bytes,10,opt,name=span_id,json=spanId" json:"span_id,omitempty"`
	Members    []*DescribeSpansOutput_ResponseItem_MemberItem `protobuf:"bytes,11,rep,name=members" json:"members,omitempty"`
}

func (m *DescribeSpansOutput_ResponseItem) Reset()         { *m = DescribeSpansOutput_ResponseItem{} }
func (m *DescribeSpansOutput_ResponseItem) String() string { return proto.CompactTextString(m) }
func (*DescribeSpansOutput_ResponseItem) ProtoMessage()    {}
func (*DescribeSpansOutput_ResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor23, []int{4, 0}
}

func (m *DescribeSpansOutput_ResponseItem) GetIsApplied() int32 {
	if m != nil {
		return m.IsApplied
	}
	return 0
}

func (m *DescribeSpansOutput_ResponseItem) GetSpanName() string {
	if m != nil {
		return m.SpanName
	}
	return ""
}

func (m *DescribeSpansOutput_ResponseItem) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *DescribeSpansOutput_ResponseItem) GetTunnelType() string {
	if m != nil {
		return m.TunnelType
	}
	return ""
}

func (m *DescribeSpansOutput_ResponseItem) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *DescribeSpansOutput_ResponseItem) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *DescribeSpansOutput_ResponseItem) GetTunnelKey() int32 {
	if m != nil {
		return m.TunnelKey
	}
	return 0
}

func (m *DescribeSpansOutput_ResponseItem) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *DescribeSpansOutput_ResponseItem) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *DescribeSpansOutput_ResponseItem) GetSpanId() string {
	if m != nil {
		return m.SpanId
	}
	return ""
}

func (m *DescribeSpansOutput_ResponseItem) GetMembers() []*DescribeSpansOutput_ResponseItem_MemberItem {
	if m != nil {
		return m.Members
	}
	return nil
}

type DescribeSpansOutput_ResponseItem_MemberItem struct {
	SpanId     string                      `protobuf:"bytes,1,opt,name=span_id,json=spanId" json:"span_id,omitempty"`
	ResourceId string                      `protobuf:"bytes,2,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	Status     string                      `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	CreateTime *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
}

func (m *DescribeSpansOutput_ResponseItem_MemberItem) Reset() {
	*m = DescribeSpansOutput_ResponseItem_MemberItem{}
}
func (m *DescribeSpansOutput_ResponseItem_MemberItem) String() string {
	return proto.CompactTextString(m)
}
func (*DescribeSpansOutput_ResponseItem_MemberItem) ProtoMessage() {}
func (*DescribeSpansOutput_ResponseItem_MemberItem) Descriptor() ([]byte, []int) {
	return fileDescriptor23, []int{4, 0, 0}
}

func (m *DescribeSpansOutput_ResponseItem_MemberItem) GetSpanId() string {
	if m != nil {
		return m.SpanId
	}
	return ""
}

func (m *DescribeSpansOutput_ResponseItem_MemberItem) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *DescribeSpansOutput_ResponseItem_MemberItem) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DescribeSpansOutput_ResponseItem_MemberItem) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *DescribeSpansOutput_ResponseItem_MemberItem) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type DeleteSpansInput struct {
	Spans []string `protobuf:"bytes,1,rep,name=spans" json:"spans,omitempty"`
}

func (m *DeleteSpansInput) Reset()                    { *m = DeleteSpansInput{} }
func (m *DeleteSpansInput) String() string            { return proto.CompactTextString(m) }
func (*DeleteSpansInput) ProtoMessage()               {}
func (*DeleteSpansInput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{5} }

func (m *DeleteSpansInput) GetSpans() []string {
	if m != nil {
		return m.Spans
	}
	return nil
}

type DeleteSpansOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteSpansOutput) Reset()                    { *m = DeleteSpansOutput{} }
func (m *DeleteSpansOutput) String() string            { return proto.CompactTextString(m) }
func (*DeleteSpansOutput) ProtoMessage()               {}
func (*DeleteSpansOutput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{6} }

func (m *DeleteSpansOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DeleteSpansOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DeleteSpansOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AddSpanMembersInput struct {
	Span      string   `protobuf:"bytes,1,opt,name=span" json:"span,omitempty"`
	Resources []string `protobuf:"bytes,2,rep,name=resources" json:"resources,omitempty"`
}

func (m *AddSpanMembersInput) Reset()                    { *m = AddSpanMembersInput{} }
func (m *AddSpanMembersInput) String() string            { return proto.CompactTextString(m) }
func (*AddSpanMembersInput) ProtoMessage()               {}
func (*AddSpanMembersInput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{7} }

func (m *AddSpanMembersInput) GetSpan() string {
	if m != nil {
		return m.Span
	}
	return ""
}

func (m *AddSpanMembersInput) GetResources() []string {
	if m != nil {
		return m.Resources
	}
	return nil
}

type AddSpanMembersOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *AddSpanMembersOutput) Reset()                    { *m = AddSpanMembersOutput{} }
func (m *AddSpanMembersOutput) String() string            { return proto.CompactTextString(m) }
func (*AddSpanMembersOutput) ProtoMessage()               {}
func (*AddSpanMembersOutput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{8} }

func (m *AddSpanMembersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *AddSpanMembersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *AddSpanMembersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AddSpanMembersOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type RemoveSpanMembersInput struct {
	Span      string   `protobuf:"bytes,1,opt,name=span" json:"span,omitempty"`
	Resources []string `protobuf:"bytes,2,rep,name=resources" json:"resources,omitempty"`
}

func (m *RemoveSpanMembersInput) Reset()                    { *m = RemoveSpanMembersInput{} }
func (m *RemoveSpanMembersInput) String() string            { return proto.CompactTextString(m) }
func (*RemoveSpanMembersInput) ProtoMessage()               {}
func (*RemoveSpanMembersInput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{9} }

func (m *RemoveSpanMembersInput) GetSpan() string {
	if m != nil {
		return m.Span
	}
	return ""
}

func (m *RemoveSpanMembersInput) GetResources() []string {
	if m != nil {
		return m.Resources
	}
	return nil
}

type RemoveSpanMembersOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *RemoveSpanMembersOutput) Reset()                    { *m = RemoveSpanMembersOutput{} }
func (m *RemoveSpanMembersOutput) String() string            { return proto.CompactTextString(m) }
func (*RemoveSpanMembersOutput) ProtoMessage()               {}
func (*RemoveSpanMembersOutput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{10} }

func (m *RemoveSpanMembersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *RemoveSpanMembersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *RemoveSpanMembersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RemoveSpanMembersOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type ModifySpanAttributesInput struct {
	SpanId     string `protobuf:"bytes,1,opt,name=span_id,json=spanId" json:"span_id,omitempty"`
	SpanName   string `protobuf:"bytes,2,opt,name=span_name,json=spanName" json:"span_name,omitempty"`
	Flag       int32  `protobuf:"varint,3,opt,name=flag" json:"flag,omitempty"`
	IpAddr     string `protobuf:"bytes,4,opt,name=ip_addr,json=ipAddr" json:"ip_addr,omitempty"`
	TunnelType string `protobuf:"bytes,5,opt,name=tunnel_type,json=tunnelType" json:"tunnel_type,omitempty"`
	TunnelKey  int32  `protobuf:"varint,6,opt,name=tunnel_key,json=tunnelKey" json:"tunnel_key,omitempty"`
}

func (m *ModifySpanAttributesInput) Reset()                    { *m = ModifySpanAttributesInput{} }
func (m *ModifySpanAttributesInput) String() string            { return proto.CompactTextString(m) }
func (*ModifySpanAttributesInput) ProtoMessage()               {}
func (*ModifySpanAttributesInput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{11} }

func (m *ModifySpanAttributesInput) GetSpanId() string {
	if m != nil {
		return m.SpanId
	}
	return ""
}

func (m *ModifySpanAttributesInput) GetSpanName() string {
	if m != nil {
		return m.SpanName
	}
	return ""
}

func (m *ModifySpanAttributesInput) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *ModifySpanAttributesInput) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *ModifySpanAttributesInput) GetTunnelType() string {
	if m != nil {
		return m.TunnelType
	}
	return ""
}

func (m *ModifySpanAttributesInput) GetTunnelKey() int32 {
	if m != nil {
		return m.TunnelKey
	}
	return 0
}

type ModifySpanAttributesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ModifySpanAttributesOutput) Reset()                    { *m = ModifySpanAttributesOutput{} }
func (m *ModifySpanAttributesOutput) String() string            { return proto.CompactTextString(m) }
func (*ModifySpanAttributesOutput) ProtoMessage()               {}
func (*ModifySpanAttributesOutput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{12} }

func (m *ModifySpanAttributesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ModifySpanAttributesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ModifySpanAttributesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateSpanInput struct {
	Span string `protobuf:"bytes,1,opt,name=span" json:"span,omitempty"`
}

func (m *UpdateSpanInput) Reset()                    { *m = UpdateSpanInput{} }
func (m *UpdateSpanInput) String() string            { return proto.CompactTextString(m) }
func (*UpdateSpanInput) ProtoMessage()               {}
func (*UpdateSpanInput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{13} }

func (m *UpdateSpanInput) GetSpan() string {
	if m != nil {
		return m.Span
	}
	return ""
}

type UpdateSpanOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *UpdateSpanOutput) Reset()                    { *m = UpdateSpanOutput{} }
func (m *UpdateSpanOutput) String() string            { return proto.CompactTextString(m) }
func (*UpdateSpanOutput) ProtoMessage()               {}
func (*UpdateSpanOutput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{14} }

func (m *UpdateSpanOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *UpdateSpanOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *UpdateSpanOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateSpanOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func init() {
	proto.RegisterType((*SpanServiceProperties)(nil), "service.SpanServiceProperties")
	proto.RegisterType((*CreateSpanInput)(nil), "service.CreateSpanInput")
	proto.RegisterType((*CreateSpanOutput)(nil), "service.CreateSpanOutput")
	proto.RegisterType((*DescribeSpansInput)(nil), "service.DescribeSpansInput")
	proto.RegisterType((*DescribeSpansOutput)(nil), "service.DescribeSpansOutput")
	proto.RegisterType((*DescribeSpansOutput_ResponseItem)(nil), "service.DescribeSpansOutput.ResponseItem")
	proto.RegisterType((*DescribeSpansOutput_ResponseItem_MemberItem)(nil), "service.DescribeSpansOutput.ResponseItem.MemberItem")
	proto.RegisterType((*DeleteSpansInput)(nil), "service.DeleteSpansInput")
	proto.RegisterType((*DeleteSpansOutput)(nil), "service.DeleteSpansOutput")
	proto.RegisterType((*AddSpanMembersInput)(nil), "service.AddSpanMembersInput")
	proto.RegisterType((*AddSpanMembersOutput)(nil), "service.AddSpanMembersOutput")
	proto.RegisterType((*RemoveSpanMembersInput)(nil), "service.RemoveSpanMembersInput")
	proto.RegisterType((*RemoveSpanMembersOutput)(nil), "service.RemoveSpanMembersOutput")
	proto.RegisterType((*ModifySpanAttributesInput)(nil), "service.ModifySpanAttributesInput")
	proto.RegisterType((*ModifySpanAttributesOutput)(nil), "service.ModifySpanAttributesOutput")
	proto.RegisterType((*UpdateSpanInput)(nil), "service.UpdateSpanInput")
	proto.RegisterType((*UpdateSpanOutput)(nil), "service.UpdateSpanOutput")
}

type SpanServiceInterface interface {
	CreateSpan(in *CreateSpanInput) (out *CreateSpanOutput, err error)
	DescribeSpans(in *DescribeSpansInput) (out *DescribeSpansOutput, err error)
	DeleteSpans(in *DeleteSpansInput) (out *DeleteSpansOutput, err error)
	AddSpanMembers(in *AddSpanMembersInput) (out *AddSpanMembersOutput, err error)
	RemoveSpanMembers(in *RemoveSpanMembersInput) (out *RemoveSpanMembersOutput, err error)
	ModifySpanAttributes(in *ModifySpanAttributesInput) (out *ModifySpanAttributesOutput, err error)
	UpdateSpan(in *UpdateSpanInput) (out *UpdateSpanOutput, err error)
}

type SpanService struct {
	Config           *config.Config
	Properties       *SpanServiceProperties
	LastResponseBody string
}

func NewSpanService(conf *config.Config, zone string) (p *SpanService) {
	return &SpanService{
		Config:     conf,
		Properties: &SpanServiceProperties{Zone: zone},
	}
}

func (s *QingCloudService) Span(zone string) (*SpanService, error) {
	properties := &SpanServiceProperties{
		Zone: zone,
	}

	return &SpanService{Config: s.Config, Properties: properties}, nil
}

func (p *SpanService) CreateSpan(in *CreateSpanInput) (out *CreateSpanOutput, err error) {
	if in == nil {
		in = &CreateSpanInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateSpan",
		RequestMethod: "GET", // GET or POST
	}

	x := &CreateSpanOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *CreateSpanInput) Validate() error {
	return nil
}

func (p *SpanService) DescribeSpans(in *DescribeSpansInput) (out *DescribeSpansOutput, err error) {
	if in == nil {
		in = &DescribeSpansInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeSpans",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeSpansOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DescribeSpansInput) Validate() error {
	return nil
}

func (p *SpanService) DeleteSpans(in *DeleteSpansInput) (out *DeleteSpansOutput, err error) {
	if in == nil {
		in = &DeleteSpansInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteSpans",
		RequestMethod: "GET", // GET or POST
	}

	x := &DeleteSpansOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DeleteSpansInput) Validate() error {
	return nil
}

func (p *SpanService) AddSpanMembers(in *AddSpanMembersInput) (out *AddSpanMembersOutput, err error) {
	if in == nil {
		in = &AddSpanMembersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "AddSpanMembers",
		RequestMethod: "GET", // GET or POST
	}

	x := &AddSpanMembersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *AddSpanMembersInput) Validate() error {
	return nil
}

func (p *SpanService) RemoveSpanMembers(in *RemoveSpanMembersInput) (out *RemoveSpanMembersOutput, err error) {
	if in == nil {
		in = &RemoveSpanMembersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "RemoveSpanMembers",
		RequestMethod: "GET", // GET or POST
	}

	x := &RemoveSpanMembersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RemoveSpanMembersInput) Validate() error {
	return nil
}

func (p *SpanService) ModifySpanAttributes(in *ModifySpanAttributesInput) (out *ModifySpanAttributesOutput, err error) {
	if in == nil {
		in = &ModifySpanAttributesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifySpanAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &ModifySpanAttributesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *ModifySpanAttributesInput) Validate() error {
	return nil
}

func (p *SpanService) UpdateSpan(in *UpdateSpanInput) (out *UpdateSpanOutput, err error) {
	if in == nil {
		in = &UpdateSpanInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "UpdateSpan",
		RequestMethod: "GET", // GET or POST
	}

	x := &UpdateSpanOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *UpdateSpanInput) Validate() error {
	return nil
}

func init() { proto.RegisterFile("span.proto", fileDescriptor23) }

var fileDescriptor23 = []byte{
	// 915 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xef, 0x6e, 0xe3, 0x44,
	0x10, 0x97, 0x5b, 0xdb, 0x69, 0x26, 0xc0, 0xb5, 0x7b, 0xed, 0x9d, 0xeb, 0xbb, 0xaa, 0x91, 0x11,
	0x52, 0x10, 0x52, 0x2a, 0x15, 0xbe, 0xf1, 0x29, 0x6a, 0x25, 0x94, 0x43, 0x3d, 0x20, 0x3d, 0xf8,
	0x6a, 0x9c, 0x78, 0x12, 0xed, 0x9d, 0xed, 0x35, 0xde, 0x75, 0x45, 0x4e, 0xe2, 0x01, 0xe0, 0x15,
	0xf8, 0xc6, 0x83, 0xf0, 0x89, 0x57, 0x40, 0xe2, 0x35, 0x78, 0x03, 0xb4, 0x7f, 0xdc, 0xd8, 0x39,
	0xa7, 0xe5, 0x5f, 0xee, 0x8b, 0xe5, 0x99, 0x9d, 0x99, 0xfd, 0xed, 0xcc, 0x6f, 0x66, 0x17, 0x80,
	0xe7, 0x51, 0x36, 0xcc, 0x0b, 0x26, 0x18, 0xe9, 0x70, 0x2c, 0x6e, 0xe8, 0x0c, 0xfd, 0x93, 0xef,
	0x68, 0xb6, 0x98, 0x25, 0xac, 0x8c, 0x43, 0x1e, 0xbf, 0x0a, 0x8b, 0x32, 0xc1, 0x33, 0xf9, 0xd1,
	0x76, 0xfe, 0xe9, 0x82, 0xb1, 0x45, 0x82, 0x67, 0x4a, 0x9a, 0x96, 0xf3, 0x33, 0x41, 0x53, 0xe4,
	0x22, 0x4a, 0x73, 0x6d, 0x10, 0x7c, 0x04, 0x47, 0xd7, 0x79, 0x94, 0x5d, 0xeb, 0x70, 0x5f, 0x16,
	0x2c, 0xc7, 0x42, 0x50, 0xe4, 0x84, 0x80, 0xfd, 0x9a, 0x65, 0xe8, 0x59, 0x7d, 0x6b, 0xd0, 0x9d,
	0xa8, 0xff, 0xe0, 0x67, 0x0b, 0x1e, 0x5c, 0x14, 0x18, 0x09, 0x94, 0x3e, 0xe3, 0x2c, 0x2f, 0x05,
	0x79, 0x02, 0x5d, 0x89, 0x2b, 0xcc, 0xa2, 0xb4, 0x32, 0xde, 0x93, 0x8a, 0xe7, 0x51, 0x8a, 0x32,
	0xc8, 0x3c, 0x89, 0x16, 0xde, 0x4e, 0xdf, 0x1a, 0x38, 0x13, 0xf5, 0x4f, 0x1e, 0x43, 0x87, 0xe6,
	0x61, 0x14, 0xc7, 0x85, 0xb7, 0xab, 0xcc, 0x5d, 0x9a, 0x8f, 0xe2, 0xb8, 0x20, 0xa7, 0xd0, 0x13,
	0x65, 0x96, 0x61, 0x12, 0x8a, 0x65, 0x8e, 0x9e, 0xad, 0x16, 0x41, 0xab, 0x5e, 0x2c, 0x73, 0x24,
	0x27, 0x60, 0xa4, 0xf0, 0x15, 0x2e, 0x3d, 0x47, 0xc5, 0xec, 0x6a, 0xcd, 0xe7, 0xb8, 0x0c, 0xbe,
	0x87, 0xfd, 0x15, 0xb8, 0x2f, 0x4a, 0x21, 0xd1, 0x3d, 0x02, 0x37, 0x9a, 0x09, 0xca, 0x32, 0x03,
	0xcd, 0x48, 0xe4, 0x18, 0xf6, 0x0a, 0x14, 0xe1, 0x8c, 0xc5, 0x68, 0xc0, 0x75, 0x0a, 0x14, 0x17,
	0x2c, 0x46, 0xe2, 0x41, 0x27, 0x45, 0xce, 0xa3, 0x05, 0x1a, 0x7c, 0x95, 0x28, 0x91, 0xab, 0xa3,
	0xd2, 0xd8, 0x80, 0x73, 0xa5, 0x38, 0x8e, 0x83, 0x5f, 0x2c, 0x20, 0x97, 0xc8, 0x67, 0x05, 0x9d,
	0xaa, 0xcd, 0xb9, 0x4e, 0xcd, 0x21, 0x38, 0xd2, 0x80, 0x7b, 0x56, 0x7f, 0x77, 0xd0, 0x9d, 0x68,
	0xa1, 0x99, 0xb0, 0x9d, 0xb5, 0x84, 0x6d, 0x4c, 0x0e, 0x01, 0x5b, 0x44, 0x0b, 0xee, 0xd9, 0x2a,
	0x94, 0xfa, 0x97, 0x87, 0x63, 0xf3, 0x39, 0x47, 0x61, 0x72, 0x61, 0x24, 0xb9, 0x6f, 0x42, 0x53,
	0x2a, 0x3c, 0x57, 0xa9, 0xb5, 0x10, 0xfc, 0xee, 0xc2, 0xc3, 0x06, 0xc8, 0x6d, 0xa4, 0xe8, 0x12,
	0xd4, 0x59, 0x42, 0x09, 0x4a, 0x42, 0xed, 0x9d, 0x7f, 0x38, 0x34, 0x54, 0x1d, 0xb6, 0x6c, 0x3e,
	0x9c, 0x20, 0xcf, 0x59, 0xc6, 0x71, 0x2c, 0x30, 0x9d, 0xa8, 0xec, 0x5e, 0xa3, 0x50, 0x4c, 0x60,
	0x22, 0x4a, 0xc2, 0x19, 0x2b, 0xb3, 0xea, 0x74, 0xa0, 0x54, 0x17, 0x52, 0xe3, 0xff, 0xe8, 0xc0,
	0x3b, 0x75, 0x57, 0x49, 0x0d, 0xca, 0xc3, 0x28, 0xcf, 0x13, 0x8a, 0xb1, 0x3a, 0x88, 0x33, 0xe9,
	0x52, 0x3e, 0xd2, 0x8a, 0x7f, 0x99, 0xf3, 0x7b, 0x09, 0x59, 0x15, 0xc5, 0xa9, 0x15, 0xa5, 0xa2,
	0xbc, 0x5b, 0xa3, 0x7c, 0x93, 0xb8, 0x9d, 0x35, 0xe2, 0x92, 0x4f, 0xa1, 0x37, 0x53, 0xc4, 0x0d,
	0x65, 0x77, 0x7a, 0x7b, 0x7d, 0x6b, 0xd0, 0x3b, 0xf7, 0x87, 0xba, 0x75, 0x87, 0x55, 0xeb, 0x0e,
	0x5f, 0x54, 0xad, 0x3b, 0x01, 0x6d, 0x2e, 0x15, 0xd2, 0x99, 0x8b, 0x48, 0x94, 0x5c, 0x3b, 0x77,
	0xef, 0x77, 0xd6, 0xe6, 0xca, 0xb9, 0xc6, 0x68, 0xa8, 0x33, 0x9a, 0x3c, 0x97, 0x15, 0x4e, 0xa7,
	0x58, 0x70, 0xaf, 0xa7, 0xca, 0xf8, 0xc9, 0xdf, 0x2e, 0xe3, 0xf0, 0x4a, 0x39, 0xea, 0x8a, 0x9a,
	0x20, 0xfe, 0x1f, 0x16, 0xc0, 0x4a, 0x5f, 0xdf, 0xd7, 0x6a, 0xec, 0x7b, 0x0a, 0xbd, 0x02, 0x39,
	0x2b, 0x8b, 0x19, 0xca, 0x45, 0x5d, 0x2a, 0xa8, 0x54, 0xe3, 0x58, 0xb2, 0x55, 0xe3, 0xaf, 0x6a,
	0xa5, 0xa5, 0xf5, 0x1c, 0xda, 0xff, 0x25, 0x87, 0xce, 0x3f, 0xc9, 0x61, 0x30, 0x80, 0xfd, 0x4b,
	0x4c, 0x50, 0xdc, 0xdb, 0xf9, 0xc1, 0xb7, 0x70, 0x50, 0xb3, 0xdc, 0x42, 0xfb, 0x05, 0x9f, 0xc1,
	0xc3, 0x51, 0x1c, 0xcb, 0xf0, 0x3a, 0xd9, 0x06, 0x0e, 0x01, 0x5b, 0x22, 0xa8, 0x66, 0xb9, 0xfc,
	0x27, 0x4f, 0xa1, 0x5b, 0xa5, 0x95, 0x7b, 0x3b, 0x0a, 0xe6, 0x4a, 0x11, 0xbc, 0x86, 0xc3, 0x66,
	0xa0, 0x6d, 0x0c, 0x8b, 0x23, 0x70, 0x5f, 0xb2, 0xe9, 0x6a, 0x9c, 0x3a, 0x2f, 0xd9, 0x74, 0x1c,
	0x07, 0xcf, 0xe0, 0xd1, 0x04, 0x53, 0x76, 0x83, 0xff, 0xc3, 0x39, 0x7e, 0x80, 0xc7, 0x6f, 0xc4,
	0x7a, 0x8b, 0x47, 0xf9, 0xd5, 0x82, 0xe3, 0x2b, 0x16, 0xd3, 0xf9, 0x52, 0xee, 0x3f, 0x12, 0xa2,
	0xa0, 0xd3, 0x52, 0xa0, 0x39, 0xce, 0xc6, 0x2e, 0xb8, 0x73, 0x5c, 0x55, 0x03, 0x66, 0xb7, 0xfd,
	0x4e, 0xb5, 0xef, 0x1a, 0x61, 0xce, 0x3d, 0x77, 0xaa, 0xbb, 0x7e, 0xa7, 0x52, 0xf0, 0xdb, 0xf0,
	0x6f, 0x83, 0xbb, 0x1f, 0xc0, 0x83, 0xaf, 0xf3, 0xb8, 0xf1, 0xb6, 0x68, 0xa9, 0x77, 0x70, 0x03,
	0xfb, 0x2b, 0xb3, 0xb7, 0x57, 0xca, 0xf3, 0xdf, 0x6c, 0xe8, 0xd5, 0x5e, 0x4a, 0x64, 0x04, 0xb0,
	0x7a, 0x6d, 0x10, 0xef, 0x76, 0x3c, 0xae, 0xbd, 0x8f, 0xfc, 0xe3, 0x96, 0x15, 0x03, 0xfb, 0x19,
	0xbc, 0xdb, 0x18, 0xa6, 0xe4, 0x49, 0xfb, 0x90, 0xd5, 0x81, 0x9e, 0xde, 0x35, 0x81, 0xc9, 0x25,
	0xf4, 0x6a, 0xb3, 0x85, 0x1c, 0xd7, 0x8c, 0x9b, 0xb3, 0xc9, 0xf7, 0xdb, 0x96, 0x4c, 0x94, 0x2b,
	0x78, 0xaf, 0xd9, 0xf6, 0x64, 0xb5, 0x6b, 0xcb, 0x60, 0xf1, 0x4f, 0x36, 0xac, 0x9a, 0x70, 0xdf,
	0xc0, 0xc1, 0x1b, 0xdd, 0x47, 0x4e, 0x6f, 0x7d, 0xda, 0xbb, 0xdc, 0xef, 0x6f, 0x36, 0x30, 0x71,
	0x43, 0x38, 0x6c, 0x63, 0x25, 0x09, 0x6e, 0x3d, 0x37, 0x36, 0x9d, 0xff, 0xfe, 0x9d, 0x36, 0x66,
	0x83, 0x11, 0xc0, 0x8a, 0x64, 0xb5, 0xe2, 0xae, 0x11, 0xb4, 0x56, 0xdc, 0x75, 0x4e, 0xfa, 0x47,
	0x3f, 0xfd, 0x69, 0x1f, 0x90, 0xee, 0x57, 0x34, 0x5b, 0x5c, 0xc8, 0xe7, 0xb9, 0x6f, 0xcb, 0xc5,
	0xa9, 0xab, 0x6e, 0x93, 0x8f, 0xff, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x39, 0x2c, 0x1f, 0xe1, 0xcd,
	0x0b, 0x00, 0x00,
}
