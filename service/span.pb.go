// Code generated by protoc-gen-go. DO NOT EDIT.
// source: span.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/chai2010/qingcloud-go/spec.pb/qingcloud_sdk_rule"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import "regexp"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/logger"
import "github.com/chai2010/qingcloud-go/request"
import "github.com/chai2010/qingcloud-go/request/data"

var _ = regexp.Match
var _ = config.Config{}
var _ = logger.SetLevel
var _ = request.Request{}
var _ = data.Operation{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SpanServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *SpanServiceProperties) Reset()                    { *m = SpanServiceProperties{} }
func (m *SpanServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*SpanServiceProperties) ProtoMessage()               {}
func (*SpanServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{0} }

func (m *SpanServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type CreateSpanInput struct {
	SpanName   string `protobuf:"bytes,1,opt,name=span_name,json=spanName" json:"span_name,omitempty"`
	Flag       int32  `protobuf:"varint,2,opt,name=flag" json:"flag,omitempty"`
	IpAddr     string `protobuf:"bytes,3,opt,name=ip_addr,json=ipAddr" json:"ip_addr,omitempty"`
	TunnelType string `protobuf:"bytes,4,opt,name=tunnel_type,json=tunnelType" json:"tunnel_type,omitempty"`
	TunnelKey  int32  `protobuf:"varint,5,opt,name=tunnel_key,json=tunnelKey" json:"tunnel_key,omitempty"`
}

func (m *CreateSpanInput) Reset()                    { *m = CreateSpanInput{} }
func (m *CreateSpanInput) String() string            { return proto.CompactTextString(m) }
func (*CreateSpanInput) ProtoMessage()               {}
func (*CreateSpanInput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{1} }

func (m *CreateSpanInput) GetSpanName() string {
	if m != nil {
		return m.SpanName
	}
	return ""
}

func (m *CreateSpanInput) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *CreateSpanInput) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *CreateSpanInput) GetTunnelType() string {
	if m != nil {
		return m.TunnelType
	}
	return ""
}

func (m *CreateSpanInput) GetTunnelKey() int32 {
	if m != nil {
		return m.TunnelKey
	}
	return 0
}

type CreateSpanOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	SpanId  string `protobuf:"bytes,4,opt,name=span_id,json=spanId" json:"span_id,omitempty"`
}

func (m *CreateSpanOutput) Reset()                    { *m = CreateSpanOutput{} }
func (m *CreateSpanOutput) String() string            { return proto.CompactTextString(m) }
func (*CreateSpanOutput) ProtoMessage()               {}
func (*CreateSpanOutput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{2} }

func (m *CreateSpanOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CreateSpanOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CreateSpanOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateSpanOutput) GetSpanId() string {
	if m != nil {
		return m.SpanId
	}
	return ""
}

type DescribeSpansInput struct {
	Spans    []string `protobuf:"bytes,1,rep,name=spans" json:"spans,omitempty"`
	SpanName string   `protobuf:"bytes,2,opt,name=span_name,json=spanName" json:"span_name,omitempty"`
	IpAddr   string   `protobuf:"bytes,3,opt,name=ip_addr,json=ipAddr" json:"ip_addr,omitempty"`
	Tags     []string `protobuf:"bytes,4,rep,name=tags" json:"tags,omitempty"`
	Offset   int32    `protobuf:"varint,5,opt,name=offset" json:"offset,omitempty"`
	Limit    int32    `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty"`
}

func (m *DescribeSpansInput) Reset()                    { *m = DescribeSpansInput{} }
func (m *DescribeSpansInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeSpansInput) ProtoMessage()               {}
func (*DescribeSpansInput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{3} }

func (m *DescribeSpansInput) GetSpans() []string {
	if m != nil {
		return m.Spans
	}
	return nil
}

func (m *DescribeSpansInput) GetSpanName() string {
	if m != nil {
		return m.SpanName
	}
	return ""
}

func (m *DescribeSpansInput) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *DescribeSpansInput) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *DescribeSpansInput) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeSpansInput) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type DescribeSpansOutput struct {
	Action     string                              `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode    int32                               `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message    string                              `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	SpanSet    []*DescribeSpansOutput_ResponseItem `protobuf:"bytes,4,rep,name=span_set,json=spanSet" json:"span_set,omitempty"`
	TotalCount int32                               `protobuf:"varint,5,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *DescribeSpansOutput) Reset()                    { *m = DescribeSpansOutput{} }
func (m *DescribeSpansOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeSpansOutput) ProtoMessage()               {}
func (*DescribeSpansOutput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{4} }

func (m *DescribeSpansOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeSpansOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeSpansOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeSpansOutput) GetSpanSet() []*DescribeSpansOutput_ResponseItem {
	if m != nil {
		return m.SpanSet
	}
	return nil
}

func (m *DescribeSpansOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type DescribeSpansOutput_ResponseItem struct {
	IsApplied  int32                                          `protobuf:"varint,1,opt,name=is_applied,json=isApplied" json:"is_applied,omitempty"`
	SpanName   string                                         `protobuf:"bytes,2,opt,name=span_name,json=spanName" json:"span_name,omitempty"`
	IpAddr     string                                         `protobuf:"bytes,3,opt,name=ip_addr,json=ipAddr" json:"ip_addr,omitempty"`
	TunnelType string                                         `protobuf:"bytes,4,opt,name=tunnel_type,json=tunnelType" json:"tunnel_type,omitempty"`
	Tags       []string                                       `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	Flag       int32                                          `protobuf:"varint,6,opt,name=flag" json:"flag,omitempty"`
	TunnelKey  int32                                          `protobuf:"varint,7,opt,name=tunnel_key,json=tunnelKey" json:"tunnel_key,omitempty"`
	CreateTime *google_protobuf1.Timestamp                    `protobuf:"bytes,8,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime *google_protobuf1.Timestamp                    `protobuf:"bytes,9,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SpanId     string                                         `protobuf:"bytes,10,opt,name=span_id,json=spanId" json:"span_id,omitempty"`
	Members    []*DescribeSpansOutput_ResponseItem_MemberItem `protobuf:"bytes,11,rep,name=members" json:"members,omitempty"`
}

func (m *DescribeSpansOutput_ResponseItem) Reset()         { *m = DescribeSpansOutput_ResponseItem{} }
func (m *DescribeSpansOutput_ResponseItem) String() string { return proto.CompactTextString(m) }
func (*DescribeSpansOutput_ResponseItem) ProtoMessage()    {}
func (*DescribeSpansOutput_ResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor23, []int{4, 0}
}

func (m *DescribeSpansOutput_ResponseItem) GetIsApplied() int32 {
	if m != nil {
		return m.IsApplied
	}
	return 0
}

func (m *DescribeSpansOutput_ResponseItem) GetSpanName() string {
	if m != nil {
		return m.SpanName
	}
	return ""
}

func (m *DescribeSpansOutput_ResponseItem) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *DescribeSpansOutput_ResponseItem) GetTunnelType() string {
	if m != nil {
		return m.TunnelType
	}
	return ""
}

func (m *DescribeSpansOutput_ResponseItem) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *DescribeSpansOutput_ResponseItem) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *DescribeSpansOutput_ResponseItem) GetTunnelKey() int32 {
	if m != nil {
		return m.TunnelKey
	}
	return 0
}

func (m *DescribeSpansOutput_ResponseItem) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *DescribeSpansOutput_ResponseItem) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *DescribeSpansOutput_ResponseItem) GetSpanId() string {
	if m != nil {
		return m.SpanId
	}
	return ""
}

func (m *DescribeSpansOutput_ResponseItem) GetMembers() []*DescribeSpansOutput_ResponseItem_MemberItem {
	if m != nil {
		return m.Members
	}
	return nil
}

type DescribeSpansOutput_ResponseItem_MemberItem struct {
	SpanId     string                      `protobuf:"bytes,1,opt,name=span_id,json=spanId" json:"span_id,omitempty"`
	ResourceId string                      `protobuf:"bytes,2,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	Status     string                      `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	CreateTime *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
}

func (m *DescribeSpansOutput_ResponseItem_MemberItem) Reset() {
	*m = DescribeSpansOutput_ResponseItem_MemberItem{}
}
func (m *DescribeSpansOutput_ResponseItem_MemberItem) String() string {
	return proto.CompactTextString(m)
}
func (*DescribeSpansOutput_ResponseItem_MemberItem) ProtoMessage() {}
func (*DescribeSpansOutput_ResponseItem_MemberItem) Descriptor() ([]byte, []int) {
	return fileDescriptor23, []int{4, 0, 0}
}

func (m *DescribeSpansOutput_ResponseItem_MemberItem) GetSpanId() string {
	if m != nil {
		return m.SpanId
	}
	return ""
}

func (m *DescribeSpansOutput_ResponseItem_MemberItem) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *DescribeSpansOutput_ResponseItem_MemberItem) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DescribeSpansOutput_ResponseItem_MemberItem) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *DescribeSpansOutput_ResponseItem_MemberItem) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type DeleteSpansInput struct {
	Spans []string `protobuf:"bytes,1,rep,name=spans" json:"spans,omitempty"`
}

func (m *DeleteSpansInput) Reset()                    { *m = DeleteSpansInput{} }
func (m *DeleteSpansInput) String() string            { return proto.CompactTextString(m) }
func (*DeleteSpansInput) ProtoMessage()               {}
func (*DeleteSpansInput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{5} }

func (m *DeleteSpansInput) GetSpans() []string {
	if m != nil {
		return m.Spans
	}
	return nil
}

type DeleteSpansOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteSpansOutput) Reset()                    { *m = DeleteSpansOutput{} }
func (m *DeleteSpansOutput) String() string            { return proto.CompactTextString(m) }
func (*DeleteSpansOutput) ProtoMessage()               {}
func (*DeleteSpansOutput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{6} }

func (m *DeleteSpansOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DeleteSpansOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DeleteSpansOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AddSpanMembersInput struct {
	Span      string   `protobuf:"bytes,1,opt,name=span" json:"span,omitempty"`
	Resources []string `protobuf:"bytes,2,rep,name=resources" json:"resources,omitempty"`
}

func (m *AddSpanMembersInput) Reset()                    { *m = AddSpanMembersInput{} }
func (m *AddSpanMembersInput) String() string            { return proto.CompactTextString(m) }
func (*AddSpanMembersInput) ProtoMessage()               {}
func (*AddSpanMembersInput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{7} }

func (m *AddSpanMembersInput) GetSpan() string {
	if m != nil {
		return m.Span
	}
	return ""
}

func (m *AddSpanMembersInput) GetResources() []string {
	if m != nil {
		return m.Resources
	}
	return nil
}

type AddSpanMembersOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *AddSpanMembersOutput) Reset()                    { *m = AddSpanMembersOutput{} }
func (m *AddSpanMembersOutput) String() string            { return proto.CompactTextString(m) }
func (*AddSpanMembersOutput) ProtoMessage()               {}
func (*AddSpanMembersOutput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{8} }

func (m *AddSpanMembersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *AddSpanMembersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *AddSpanMembersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AddSpanMembersOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type RemoveSpanMembersInput struct {
	Span      string   `protobuf:"bytes,1,opt,name=span" json:"span,omitempty"`
	Resources []string `protobuf:"bytes,2,rep,name=resources" json:"resources,omitempty"`
}

func (m *RemoveSpanMembersInput) Reset()                    { *m = RemoveSpanMembersInput{} }
func (m *RemoveSpanMembersInput) String() string            { return proto.CompactTextString(m) }
func (*RemoveSpanMembersInput) ProtoMessage()               {}
func (*RemoveSpanMembersInput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{9} }

func (m *RemoveSpanMembersInput) GetSpan() string {
	if m != nil {
		return m.Span
	}
	return ""
}

func (m *RemoveSpanMembersInput) GetResources() []string {
	if m != nil {
		return m.Resources
	}
	return nil
}

type RemoveSpanMembersOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *RemoveSpanMembersOutput) Reset()                    { *m = RemoveSpanMembersOutput{} }
func (m *RemoveSpanMembersOutput) String() string            { return proto.CompactTextString(m) }
func (*RemoveSpanMembersOutput) ProtoMessage()               {}
func (*RemoveSpanMembersOutput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{10} }

func (m *RemoveSpanMembersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *RemoveSpanMembersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *RemoveSpanMembersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RemoveSpanMembersOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type ModifySpanAttributesInput struct {
	SpanId     string `protobuf:"bytes,1,opt,name=span_id,json=spanId" json:"span_id,omitempty"`
	SpanName   string `protobuf:"bytes,2,opt,name=span_name,json=spanName" json:"span_name,omitempty"`
	Flag       int32  `protobuf:"varint,3,opt,name=flag" json:"flag,omitempty"`
	IpAddr     string `protobuf:"bytes,4,opt,name=ip_addr,json=ipAddr" json:"ip_addr,omitempty"`
	TunnelType string `protobuf:"bytes,5,opt,name=tunnel_type,json=tunnelType" json:"tunnel_type,omitempty"`
	TunnelKey  int32  `protobuf:"varint,6,opt,name=tunnel_key,json=tunnelKey" json:"tunnel_key,omitempty"`
}

func (m *ModifySpanAttributesInput) Reset()                    { *m = ModifySpanAttributesInput{} }
func (m *ModifySpanAttributesInput) String() string            { return proto.CompactTextString(m) }
func (*ModifySpanAttributesInput) ProtoMessage()               {}
func (*ModifySpanAttributesInput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{11} }

func (m *ModifySpanAttributesInput) GetSpanId() string {
	if m != nil {
		return m.SpanId
	}
	return ""
}

func (m *ModifySpanAttributesInput) GetSpanName() string {
	if m != nil {
		return m.SpanName
	}
	return ""
}

func (m *ModifySpanAttributesInput) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *ModifySpanAttributesInput) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *ModifySpanAttributesInput) GetTunnelType() string {
	if m != nil {
		return m.TunnelType
	}
	return ""
}

func (m *ModifySpanAttributesInput) GetTunnelKey() int32 {
	if m != nil {
		return m.TunnelKey
	}
	return 0
}

type ModifySpanAttributesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ModifySpanAttributesOutput) Reset()                    { *m = ModifySpanAttributesOutput{} }
func (m *ModifySpanAttributesOutput) String() string            { return proto.CompactTextString(m) }
func (*ModifySpanAttributesOutput) ProtoMessage()               {}
func (*ModifySpanAttributesOutput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{12} }

func (m *ModifySpanAttributesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ModifySpanAttributesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ModifySpanAttributesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateSpanInput struct {
	Span string `protobuf:"bytes,1,opt,name=span" json:"span,omitempty"`
}

func (m *UpdateSpanInput) Reset()                    { *m = UpdateSpanInput{} }
func (m *UpdateSpanInput) String() string            { return proto.CompactTextString(m) }
func (*UpdateSpanInput) ProtoMessage()               {}
func (*UpdateSpanInput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{13} }

func (m *UpdateSpanInput) GetSpan() string {
	if m != nil {
		return m.Span
	}
	return ""
}

type UpdateSpanOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *UpdateSpanOutput) Reset()                    { *m = UpdateSpanOutput{} }
func (m *UpdateSpanOutput) String() string            { return proto.CompactTextString(m) }
func (*UpdateSpanOutput) ProtoMessage()               {}
func (*UpdateSpanOutput) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{14} }

func (m *UpdateSpanOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *UpdateSpanOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *UpdateSpanOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateSpanOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func init() {
	proto.RegisterType((*SpanServiceProperties)(nil), "service.SpanServiceProperties")
	proto.RegisterType((*CreateSpanInput)(nil), "service.CreateSpanInput")
	proto.RegisterType((*CreateSpanOutput)(nil), "service.CreateSpanOutput")
	proto.RegisterType((*DescribeSpansInput)(nil), "service.DescribeSpansInput")
	proto.RegisterType((*DescribeSpansOutput)(nil), "service.DescribeSpansOutput")
	proto.RegisterType((*DescribeSpansOutput_ResponseItem)(nil), "service.DescribeSpansOutput.ResponseItem")
	proto.RegisterType((*DescribeSpansOutput_ResponseItem_MemberItem)(nil), "service.DescribeSpansOutput.ResponseItem.MemberItem")
	proto.RegisterType((*DeleteSpansInput)(nil), "service.DeleteSpansInput")
	proto.RegisterType((*DeleteSpansOutput)(nil), "service.DeleteSpansOutput")
	proto.RegisterType((*AddSpanMembersInput)(nil), "service.AddSpanMembersInput")
	proto.RegisterType((*AddSpanMembersOutput)(nil), "service.AddSpanMembersOutput")
	proto.RegisterType((*RemoveSpanMembersInput)(nil), "service.RemoveSpanMembersInput")
	proto.RegisterType((*RemoveSpanMembersOutput)(nil), "service.RemoveSpanMembersOutput")
	proto.RegisterType((*ModifySpanAttributesInput)(nil), "service.ModifySpanAttributesInput")
	proto.RegisterType((*ModifySpanAttributesOutput)(nil), "service.ModifySpanAttributesOutput")
	proto.RegisterType((*UpdateSpanInput)(nil), "service.UpdateSpanInput")
	proto.RegisterType((*UpdateSpanOutput)(nil), "service.UpdateSpanOutput")
}

// See https://docs.qingcloud.com/api/span/index.html
type SpanServiceInterface interface {
	CreateSpan(in *CreateSpanInput) (out *CreateSpanOutput, err error)
	DescribeSpans(in *DescribeSpansInput) (out *DescribeSpansOutput, err error)
	DeleteSpans(in *DeleteSpansInput) (out *DeleteSpansOutput, err error)
	AddSpanMembers(in *AddSpanMembersInput) (out *AddSpanMembersOutput, err error)
	RemoveSpanMembers(in *RemoveSpanMembersInput) (out *RemoveSpanMembersOutput, err error)
	ModifySpanAttributes(in *ModifySpanAttributesInput) (out *ModifySpanAttributesOutput, err error)
	UpdateSpan(in *UpdateSpanInput) (out *UpdateSpanOutput, err error)
}

// See https://docs.qingcloud.com/api/span/index.html
type SpanService struct {
	Config           *config.Config
	Properties       *SpanServiceProperties
	LastResponseBody string
}

// See https://docs.qingcloud.com/api/span/index.html
func NewSpanService(conf *config.Config, zone string) (p *SpanService) {
	return &SpanService{
		Config:     conf,
		Properties: &SpanServiceProperties{Zone: zone},
	}
}

// See https://docs.qingcloud.com/api/span/index.html
func (s *QingCloudService) Span(zone string) (*SpanService, error) {
	properties := &SpanServiceProperties{
		Zone: zone,
	}

	return &SpanService{Config: s.Config, Properties: properties}, nil
}

func (p *SpanService) CreateSpan(in *CreateSpanInput) (out *CreateSpanOutput, err error) {
	if in == nil {
		in = &CreateSpanInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateSpan",
		RequestMethod: "GET", // GET or POST
	}

	x := &CreateSpanOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SpanService) DescribeSpans(in *DescribeSpansInput) (out *DescribeSpansOutput, err error) {
	if in == nil {
		in = &DescribeSpansInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeSpans",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeSpansOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SpanService) DeleteSpans(in *DeleteSpansInput) (out *DeleteSpansOutput, err error) {
	if in == nil {
		in = &DeleteSpansInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteSpans",
		RequestMethod: "GET", // GET or POST
	}

	x := &DeleteSpansOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SpanService) AddSpanMembers(in *AddSpanMembersInput) (out *AddSpanMembersOutput, err error) {
	if in == nil {
		in = &AddSpanMembersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "AddSpanMembers",
		RequestMethod: "GET", // GET or POST
	}

	x := &AddSpanMembersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SpanService) RemoveSpanMembers(in *RemoveSpanMembersInput) (out *RemoveSpanMembersOutput, err error) {
	if in == nil {
		in = &RemoveSpanMembersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "RemoveSpanMembers",
		RequestMethod: "GET", // GET or POST
	}

	x := &RemoveSpanMembersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SpanService) ModifySpanAttributes(in *ModifySpanAttributesInput) (out *ModifySpanAttributesOutput, err error) {
	if in == nil {
		in = &ModifySpanAttributesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifySpanAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &ModifySpanAttributesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SpanService) UpdateSpan(in *UpdateSpanInput) (out *UpdateSpanOutput, err error) {
	if in == nil {
		in = &UpdateSpanInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "UpdateSpan",
		RequestMethod: "GET", // GET or POST
	}

	x := &UpdateSpanOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SpanServiceProperties) Validate() error {
	return nil
}

func (p *CreateSpanInput) Validate() error {
	return nil
}

func (p *CreateSpanOutput) Validate() error {
	return nil
}

func (p *DescribeSpansInput) Validate() error {
	return nil
}

func (p *DescribeSpansOutput) Validate() error {
	return nil
}

func (p *DeleteSpansInput) Validate() error {
	return nil
}

func (p *DeleteSpansOutput) Validate() error {
	return nil
}

func (p *AddSpanMembersInput) Validate() error {
	return nil
}

func (p *AddSpanMembersOutput) Validate() error {
	return nil
}

func (p *RemoveSpanMembersInput) Validate() error {
	return nil
}

func (p *RemoveSpanMembersOutput) Validate() error {
	return nil
}

func (p *ModifySpanAttributesInput) Validate() error {
	return nil
}

func (p *ModifySpanAttributesOutput) Validate() error {
	return nil
}

func (p *UpdateSpanInput) Validate() error {
	return nil
}

func (p *UpdateSpanOutput) Validate() error {
	return nil
}

func init() { proto.RegisterFile("span.proto", fileDescriptor23) }

var fileDescriptor23 = []byte{
	// 947 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xef, 0x6e, 0xdc, 0x44,
	0x10, 0x97, 0x93, 0xfb, 0x93, 0x9b, 0x83, 0x36, 0xdd, 0xa6, 0xad, 0xe3, 0x36, 0xca, 0xc9, 0x08,
	0xe9, 0x10, 0x92, 0x4f, 0x0a, 0x7c, 0x82, 0x2f, 0x9c, 0x72, 0x12, 0xba, 0xa2, 0x14, 0xb8, 0x14,
	0xbe, 0x1a, 0x9f, 0x77, 0xee, 0xba, 0xad, 0xed, 0x35, 0xde, 0x75, 0xd4, 0xab, 0xc4, 0x03, 0xc0,
	0x2b, 0xf0, 0x8d, 0x07, 0xe1, 0x2d, 0x90, 0x78, 0x0d, 0xc4, 0x0b, 0xa0, 0xdd, 0xb5, 0x73, 0xf6,
	0xd5, 0x97, 0xf0, 0x2f, 0xf9, 0x62, 0x79, 0x66, 0x67, 0x66, 0x7f, 0x3b, 0xf3, 0x9b, 0xd9, 0x05,
	0x10, 0x69, 0x90, 0x78, 0x69, 0xc6, 0x25, 0x27, 0x5d, 0x81, 0xd9, 0x05, 0x0b, 0xd1, 0x39, 0xfa,
	0x9e, 0x25, 0xcb, 0x30, 0xe2, 0x39, 0xf5, 0x05, 0x7d, 0xe5, 0x67, 0x79, 0x84, 0x23, 0xf5, 0x31,
	0x76, 0xce, 0xf1, 0x92, 0xf3, 0x65, 0x84, 0x23, 0x2d, 0xcd, 0xf3, 0xc5, 0x48, 0xb2, 0x18, 0x85,
	0x0c, 0xe2, 0xd4, 0x18, 0xb8, 0x1f, 0xc2, 0x83, 0xf3, 0x34, 0x48, 0xce, 0x4d, 0xb8, 0xaf, 0x32,
	0x9e, 0x62, 0x26, 0x19, 0x0a, 0x42, 0xa0, 0xf5, 0x86, 0x27, 0x68, 0x5b, 0x03, 0x6b, 0xd8, 0x9b,
	0xe9, 0x7f, 0xf7, 0x67, 0x0b, 0xee, 0x9e, 0x66, 0x18, 0x48, 0x54, 0x3e, 0xd3, 0x24, 0xcd, 0x25,
	0x79, 0x0c, 0x3d, 0x85, 0xcb, 0x4f, 0x82, 0xb8, 0x34, 0xde, 0x53, 0x8a, 0x67, 0x41, 0x8c, 0x2a,
	0xc8, 0x22, 0x0a, 0x96, 0xf6, 0xce, 0xc0, 0x1a, 0xb6, 0x67, 0xfa, 0x9f, 0x3c, 0x82, 0x2e, 0x4b,
	0xfd, 0x80, 0xd2, 0xcc, 0xde, 0xd5, 0xe6, 0x1d, 0x96, 0x8e, 0x29, 0xcd, 0xc8, 0x31, 0xf4, 0x65,
	0x9e, 0x24, 0x18, 0xf9, 0x72, 0x95, 0xa2, 0xdd, 0xd2, 0x8b, 0x60, 0x54, 0xcf, 0x57, 0x29, 0x92,
	0x23, 0x28, 0x24, 0xff, 0x15, 0xae, 0xec, 0xb6, 0x8e, 0xd9, 0x33, 0x9a, 0x2f, 0x70, 0xe5, 0xbe,
	0x86, 0xfd, 0x35, 0xb8, 0x2f, 0x73, 0xa9, 0xd0, 0x3d, 0x84, 0x4e, 0x10, 0x4a, 0xc6, 0x93, 0x02,
	0x5a, 0x21, 0x91, 0x43, 0xd8, 0xcb, 0x50, 0xfa, 0x21, 0xa7, 0x58, 0x80, 0xeb, 0x66, 0x28, 0x4f,
	0x39, 0x45, 0x62, 0x43, 0x37, 0x46, 0x21, 0x82, 0x25, 0x16, 0xf8, 0x4a, 0x51, 0x21, 0xd7, 0x47,
	0x65, 0xb4, 0x00, 0xd7, 0x51, 0xe2, 0x94, 0xba, 0xbf, 0x58, 0x40, 0x26, 0x28, 0xc2, 0x8c, 0xcd,
	0xf5, 0xe6, 0xc2, 0xa4, 0xe6, 0x00, 0xda, 0xca, 0x40, 0xd8, 0xd6, 0x60, 0x77, 0xd8, 0x9b, 0x19,
	0xa1, 0x9e, 0xb0, 0x9d, 0x8d, 0x84, 0x6d, 0x4d, 0x0e, 0x81, 0x96, 0x0c, 0x96, 0xc2, 0x6e, 0xe9,
	0x50, 0xfa, 0x5f, 0x1d, 0x8e, 0x2f, 0x16, 0x02, 0x65, 0x91, 0x8b, 0x42, 0x52, 0xfb, 0x46, 0x2c,
	0x66, 0xd2, 0xee, 0x68, 0xb5, 0x11, 0xdc, 0xdf, 0x3a, 0x70, 0xbf, 0x06, 0xf2, 0x26, 0x52, 0x34,
	0x01, 0x7d, 0x16, 0x5f, 0x81, 0x52, 0x50, 0xfb, 0x27, 0x1f, 0x78, 0x05, 0x55, 0xbd, 0x86, 0xcd,
	0xbd, 0x19, 0x8a, 0x94, 0x27, 0x02, 0xa7, 0x12, 0xe3, 0x99, 0xce, 0xee, 0x39, 0x4a, 0xcd, 0x04,
	0x2e, 0x83, 0xc8, 0x0f, 0x79, 0x9e, 0x94, 0xa7, 0x03, 0xad, 0x3a, 0x55, 0x1a, 0xe7, 0xc7, 0x36,
	0xbc, 0x53, 0x75, 0x55, 0xd4, 0x60, 0xc2, 0x0f, 0xd2, 0x34, 0x62, 0x48, 0xf5, 0x41, 0xda, 0xb3,
	0x1e, 0x13, 0x63, 0xa3, 0xf8, 0x97, 0x39, 0xbf, 0x96, 0x90, 0x65, 0x51, 0xda, 0x95, 0xa2, 0x94,
	0x94, 0xef, 0x54, 0x28, 0x5f, 0x27, 0x6e, 0x77, 0x83, 0xb8, 0xe4, 0x53, 0xe8, 0x87, 0x9a, 0xb8,
	0xbe, 0xea, 0x4e, 0x7b, 0x6f, 0x60, 0x0d, 0xfb, 0x27, 0x8e, 0x67, 0x5a, 0xd7, 0x2b, 0x5b, 0xd7,
	0x7b, 0x5e, 0xb6, 0xee, 0x0c, 0x8c, 0xb9, 0x52, 0x28, 0x67, 0x21, 0x03, 0x99, 0x0b, 0xe3, 0xdc,
	0xbb, 0xde, 0xd9, 0x98, 0x6b, 0xe7, 0x0a, 0xa3, 0xa1, 0xca, 0x68, 0xf2, 0x4c, 0x55, 0x38, 0x9e,
	0x63, 0x26, 0xec, 0xbe, 0x2e, 0xe3, 0xc7, 0x7f, 0xbb, 0x8c, 0xde, 0x99, 0x76, 0x34, 0x15, 0x2d,
	0x82, 0x38, 0xbf, 0x5b, 0x00, 0x6b, 0x7d, 0x75, 0x5f, 0xab, 0xb6, 0xef, 0x31, 0xf4, 0x33, 0x14,
	0x3c, 0xcf, 0x42, 0x54, 0x8b, 0xa6, 0x54, 0x50, 0xaa, 0xa6, 0x54, 0xb1, 0xd5, 0xe0, 0x2f, 0x6b,
	0x65, 0xa4, 0xcd, 0x1c, 0xb6, 0xfe, 0x4b, 0x0e, 0xdb, 0xff, 0x24, 0x87, 0xee, 0x10, 0xf6, 0x27,
	0x18, 0xa1, 0xbc, 0xb6, 0xf3, 0xdd, 0xef, 0xe0, 0x5e, 0xc5, 0xf2, 0x06, 0xda, 0xcf, 0xfd, 0x1c,
	0xee, 0x8f, 0x29, 0x55, 0xe1, 0x4d, 0xb2, 0x0b, 0x38, 0x04, 0x5a, 0x0a, 0x41, 0x39, 0xcb, 0xd5,
	0x3f, 0x79, 0x02, 0xbd, 0x32, 0xad, 0xc2, 0xde, 0xd1, 0x30, 0xd7, 0x0a, 0xf7, 0x0d, 0x1c, 0xd4,
	0x03, 0xdd, 0xc4, 0xb0, 0x78, 0x00, 0x9d, 0x97, 0x7c, 0xbe, 0x1e, 0xa7, 0xed, 0x97, 0x7c, 0x3e,
	0xa5, 0xee, 0x53, 0x78, 0x38, 0xc3, 0x98, 0x5f, 0xe0, 0xff, 0x70, 0x8e, 0x1f, 0xe0, 0xd1, 0x5b,
	0xb1, 0x6e, 0xf1, 0x28, 0xbf, 0x5a, 0x70, 0x78, 0xc6, 0x29, 0x5b, 0xac, 0xd4, 0xfe, 0x63, 0x29,
	0x33, 0x36, 0xcf, 0x25, 0x16, 0xc7, 0xd9, 0xda, 0x05, 0x57, 0x8e, 0xab, 0x72, 0xc0, 0xec, 0x36,
	0xdf, 0xa9, 0xad, 0xab, 0x46, 0x58, 0xfb, 0x9a, 0x3b, 0xb5, 0xb3, 0x79, 0xa7, 0x32, 0x70, 0x9a,
	0xf0, 0xdf, 0x04, 0x77, 0xdf, 0x87, 0xbb, 0xdf, 0xa4, 0xb4, 0xf6, 0xb6, 0x68, 0xa8, 0xb7, 0x7b,
	0x01, 0xfb, 0x6b, 0xb3, 0xdb, 0x2b, 0xe5, 0xc9, 0x9f, 0x2d, 0xe8, 0x57, 0x5e, 0x4a, 0x64, 0x0c,
	0xb0, 0x7e, 0x6d, 0x10, 0xfb, 0x72, 0x3c, 0x6e, 0xbc, 0x8f, 0x9c, 0xc3, 0x86, 0x95, 0x02, 0xf6,
	0x53, 0x78, 0xb7, 0x36, 0x4c, 0xc9, 0xe3, 0xe6, 0x21, 0x6b, 0x02, 0x3d, 0xb9, 0x6a, 0x02, 0x93,
	0x09, 0xf4, 0x2b, 0xb3, 0x85, 0x1c, 0x56, 0x8c, 0xeb, 0xb3, 0xc9, 0x71, 0x9a, 0x96, 0x8a, 0x28,
	0x67, 0x70, 0xa7, 0xde, 0xf6, 0x64, 0xbd, 0x6b, 0xc3, 0x60, 0x71, 0x8e, 0xb6, 0xac, 0x16, 0xe1,
	0xbe, 0x85, 0x7b, 0x6f, 0x75, 0x1f, 0x39, 0xbe, 0xf4, 0x69, 0xee, 0x72, 0x67, 0xb0, 0xdd, 0xa0,
	0x88, 0xeb, 0xc3, 0x41, 0x13, 0x2b, 0x89, 0x7b, 0xe9, 0xb9, 0xb5, 0xe9, 0x9c, 0xf7, 0xae, 0xb4,
	0x29, 0x36, 0x18, 0x03, 0xac, 0x49, 0x56, 0x29, 0xee, 0x06, 0x41, 0x2b, 0xc5, 0xdd, 0xe4, 0xa4,
	0x33, 0xf9, 0xe9, 0x8f, 0xd6, 0x67, 0xe0, 0xbd, 0x90, 0x32, 0x15, 0x9f, 0x8c, 0x46, 0x94, 0x87,
	0xc2, 0xbb, 0x7c, 0xab, 0x7b, 0x21, 0x8f, 0x47, 0x41, 0xca, 0x46, 0x8a, 0xd2, 0x23, 0x96, 0x50,
	0x7c, 0xed, 0xbd, 0x90, 0x71, 0x44, 0xee, 0x7c, 0xcd, 0x92, 0xe5, 0xa9, 0x36, 0x51, 0xb1, 0xe6,
	0x1d, 0x7d, 0xf9, 0x7c, 0xf4, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x79, 0xd4, 0x24, 0x23, 0xfc,
	0x0b, 0x00, 0x00,
}
