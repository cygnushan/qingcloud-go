// Code generated by protoc-gen-go. DO NOT EDIT.
// source: span.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/chai2010/qingcloud-go/spec.pb/qingcloud_sdk_rule"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import "github.com/chai2010/qingcloud-go/request/data"

var _ = config.Config{}
var _ = request.Request{}
var _ = data.Operation{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SpanServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *SpanServiceProperties) Reset()                    { *m = SpanServiceProperties{} }
func (m *SpanServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*SpanServiceProperties) ProtoMessage()               {}
func (*SpanServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor23, []int{0} }

func (m *SpanServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func init() {
	proto.RegisterType((*SpanServiceProperties)(nil), "service.SpanServiceProperties")
}

type SpanServiceInterface interface {
	CreateSpan(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	DescribeSpans(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	DeleteSpans(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	AddSpanMembers(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	RemoveSpanMembers(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	ModifySpanAttributes(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	UpdateSpan(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
}

type SpanService struct {
	Config     *config.Config
	Properties *SpanServiceProperties
}

func NewSpanService(conf *config.Config, zone string) (p *SpanService) {
	return &SpanService{
		Config:     conf,
		Properties: &SpanServiceProperties{Zone: zone},
	}
}

func (s *QingCloudService) Span(zone string) (*SpanService, error) {
	properties := &SpanServiceProperties{
		Zone: zone,
	}

	return &SpanService{Config: s.Config, Properties: properties}, nil
}

func (p *SpanService) CreateSpan(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateSpan",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SpanService) DescribeSpans(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeSpans",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SpanService) DeleteSpans(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteSpans",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SpanService) AddSpanMembers(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "AddSpanMembers",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SpanService) RemoveSpanMembers(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "RemoveSpanMembers",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SpanService) ModifySpanAttributes(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifySpanAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SpanService) UpdateSpan(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "UpdateSpan",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func init() { proto.RegisterFile("span.proto", fileDescriptor23) }

var fileDescriptor23 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0x41, 0x4b, 0xc3, 0x30,
	0x1c, 0xc5, 0x19, 0x16, 0x65, 0xff, 0xa1, 0xb0, 0xe0, 0x44, 0x2a, 0x82, 0x78, 0x12, 0x84, 0x16,
	0xf4, 0x3a, 0xd1, 0xd1, 0xe9, 0x6d, 0xa0, 0x1b, 0x9e, 0x47, 0xdb, 0xbc, 0x95, 0x60, 0x9b, 0xc4,
	0x24, 0x1d, 0xcc, 0x8f, 0xe0, 0x97, 0x15, 0xbf, 0x81, 0xa4, 0x45, 0xf0, 0xe2, 0xa1, 0xdb, 0x25,
	0x24, 0x2f, 0xef, 0xfd, 0xde, 0xe1, 0xff, 0x27, 0xb2, 0x3a, 0x95, 0x91, 0x36, 0xca, 0x29, 0x76,
	0x60, 0x61, 0xd6, 0x22, 0x47, 0x78, 0xfe, 0x2e, 0x64, 0x91, 0x97, 0xaa, 0xe6, 0x4b, 0xcb, 0xdf,
	0x96, 0xa6, 0x2e, 0x11, 0xfb, 0xa3, 0xf5, 0x85, 0x67, 0x85, 0x52, 0x45, 0x89, 0xb8, 0x79, 0x65,
	0xf5, 0x2a, 0x46, 0xa5, 0xdd, 0xa6, 0xfd, 0xbc, 0xbc, 0xa6, 0xd1, 0x42, 0xa7, 0x72, 0xd1, 0xa2,
	0x9e, 0x8d, 0xd2, 0x30, 0x4e, 0xc0, 0x32, 0x46, 0xc1, 0x87, 0x92, 0x38, 0xed, 0x5d, 0xf4, 0xae,
	0xfa, 0xf3, 0xe6, 0x7e, 0xf3, 0xb5, 0x47, 0x83, 0x3f, 0x6e, 0x36, 0x26, 0x4a, 0x0c, 0x52, 0x07,
	0x2f, 0xb2, 0x93, 0xa8, 0x2d, 0x8a, 0x7e, 0x8b, 0xa2, 0x47, 0x5f, 0x14, 0xfe, 0xa3, 0xb3, 0x7b,
	0x3a, 0x9c, 0xc2, 0xe6, 0x46, 0x64, 0x4d, 0xde, 0x76, 0x06, 0xdc, 0xd1, 0x60, 0x8a, 0x12, 0x6e,
	0xcb, 0xf8, 0x03, 0x1d, 0x4d, 0x38, 0xf7, 0xd9, 0x19, 0xaa, 0x0c, 0xa6, 0x3b, 0x21, 0xa1, 0xe1,
	0x1c, 0x95, 0x5a, 0x63, 0x17, 0xc8, 0x13, 0x1d, 0xcf, 0x14, 0x17, 0xab, 0x8d, 0x87, 0x4c, 0x9c,
	0x33, 0x22, 0xab, 0x1d, 0xba, 0x73, 0xc6, 0x44, 0xaf, 0x9a, 0x6f, 0x39, 0x8c, 0x70, 0xf4, 0xf9,
	0x1d, 0x0c, 0xa9, 0xff, 0x22, 0x64, 0x91, 0xf8, 0x4d, 0x62, 0x81, 0xc7, 0x64, 0xfb, 0x8d, 0xed,
	0xf6, 0x27, 0x00, 0x00, 0xff, 0xff, 0xfb, 0x1c, 0x69, 0xc2, 0x78, 0x02, 0x00, 0x00,
}
