// Code generated by protoc-gen-go. DO NOT EDIT.
// source: image.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/chai2010/qingcloud-go/spec.pb/qingcloud_sdk_rule"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import "github.com/chai2010/qingcloud-go/request/data"

var _ = config.Config{}
var _ = request.Request{}
var _ = data.Operation{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ImageServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *ImageServiceProperties) Reset()                    { *m = ImageServiceProperties{} }
func (m *ImageServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*ImageServiceProperties) ProtoMessage()               {}
func (*ImageServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *ImageServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type DescribeImagesInput struct {
	Images        []string `protobuf:"bytes,1,rep,name=images" json:"images,omitempty"`
	ProcessorType string   `protobuf:"bytes,2,opt,name=processor_type,json=processorType" json:"processor_type,omitempty"`
	OsFamily      string   `protobuf:"bytes,3,opt,name=os_family,json=osFamily" json:"os_family,omitempty"`
	Visibility    string   `protobuf:"bytes,4,opt,name=visibility" json:"visibility,omitempty"`
	Provider      string   `protobuf:"bytes,5,opt,name=provider" json:"provider,omitempty"`
	Status        []string `protobuf:"bytes,6,rep,name=status" json:"status,omitempty"`
	SearchWord    string   `protobuf:"bytes,7,opt,name=search_word,json=searchWord" json:"search_word,omitempty"`
	Verbose       int32    `protobuf:"varint,8,opt,name=verbose" json:"verbose,omitempty"`
	Offset        int32    `protobuf:"varint,9,opt,name=offset" json:"offset,omitempty"`
	Limit         int32    `protobuf:"varint,10,opt,name=limit" json:"limit,omitempty"`
}

func (m *DescribeImagesInput) Reset()                    { *m = DescribeImagesInput{} }
func (m *DescribeImagesInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeImagesInput) ProtoMessage()               {}
func (*DescribeImagesInput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *DescribeImagesInput) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *DescribeImagesInput) GetProcessorType() string {
	if m != nil {
		return m.ProcessorType
	}
	return ""
}

func (m *DescribeImagesInput) GetOsFamily() string {
	if m != nil {
		return m.OsFamily
	}
	return ""
}

func (m *DescribeImagesInput) GetVisibility() string {
	if m != nil {
		return m.Visibility
	}
	return ""
}

func (m *DescribeImagesInput) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *DescribeImagesInput) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeImagesInput) GetSearchWord() string {
	if m != nil {
		return m.SearchWord
	}
	return ""
}

func (m *DescribeImagesInput) GetVerbose() int32 {
	if m != nil {
		return m.Verbose
	}
	return 0
}

func (m *DescribeImagesInput) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeImagesInput) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type DescribeImagesOutput struct {
	Action     string                               `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode    int32                                `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message    string                               `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	ImageSet   []*DescribeImagesOutput_ResponseItem `protobuf:"bytes,4,rep,name=image_set,json=imageSet" json:"image_set,omitempty"`
	TotalCount int32                                `protobuf:"varint,5,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *DescribeImagesOutput) Reset()                    { *m = DescribeImagesOutput{} }
func (m *DescribeImagesOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeImagesOutput) ProtoMessage()               {}
func (*DescribeImagesOutput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *DescribeImagesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeImagesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeImagesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeImagesOutput) GetImageSet() []*DescribeImagesOutput_ResponseItem {
	if m != nil {
		return m.ImageSet
	}
	return nil
}

func (m *DescribeImagesOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type DescribeImagesOutput_ResponseItem struct {
	ImageId          string                      `protobuf:"bytes,1,opt,name=image_id,json=imageId" json:"image_id,omitempty"`
	ImageName        string                      `protobuf:"bytes,2,opt,name=image_name,json=imageName" json:"image_name,omitempty"`
	Description      string                      `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Size             int32                       `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
	ProcessorType    string                      `protobuf:"bytes,5,opt,name=processor_type,json=processorType" json:"processor_type,omitempty"`
	Platform         string                      `protobuf:"bytes,6,opt,name=platform" json:"platform,omitempty"`
	OsFamily         string                      `protobuf:"bytes,7,opt,name=os_family,json=osFamily" json:"os_family,omitempty"`
	Visibility       string                      `protobuf:"bytes,8,opt,name=visibility" json:"visibility,omitempty"`
	Provider         string                      `protobuf:"bytes,9,opt,name=provider" json:"provider,omitempty"`
	Owner            string                      `protobuf:"bytes,10,opt,name=owner" json:"owner,omitempty"`
	RecommendedType  string                      `protobuf:"bytes,11,opt,name=recommended_type,json=recommendedType" json:"recommended_type,omitempty"`
	Status           string                      `protobuf:"bytes,12,opt,name=status" json:"status,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,13,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,14,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,15,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
}

func (m *DescribeImagesOutput_ResponseItem) Reset()         { *m = DescribeImagesOutput_ResponseItem{} }
func (m *DescribeImagesOutput_ResponseItem) String() string { return proto.CompactTextString(m) }
func (*DescribeImagesOutput_ResponseItem) ProtoMessage()    {}
func (*DescribeImagesOutput_ResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor6, []int{2, 0}
}

func (m *DescribeImagesOutput_ResponseItem) GetImageId() string {
	if m != nil {
		return m.ImageId
	}
	return ""
}

func (m *DescribeImagesOutput_ResponseItem) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *DescribeImagesOutput_ResponseItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DescribeImagesOutput_ResponseItem) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *DescribeImagesOutput_ResponseItem) GetProcessorType() string {
	if m != nil {
		return m.ProcessorType
	}
	return ""
}

func (m *DescribeImagesOutput_ResponseItem) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *DescribeImagesOutput_ResponseItem) GetOsFamily() string {
	if m != nil {
		return m.OsFamily
	}
	return ""
}

func (m *DescribeImagesOutput_ResponseItem) GetVisibility() string {
	if m != nil {
		return m.Visibility
	}
	return ""
}

func (m *DescribeImagesOutput_ResponseItem) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *DescribeImagesOutput_ResponseItem) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *DescribeImagesOutput_ResponseItem) GetRecommendedType() string {
	if m != nil {
		return m.RecommendedType
	}
	return ""
}

func (m *DescribeImagesOutput_ResponseItem) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DescribeImagesOutput_ResponseItem) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *DescribeImagesOutput_ResponseItem) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *DescribeImagesOutput_ResponseItem) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type CaptureInstanceInput struct {
	Instance   string `protobuf:"bytes,1,opt,name=instance" json:"instance,omitempty"`
	ImageName  string `protobuf:"bytes,2,opt,name=image_name,json=imageName" json:"image_name,omitempty"`
	TargetUser string `protobuf:"bytes,3,opt,name=target_user,json=targetUser" json:"target_user,omitempty"`
}

func (m *CaptureInstanceInput) Reset()                    { *m = CaptureInstanceInput{} }
func (m *CaptureInstanceInput) String() string            { return proto.CompactTextString(m) }
func (*CaptureInstanceInput) ProtoMessage()               {}
func (*CaptureInstanceInput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *CaptureInstanceInput) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

func (m *CaptureInstanceInput) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *CaptureInstanceInput) GetTargetUser() string {
	if m != nil {
		return m.TargetUser
	}
	return ""
}

type CaptureInstanceOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	ImageId string `protobuf:"bytes,5,opt,name=image_id,json=imageId" json:"image_id,omitempty"`
}

func (m *CaptureInstanceOutput) Reset()                    { *m = CaptureInstanceOutput{} }
func (m *CaptureInstanceOutput) String() string            { return proto.CompactTextString(m) }
func (*CaptureInstanceOutput) ProtoMessage()               {}
func (*CaptureInstanceOutput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *CaptureInstanceOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CaptureInstanceOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CaptureInstanceOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CaptureInstanceOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *CaptureInstanceOutput) GetImageId() string {
	if m != nil {
		return m.ImageId
	}
	return ""
}

type DeleteImagesInput struct {
	Images []string `protobuf:"bytes,1,rep,name=images" json:"images,omitempty"`
}

func (m *DeleteImagesInput) Reset()                    { *m = DeleteImagesInput{} }
func (m *DeleteImagesInput) String() string            { return proto.CompactTextString(m) }
func (*DeleteImagesInput) ProtoMessage()               {}
func (*DeleteImagesInput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

func (m *DeleteImagesInput) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

type DeleteImagesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *DeleteImagesOutput) Reset()                    { *m = DeleteImagesOutput{} }
func (m *DeleteImagesOutput) String() string            { return proto.CompactTextString(m) }
func (*DeleteImagesOutput) ProtoMessage()               {}
func (*DeleteImagesOutput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

func (m *DeleteImagesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DeleteImagesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DeleteImagesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteImagesOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type ModifyImageAttributesInput struct {
	Image       string `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
	ImageName   string `protobuf:"bytes,2,opt,name=image_name,json=imageName" json:"image_name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *ModifyImageAttributesInput) Reset()                    { *m = ModifyImageAttributesInput{} }
func (m *ModifyImageAttributesInput) String() string            { return proto.CompactTextString(m) }
func (*ModifyImageAttributesInput) ProtoMessage()               {}
func (*ModifyImageAttributesInput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

func (m *ModifyImageAttributesInput) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ModifyImageAttributesInput) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *ModifyImageAttributesInput) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ModifyImageAttributesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ModifyImageAttributesOutput) Reset()                    { *m = ModifyImageAttributesOutput{} }
func (m *ModifyImageAttributesOutput) String() string            { return proto.CompactTextString(m) }
func (*ModifyImageAttributesOutput) ProtoMessage()               {}
func (*ModifyImageAttributesOutput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{8} }

func (m *ModifyImageAttributesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ModifyImageAttributesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ModifyImageAttributesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GrantImageToUsersInput struct {
	Image string   `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
	Users []string `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
}

func (m *GrantImageToUsersInput) Reset()                    { *m = GrantImageToUsersInput{} }
func (m *GrantImageToUsersInput) String() string            { return proto.CompactTextString(m) }
func (*GrantImageToUsersInput) ProtoMessage()               {}
func (*GrantImageToUsersInput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{9} }

func (m *GrantImageToUsersInput) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *GrantImageToUsersInput) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

type GrantImageToUsersOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GrantImageToUsersOutput) Reset()                    { *m = GrantImageToUsersOutput{} }
func (m *GrantImageToUsersOutput) String() string            { return proto.CompactTextString(m) }
func (*GrantImageToUsersOutput) ProtoMessage()               {}
func (*GrantImageToUsersOutput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{10} }

func (m *GrantImageToUsersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *GrantImageToUsersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *GrantImageToUsersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type RevokeImageFromUsersInput struct {
	Image string   `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
	Users []string `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
}

func (m *RevokeImageFromUsersInput) Reset()                    { *m = RevokeImageFromUsersInput{} }
func (m *RevokeImageFromUsersInput) String() string            { return proto.CompactTextString(m) }
func (*RevokeImageFromUsersInput) ProtoMessage()               {}
func (*RevokeImageFromUsersInput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{11} }

func (m *RevokeImageFromUsersInput) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *RevokeImageFromUsersInput) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

type RevokeImageFromUsersOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *RevokeImageFromUsersOutput) Reset()                    { *m = RevokeImageFromUsersOutput{} }
func (m *RevokeImageFromUsersOutput) String() string            { return proto.CompactTextString(m) }
func (*RevokeImageFromUsersOutput) ProtoMessage()               {}
func (*RevokeImageFromUsersOutput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{12} }

func (m *RevokeImageFromUsersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *RevokeImageFromUsersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *RevokeImageFromUsersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DescribeImageUsersInput struct {
	ImageId string `protobuf:"bytes,1,opt,name=image_id,json=imageId" json:"image_id,omitempty"`
	Offset  int32  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Limit   int32  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
}

func (m *DescribeImageUsersInput) Reset()                    { *m = DescribeImageUsersInput{} }
func (m *DescribeImageUsersInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeImageUsersInput) ProtoMessage()               {}
func (*DescribeImageUsersInput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{13} }

func (m *DescribeImageUsersInput) GetImageId() string {
	if m != nil {
		return m.ImageId
	}
	return ""
}

func (m *DescribeImageUsersInput) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeImageUsersInput) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type DescribeImageUsersOutput struct {
	Action       string                                   `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode      int32                                    `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message      string                                   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	ImageUserSet []*DescribeImageUsersOutput_ResponseItem `protobuf:"bytes,4,rep,name=image_user_set,json=imageUserSet" json:"image_user_set,omitempty"`
	TotalCount   int32                                    `protobuf:"varint,5,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *DescribeImageUsersOutput) Reset()                    { *m = DescribeImageUsersOutput{} }
func (m *DescribeImageUsersOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeImageUsersOutput) ProtoMessage()               {}
func (*DescribeImageUsersOutput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{14} }

func (m *DescribeImageUsersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeImageUsersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeImageUsersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeImageUsersOutput) GetImageUserSet() []*DescribeImageUsersOutput_ResponseItem {
	if m != nil {
		return m.ImageUserSet
	}
	return nil
}

func (m *DescribeImageUsersOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type DescribeImageUsersOutput_ResponseItem struct {
	ImageId    string                      `protobuf:"bytes,1,opt,name=image_id,json=imageId" json:"image_id,omitempty"`
	User       *User                       `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	CreateTime *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
}

func (m *DescribeImageUsersOutput_ResponseItem) Reset()         { *m = DescribeImageUsersOutput_ResponseItem{} }
func (m *DescribeImageUsersOutput_ResponseItem) String() string { return proto.CompactTextString(m) }
func (*DescribeImageUsersOutput_ResponseItem) ProtoMessage()    {}
func (*DescribeImageUsersOutput_ResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor6, []int{14, 0}
}

func (m *DescribeImageUsersOutput_ResponseItem) GetImageId() string {
	if m != nil {
		return m.ImageId
	}
	return ""
}

func (m *DescribeImageUsersOutput_ResponseItem) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *DescribeImageUsersOutput_ResponseItem) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

type CloneImagesInput struct {
	Image     string `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
	Count     int32  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	ImageName string `protobuf:"bytes,3,opt,name=image_name,json=imageName" json:"image_name,omitempty"`
}

func (m *CloneImagesInput) Reset()                    { *m = CloneImagesInput{} }
func (m *CloneImagesInput) String() string            { return proto.CompactTextString(m) }
func (*CloneImagesInput) ProtoMessage()               {}
func (*CloneImagesInput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{15} }

func (m *CloneImagesInput) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *CloneImagesInput) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *CloneImagesInput) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

type CloneImagesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CloneImagesOutput) Reset()                    { *m = CloneImagesOutput{} }
func (m *CloneImagesOutput) String() string            { return proto.CompactTextString(m) }
func (*CloneImagesOutput) ProtoMessage()               {}
func (*CloneImagesOutput) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{16} }

func (m *CloneImagesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CloneImagesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CloneImagesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ImageServiceProperties)(nil), "service.ImageServiceProperties")
	proto.RegisterType((*DescribeImagesInput)(nil), "service.DescribeImagesInput")
	proto.RegisterType((*DescribeImagesOutput)(nil), "service.DescribeImagesOutput")
	proto.RegisterType((*DescribeImagesOutput_ResponseItem)(nil), "service.DescribeImagesOutput.ResponseItem")
	proto.RegisterType((*CaptureInstanceInput)(nil), "service.CaptureInstanceInput")
	proto.RegisterType((*CaptureInstanceOutput)(nil), "service.CaptureInstanceOutput")
	proto.RegisterType((*DeleteImagesInput)(nil), "service.DeleteImagesInput")
	proto.RegisterType((*DeleteImagesOutput)(nil), "service.DeleteImagesOutput")
	proto.RegisterType((*ModifyImageAttributesInput)(nil), "service.ModifyImageAttributesInput")
	proto.RegisterType((*ModifyImageAttributesOutput)(nil), "service.ModifyImageAttributesOutput")
	proto.RegisterType((*GrantImageToUsersInput)(nil), "service.GrantImageToUsersInput")
	proto.RegisterType((*GrantImageToUsersOutput)(nil), "service.GrantImageToUsersOutput")
	proto.RegisterType((*RevokeImageFromUsersInput)(nil), "service.RevokeImageFromUsersInput")
	proto.RegisterType((*RevokeImageFromUsersOutput)(nil), "service.RevokeImageFromUsersOutput")
	proto.RegisterType((*DescribeImageUsersInput)(nil), "service.DescribeImageUsersInput")
	proto.RegisterType((*DescribeImageUsersOutput)(nil), "service.DescribeImageUsersOutput")
	proto.RegisterType((*DescribeImageUsersOutput_ResponseItem)(nil), "service.DescribeImageUsersOutput.ResponseItem")
	proto.RegisterType((*CloneImagesInput)(nil), "service.CloneImagesInput")
	proto.RegisterType((*CloneImagesOutput)(nil), "service.CloneImagesOutput")
}

type ImageServiceInterface interface {
	DescribeImages(in *DescribeImagesInput) (out *DescribeImagesOutput, err error)
	CaptureInstance(in *CaptureInstanceInput) (out *CaptureInstanceOutput, err error)
	DeleteImages(in *DeleteImagesInput) (out *DeleteImagesOutput, err error)
	ModifyImageAttributes(in *ModifyImageAttributesInput) (out *ModifyImageAttributesOutput, err error)
	GrantImageToUsers(in *GrantImageToUsersInput) (out *GrantImageToUsersOutput, err error)
	RevokeImageFromUsers(in *RevokeImageFromUsersInput) (out *RevokeImageFromUsersOutput, err error)
	DescribeImageUsers(in *DescribeImageUsersInput) (out *DescribeImageUsersOutput, err error)
	CloneImages(in *CloneImagesInput) (out *CloneImagesOutput, err error)
}

type ImageService struct {
	Config           *config.Config
	Properties       *ImageServiceProperties
	LastResponseBody string
}

func NewImageService(conf *config.Config, zone string) (p *ImageService) {
	return &ImageService{
		Config:     conf,
		Properties: &ImageServiceProperties{Zone: zone},
	}
}

func (s *QingCloudService) Image(zone string) (*ImageService, error) {
	properties := &ImageServiceProperties{
		Zone: zone,
	}

	return &ImageService{Config: s.Config, Properties: properties}, nil
}

func (p *ImageService) DescribeImages(in *DescribeImagesInput) (out *DescribeImagesOutput, err error) {
	if in == nil {
		in = &DescribeImagesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeImages",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeImagesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DescribeImagesInput) Validate() error {
	return nil
}

func (p *ImageService) CaptureInstance(in *CaptureInstanceInput) (out *CaptureInstanceOutput, err error) {
	if in == nil {
		in = &CaptureInstanceInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CaptureInstance",
		RequestMethod: "GET", // GET or POST
	}

	x := &CaptureInstanceOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *CaptureInstanceInput) Validate() error {
	return nil
}

func (p *ImageService) DeleteImages(in *DeleteImagesInput) (out *DeleteImagesOutput, err error) {
	if in == nil {
		in = &DeleteImagesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteImages",
		RequestMethod: "GET", // GET or POST
	}

	x := &DeleteImagesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DeleteImagesInput) Validate() error {
	return nil
}

func (p *ImageService) ModifyImageAttributes(in *ModifyImageAttributesInput) (out *ModifyImageAttributesOutput, err error) {
	if in == nil {
		in = &ModifyImageAttributesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifyImageAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &ModifyImageAttributesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *ModifyImageAttributesInput) Validate() error {
	return nil
}

func (p *ImageService) GrantImageToUsers(in *GrantImageToUsersInput) (out *GrantImageToUsersOutput, err error) {
	if in == nil {
		in = &GrantImageToUsersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "GrantImageToUsers",
		RequestMethod: "GET", // GET or POST
	}

	x := &GrantImageToUsersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *GrantImageToUsersInput) Validate() error {
	return nil
}

func (p *ImageService) RevokeImageFromUsers(in *RevokeImageFromUsersInput) (out *RevokeImageFromUsersOutput, err error) {
	if in == nil {
		in = &RevokeImageFromUsersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "RevokeImageFromUsers",
		RequestMethod: "GET", // GET or POST
	}

	x := &RevokeImageFromUsersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RevokeImageFromUsersInput) Validate() error {
	return nil
}

func (p *ImageService) DescribeImageUsers(in *DescribeImageUsersInput) (out *DescribeImageUsersOutput, err error) {
	if in == nil {
		in = &DescribeImageUsersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeImageUsers",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeImageUsersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DescribeImageUsersInput) Validate() error {
	return nil
}

func (p *ImageService) CloneImages(in *CloneImagesInput) (out *CloneImagesOutput, err error) {
	if in == nil {
		in = &CloneImagesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CloneImages",
		RequestMethod: "GET", // GET or POST
	}

	x := &CloneImagesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *CloneImagesInput) Validate() error {
	return nil
}

func init() { proto.RegisterFile("image.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 1091 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0x56, 0x7e, 0xdc, 0x24, 0x27, 0xfd, 0x1d, 0xd2, 0xae, 0xeb, 0xd2, 0x6d, 0xd6, 0x0b, 0x52,
	0x61, 0x51, 0x2a, 0x95, 0x4b, 0xae, 0x50, 0xab, 0xad, 0x72, 0xb1, 0xb0, 0x78, 0x0b, 0x88, 0x0b,
	0x64, 0x9c, 0xf8, 0x24, 0x4c, 0x37, 0xf6, 0x98, 0x99, 0x49, 0x97, 0xee, 0x1b, 0xc0, 0x03, 0x70,
	0xc1, 0x43, 0xf0, 0x28, 0x3c, 0x08, 0x77, 0xbc, 0x01, 0x9a, 0x9f, 0xa4, 0x4e, 0xea, 0xa4, 0x05,
	0x94, 0xbd, 0xa9, 0x72, 0xfe, 0xbf, 0x39, 0xf3, 0xcd, 0x39, 0x2e, 0x34, 0x69, 0x12, 0x0d, 0xb1,
	0x93, 0x71, 0x26, 0x19, 0xa9, 0x09, 0xe4, 0xd7, 0xb4, 0x8f, 0x5e, 0x53, 0xde, 0x64, 0x28, 0x8c,
	0xd6, 0x3b, 0xfc, 0x89, 0xa6, 0xc3, 0xfe, 0x88, 0x8d, 0xe3, 0x50, 0xc4, 0xaf, 0x43, 0x3e, 0x1e,
	0xe1, 0x89, 0xfa, 0x63, 0xcd, 0x47, 0x43, 0xc6, 0x86, 0x23, 0x3c, 0xd1, 0x52, 0x6f, 0x3c, 0x38,
	0x91, 0x34, 0x41, 0x21, 0xa3, 0x24, 0x33, 0x0e, 0xfe, 0x27, 0xb0, 0xd7, 0x55, 0x45, 0x5e, 0x99,
	0xe4, 0x2f, 0x39, 0xcb, 0x90, 0x4b, 0x8a, 0x82, 0x10, 0xa8, 0xbe, 0x65, 0x29, 0xba, 0xa5, 0x76,
	0xe9, 0xb8, 0x11, 0xe8, 0xdf, 0xfe, 0x1f, 0x65, 0x78, 0xef, 0x1c, 0x45, 0x9f, 0xd3, 0x1e, 0xea,
	0x30, 0xd1, 0x4d, 0xb3, 0xb1, 0x24, 0x7b, 0xb0, 0xa6, 0xa1, 0x0a, 0xb7, 0xd4, 0xae, 0x1c, 0x37,
	0x02, 0x2b, 0x91, 0x0f, 0x61, 0x33, 0xe3, 0xac, 0x8f, 0x42, 0x30, 0x1e, 0x2a, 0xd8, 0x6e, 0x59,
	0x67, 0xdb, 0x98, 0x6a, 0x2f, 0x6f, 0x32, 0x24, 0x07, 0xd0, 0x60, 0x22, 0x1c, 0x44, 0x09, 0x1d,
	0xdd, 0xb8, 0x15, 0xed, 0x51, 0x67, 0xe2, 0xb9, 0x96, 0xc9, 0x63, 0x80, 0x6b, 0x2a, 0x68, 0x8f,
	0x8e, 0xa8, 0xbc, 0x71, 0xab, 0xda, 0x9a, 0xd3, 0x10, 0x0f, 0xea, 0x19, 0x67, 0xd7, 0x34, 0x46,
	0xee, 0x3a, 0x26, 0x76, 0x22, 0x2b, 0x5c, 0x42, 0x46, 0x72, 0x2c, 0xdc, 0x35, 0x83, 0xcb, 0x48,
	0xe4, 0x08, 0x9a, 0x02, 0x23, 0xde, 0xff, 0x31, 0x7c, 0xc3, 0x78, 0xec, 0xd6, 0x4c, 0x52, 0xa3,
	0xfa, 0x96, 0xf1, 0x98, 0xb8, 0x50, 0xbb, 0x46, 0xde, 0x63, 0x02, 0xdd, 0x7a, 0xbb, 0x74, 0xec,
	0x04, 0x13, 0x51, 0xa5, 0x64, 0x83, 0x81, 0x40, 0xe9, 0x36, 0xb4, 0xc1, 0x4a, 0xa4, 0x05, 0xce,
	0x88, 0x26, 0x54, 0xba, 0xa0, 0xd5, 0x46, 0xf0, 0xff, 0x72, 0xa0, 0x35, 0xdb, 0xb0, 0x2f, 0xc7,
	0xd2, 0x76, 0x2c, 0xea, 0x4b, 0xca, 0x52, 0xdb, 0x5f, 0x2b, 0x91, 0x7d, 0xa8, 0x73, 0x94, 0x61,
	0x9f, 0xc5, 0xa6, 0x57, 0x4e, 0x50, 0xe3, 0x28, 0xcf, 0x58, 0x8c, 0x0a, 0x53, 0x82, 0x42, 0x44,
	0x43, 0xb4, 0x3d, 0x9a, 0x88, 0xe4, 0x02, 0x1a, 0xba, 0xe1, 0xa1, 0x82, 0x55, 0x6d, 0x57, 0x8e,
	0x9b, 0xa7, 0x1f, 0x77, 0x2c, 0x5d, 0x3a, 0x45, 0xe5, 0x3b, 0x01, 0x8a, 0x8c, 0xa5, 0x02, 0xbb,
	0x12, 0x93, 0xa0, 0x4e, 0x0d, 0x03, 0xa4, 0xea, 0x8b, 0x64, 0x32, 0x1a, 0x85, 0x7d, 0x36, 0x4e,
	0xa5, 0x6e, 0xa7, 0x13, 0x80, 0x56, 0x9d, 0x29, 0x8d, 0xf7, 0x7b, 0x15, 0xd6, 0xf3, 0xb1, 0x0a,
	0xaf, 0x29, 0x4d, 0x63, 0x7b, 0x92, 0x9a, 0x96, 0xbb, 0x31, 0x39, 0x04, 0x30, 0xa6, 0x34, 0x4a,
	0x26, 0x17, 0x6f, 0x70, 0x7e, 0x11, 0x25, 0x48, 0xda, 0xd0, 0x8c, 0x35, 0xb4, 0x4c, 0xb7, 0xc1,
	0x1c, 0x29, 0xaf, 0x52, 0x0c, 0x14, 0xf4, 0x2d, 0xea, 0x3b, 0x77, 0x02, 0xfd, 0xbb, 0x80, 0x51,
	0x4e, 0x11, 0xa3, 0x14, 0x29, 0x46, 0x91, 0x1c, 0x30, 0x9e, 0xb8, 0x6b, 0x96, 0x14, 0x56, 0x9e,
	0x65, 0x5b, 0x6d, 0x29, 0xdb, 0xea, 0x4b, 0xd9, 0xd6, 0x98, 0x63, 0x5b, 0x0b, 0x1c, 0xf6, 0x26,
	0x45, 0xae, 0x29, 0xd0, 0x08, 0x8c, 0x40, 0x3e, 0x82, 0x6d, 0x8e, 0x7d, 0x96, 0x24, 0x98, 0xc6,
	0x18, 0x1b, 0xcc, 0x4d, 0xed, 0xb0, 0x95, 0xd3, 0x6b, 0xd4, 0xb7, 0x74, 0x5d, 0x37, 0xa4, 0xb0,
	0x74, 0x7d, 0x06, 0x3b, 0x92, 0x47, 0xa9, 0xa0, 0xaa, 0x2d, 0xa1, 0x75, 0xd9, 0xd0, 0x2e, 0xdb,
	0xb7, 0x86, 0x57, 0xc6, 0xf9, 0x33, 0x68, 0xf6, 0x39, 0x46, 0x12, 0x43, 0xf5, 0xd6, 0xdd, 0xcd,
	0x76, 0xe9, 0xb8, 0x79, 0xea, 0x75, 0xcc, 0x20, 0xe8, 0x4c, 0x06, 0x41, 0xe7, 0x72, 0x32, 0x08,
	0x02, 0x30, 0xee, 0x4a, 0xa1, 0x82, 0x4d, 0x7a, 0x13, 0xbc, 0x75, 0x7f, 0xb0, 0x71, 0x57, 0x0a,
	0x9f, 0x43, 0xeb, 0x2c, 0xca, 0xe4, 0x98, 0x63, 0x37, 0x15, 0x32, 0x4a, 0xfb, 0x68, 0xa6, 0x83,
	0x07, 0x75, 0x6a, 0x15, 0x96, 0x23, 0x53, 0xf9, 0x3e, 0x92, 0x28, 0x42, 0x46, 0x7c, 0x88, 0x32,
	0x1c, 0x0b, 0xe4, 0x96, 0x24, 0x60, 0x54, 0x5f, 0x0b, 0xe4, 0xfe, 0x6f, 0x25, 0xd8, 0x9d, 0x2b,
	0xba, 0x8a, 0x17, 0xb6, 0x0b, 0x6b, 0x57, 0xac, 0xa7, 0x48, 0x6e, 0x06, 0x90, 0x73, 0xc5, 0x7a,
	0xdd, 0x78, 0x86, 0xfd, 0xce, 0x0c, 0xfb, 0xfd, 0x67, 0xb0, 0x73, 0x8e, 0x23, 0x94, 0x0f, 0x99,
	0x93, 0xfe, 0xcf, 0x40, 0xf2, 0xce, 0xef, 0xee, 0x04, 0xbe, 0x00, 0xef, 0x05, 0x8b, 0xe9, 0xe0,
	0x46, 0x57, 0xfe, 0x5c, 0x4a, 0x4e, 0x7b, 0x63, 0x39, 0xc1, 0xdb, 0x02, 0x47, 0x23, 0xb4, 0x00,
	0x8c, 0xf0, 0xbf, 0x1f, 0xb6, 0x7f, 0x05, 0x07, 0x85, 0x45, 0x57, 0x70, 0x6e, 0xff, 0x1c, 0xf6,
	0x2e, 0x78, 0x94, 0x4a, 0x5d, 0xea, 0x92, 0x29, 0xd2, 0x2c, 0x3d, 0x5c, 0x0b, 0x1c, 0x45, 0x35,
	0xe1, 0x96, 0xf5, 0x0d, 0x19, 0xc1, 0x1f, 0xc0, 0xa3, 0x3b, 0x59, 0x56, 0x81, 0xf6, 0x02, 0xf6,
	0x03, 0xbc, 0x66, 0xaf, 0x0d, 0x11, 0x9e, 0x73, 0x96, 0xfc, 0x47, 0xc0, 0x14, 0xbc, 0xa2, 0x44,
	0xab, 0xc0, 0xdc, 0x83, 0x47, 0x33, 0x3b, 0x26, 0x87, 0x78, 0xc9, 0x76, 0xb8, 0xdd, 0xa3, 0xe5,
	0xe2, 0x3d, 0x5a, 0x99, 0xd9, 0xa3, 0x65, 0x70, 0xef, 0x16, 0x59, 0xc5, 0x3b, 0xb9, 0x84, 0x4d,
	0x03, 0x59, 0xf5, 0x31, 0xb7, 0x50, 0x3b, 0xc5, 0x0b, 0x35, 0x87, 0x63, 0x76, 0xa9, 0xae, 0xd3,
	0x89, 0xf9, 0x41, 0x8b, 0xf5, 0x97, 0xd2, 0xc3, 0x17, 0xeb, 0x13, 0xa8, 0xea, 0x69, 0x58, 0xd6,
	0xd3, 0x79, 0x63, 0x0a, 0x4c, 0x15, 0x0b, 0xb4, 0x69, 0x7e, 0x09, 0x54, 0xfe, 0xcd, 0x12, 0xf0,
	0xbf, 0x87, 0xed, 0xb3, 0x11, 0x4b, 0x67, 0x26, 0xd7, 0x42, 0xee, 0x99, 0x03, 0x99, 0xf6, 0x1a,
	0x61, 0x6e, 0x3e, 0x54, 0xe6, 0xe6, 0x83, 0xff, 0x03, 0xec, 0xe4, 0xd2, 0xaf, 0xe0, 0x0e, 0x4f,
	0xff, 0x74, 0x60, 0x3d, 0xff, 0x55, 0x4b, 0x5e, 0xc0, 0xe6, 0xec, 0x67, 0x10, 0x79, 0x7f, 0xc1,
	0xf7, 0x91, 0x3e, 0xad, 0x77, 0xb8, 0xf4, 0xeb, 0x89, 0xbc, 0x84, 0xad, 0xb9, 0x9d, 0x43, 0x6e,
	0x23, 0x8a, 0x56, 0xa0, 0xf7, 0x78, 0x91, 0xd9, 0x66, 0xbc, 0x80, 0xf5, 0xfc, 0x02, 0x20, 0x5e,
	0x0e, 0xc0, 0xdc, 0x12, 0xf1, 0x0e, 0x0a, 0x6d, 0x36, 0x51, 0x0f, 0x76, 0x0b, 0x47, 0x2b, 0x79,
	0x3a, 0x8d, 0x5a, 0x3c, 0xef, 0xbd, 0x0f, 0x96, 0x3b, 0xd9, 0x1a, 0xdf, 0xc0, 0xce, 0x9d, 0x61,
	0x48, 0x8e, 0xa6, 0xa1, 0xc5, 0xe3, 0xd6, 0x6b, 0x2f, 0x76, 0xb0, 0x79, 0x43, 0x68, 0x15, 0xcd,
	0x2c, 0xe2, 0x4f, 0x23, 0x17, 0xce, 0x46, 0xef, 0xe9, 0x52, 0x1f, 0x5b, 0xe0, 0x3b, 0xb5, 0x66,
	0xe7, 0x1f, 0x2f, 0x69, 0x2f, 0x79, 0xd9, 0x26, 0xf9, 0x93, 0x7b, 0xdf, 0x3e, 0x39, 0x87, 0x66,
	0x8e, 0xd4, 0x64, 0xff, 0xf6, 0xbe, 0xe7, 0x5e, 0x92, 0xe7, 0x15, 0x99, 0x4c, 0x16, 0x6f, 0xef,
	0xd7, 0xbf, 0xab, 0x84, 0x34, 0xbe, 0xa2, 0xe9, 0xf0, 0x4c, 0xfd, 0x4f, 0xe7, 0x39, 0xda, 0xdc,
	0x5b, 0xd3, 0x2f, 0xf6, 0xd3, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xab, 0x52, 0x33, 0x53, 0x11,
	0x0e, 0x00, 0x00,
}
