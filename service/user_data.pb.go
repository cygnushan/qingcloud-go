// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_data.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/chai2010/qingcloud-go/spec.pb/qingcloud_sdk_rule"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import "github.com/chai2010/qingcloud-go/request/data"

var _ = config.Config{}
var _ = request.Request{}
var _ = data.Operation{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UserDataServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *UserDataServiceProperties) Reset()                    { *m = UserDataServiceProperties{} }
func (m *UserDataServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*UserDataServiceProperties) ProtoMessage()               {}
func (*UserDataServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{0} }

func (m *UserDataServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type UploadUserDataAttachmentInput struct {
	AttachmentContent []byte `protobuf:"bytes,2,opt,name=attachment_content,json=attachmentContent,proto3" json:"attachment_content,omitempty"`
	AttachmentName    string `protobuf:"bytes,1,opt,name=attachment_name,json=attachmentName" json:"attachment_name,omitempty"`
}

func (m *UploadUserDataAttachmentInput) Reset()                    { *m = UploadUserDataAttachmentInput{} }
func (m *UploadUserDataAttachmentInput) String() string            { return proto.CompactTextString(m) }
func (*UploadUserDataAttachmentInput) ProtoMessage()               {}
func (*UploadUserDataAttachmentInput) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{1} }

func (m *UploadUserDataAttachmentInput) GetAttachmentContent() []byte {
	if m != nil {
		return m.AttachmentContent
	}
	return nil
}

func (m *UploadUserDataAttachmentInput) GetAttachmentName() string {
	if m != nil {
		return m.AttachmentName
	}
	return ""
}

type UploadUserDataAttachmentOutput struct {
	Action       string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode      int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message      string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	AttachmentId string `protobuf:"bytes,4,opt,name=attachment_id,json=attachmentId" json:"attachment_id,omitempty"`
}

func (m *UploadUserDataAttachmentOutput) Reset()                    { *m = UploadUserDataAttachmentOutput{} }
func (m *UploadUserDataAttachmentOutput) String() string            { return proto.CompactTextString(m) }
func (*UploadUserDataAttachmentOutput) ProtoMessage()               {}
func (*UploadUserDataAttachmentOutput) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{2} }

func (m *UploadUserDataAttachmentOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *UploadUserDataAttachmentOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *UploadUserDataAttachmentOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UploadUserDataAttachmentOutput) GetAttachmentId() string {
	if m != nil {
		return m.AttachmentId
	}
	return ""
}

func init() {
	proto.RegisterType((*UserDataServiceProperties)(nil), "service.UserDataServiceProperties")
	proto.RegisterType((*UploadUserDataAttachmentInput)(nil), "service.UploadUserDataAttachmentInput")
	proto.RegisterType((*UploadUserDataAttachmentOutput)(nil), "service.UploadUserDataAttachmentOutput")
}

type UserDataServiceInterface interface {
	UploadUserDataAttachment(in *UploadUserDataAttachmentInput) (out *UploadUserDataAttachmentOutput, err error)
}

type UserDataService struct {
	Config           *config.Config
	Properties       *UserDataServiceProperties
	LastResponseBody string
}

func NewUserDataService(conf *config.Config, zone string) (p *UserDataService) {
	return &UserDataService{
		Config:     conf,
		Properties: &UserDataServiceProperties{Zone: zone},
	}
}

func (s *QingCloudService) UserData(zone string) (*UserDataService, error) {
	properties := &UserDataServiceProperties{
		Zone: zone,
	}

	return &UserDataService{Config: s.Config, Properties: properties}, nil
}

func (p *UserDataService) UploadUserDataAttachment(in *UploadUserDataAttachmentInput) (out *UploadUserDataAttachmentOutput, err error) {
	if in == nil {
		in = &UploadUserDataAttachmentInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "UploadUserDataAttachment",
		RequestMethod: "POST", // GET or POST
	}

	x := &UploadUserDataAttachmentOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *UploadUserDataAttachmentInput) Validate() error {
	return nil
}

func init() { proto.RegisterFile("user_data.proto", fileDescriptor28) }

var fileDescriptor28 = []byte{
	// 337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xcd, 0x4e, 0xfa, 0x40,
	0x10, 0x4f, 0xff, 0xff, 0xca, 0xc7, 0x04, 0x25, 0x6e, 0xd4, 0x94, 0x26, 0x18, 0x52, 0x13, 0xe1,
	0x22, 0x24, 0x7a, 0xf3, 0x66, 0xf0, 0xc2, 0x45, 0x10, 0xe4, 0xdc, 0xac, 0xdd, 0x09, 0x36, 0xd2,
	0xdd, 0xba, 0x3b, 0xd5, 0xc4, 0x47, 0xe0, 0xa6, 0xef, 0xe0, 0x03, 0xf2, 0x06, 0xa6, 0x2d, 0x15,
	0x62, 0x44, 0x2f, 0x4d, 0x67, 0x7e, 0x1f, 0xfb, 0xdb, 0xd9, 0x81, 0x7a, 0x62, 0x50, 0xfb, 0x82,
	0x13, 0xef, 0xc6, 0x5a, 0x91, 0x62, 0x65, 0x83, 0xfa, 0x39, 0x0c, 0xd0, 0x6d, 0x3e, 0x85, 0x72,
	0x16, 0xcc, 0x55, 0x22, 0x7c, 0x23, 0x1e, 0x7d, 0x9d, 0xcc, 0xb1, 0x97, 0x7e, 0x72, 0x9e, 0xd7,
	0x83, 0xc6, 0xd4, 0xa0, 0xbe, 0xe6, 0xc4, 0x27, 0xb9, 0x62, 0xa4, 0x55, 0x8c, 0x9a, 0x42, 0x34,
	0x8c, 0x81, 0xfd, 0xaa, 0x24, 0x3a, 0x56, 0xcb, 0xea, 0x54, 0xc7, 0xd9, 0xbf, 0xf7, 0x66, 0x41,
	0x73, 0x1a, 0xcf, 0x15, 0x17, 0x85, 0xee, 0x8a, 0x88, 0x07, 0x0f, 0x11, 0x4a, 0x1a, 0xc8, 0x38,
	0x21, 0x76, 0x06, 0x8c, 0x7f, 0xb5, 0xfc, 0x40, 0x49, 0x42, 0x49, 0xce, 0xbf, 0x96, 0xd5, 0xa9,
	0x8d, 0xf7, 0xd7, 0x48, 0x3f, 0x07, 0x58, 0x1b, 0xea, 0x1b, 0x74, 0xc9, 0xa3, 0xe2, 0xbc, 0xbd,
	0x75, 0xfb, 0x86, 0x47, 0x78, 0xe9, 0x2c, 0x96, 0xf6, 0xc1, 0x4f, 0xde, 0xde, 0xbb, 0x05, 0xc7,
	0xdb, 0x32, 0x0d, 0x13, 0x4a, 0x43, 0x1d, 0x41, 0x89, 0x07, 0x14, 0x2a, 0xb9, 0x32, 0x5f, 0x55,
	0xac, 0x01, 0x15, 0x8d, 0xa9, 0x93, 0xc0, 0x2c, 0xe2, 0xce, 0xb8, 0xac, 0x91, 0xfa, 0x4a, 0x20,
	0x73, 0xa0, 0x1c, 0xa1, 0x31, 0x7c, 0x86, 0xce, 0xff, 0x4c, 0x53, 0x94, 0xec, 0x04, 0x76, 0x37,
	0x52, 0x84, 0xc2, 0xb1, 0x33, 0xbc, 0xb6, 0x6e, 0x0e, 0xc4, 0xf9, 0x87, 0x05, 0xf5, 0x6f, 0xa3,
	0x65, 0x2f, 0xe0, 0x6c, 0xcb, 0xc9, 0x4e, 0xbb, 0xab, 0x27, 0xeb, 0xfe, 0x3a, 0x5e, 0xb7, 0xfd,
	0x27, 0x2f, 0xbf, 0xb2, 0x07, 0x8b, 0xa5, 0x5d, 0x62, 0xf6, 0x68, 0x38, 0xb9, 0x73, 0x1b, 0x8b,
	0xa5, 0x7d, 0xc8, 0xaa, 0xb7, 0xa1, 0x9c, 0xf5, 0xd3, 0x5d, 0x70, 0x2b, 0x85, 0xec, 0xbe, 0x94,
	0x2d, 0xc2, 0xc5, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x93, 0x22, 0x89, 0x34, 0x43, 0x02, 0x00,
	0x00,
}
