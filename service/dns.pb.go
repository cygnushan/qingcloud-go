// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dns.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import "github.com/chai2010/qingcloud-go/request/data"

var _ = config.Config{}
var _ = request.Request{}
var _ = data.Operation{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DNSAliasServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *DNSAliasServiceProperties) Reset()                    { *m = DNSAliasServiceProperties{} }
func (m *DNSAliasServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*DNSAliasServiceProperties) ProtoMessage()               {}
func (*DNSAliasServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *DNSAliasServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type DescribeDNSAliasesInput struct {
}

func (m *DescribeDNSAliasesInput) Reset()                    { *m = DescribeDNSAliasesInput{} }
func (m *DescribeDNSAliasesInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeDNSAliasesInput) ProtoMessage()               {}
func (*DescribeDNSAliasesInput) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

type DescribeDNSAliasesOutput struct {
}

func (m *DescribeDNSAliasesOutput) Reset()                    { *m = DescribeDNSAliasesOutput{} }
func (m *DescribeDNSAliasesOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeDNSAliasesOutput) ProtoMessage()               {}
func (*DescribeDNSAliasesOutput) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

type AssociateDNSAliasInput struct {
}

func (m *AssociateDNSAliasInput) Reset()                    { *m = AssociateDNSAliasInput{} }
func (m *AssociateDNSAliasInput) String() string            { return proto.CompactTextString(m) }
func (*AssociateDNSAliasInput) ProtoMessage()               {}
func (*AssociateDNSAliasInput) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

type AssociateDNSAliasOutput struct {
}

func (m *AssociateDNSAliasOutput) Reset()                    { *m = AssociateDNSAliasOutput{} }
func (m *AssociateDNSAliasOutput) String() string            { return proto.CompactTextString(m) }
func (*AssociateDNSAliasOutput) ProtoMessage()               {}
func (*AssociateDNSAliasOutput) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

type DissociateDNSAliasesInput struct {
}

func (m *DissociateDNSAliasesInput) Reset()                    { *m = DissociateDNSAliasesInput{} }
func (m *DissociateDNSAliasesInput) String() string            { return proto.CompactTextString(m) }
func (*DissociateDNSAliasesInput) ProtoMessage()               {}
func (*DissociateDNSAliasesInput) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

type DissociateDNSAliasesOutput struct {
}

func (m *DissociateDNSAliasesOutput) Reset()                    { *m = DissociateDNSAliasesOutput{} }
func (m *DissociateDNSAliasesOutput) String() string            { return proto.CompactTextString(m) }
func (*DissociateDNSAliasesOutput) ProtoMessage()               {}
func (*DissociateDNSAliasesOutput) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

type GetDNSLabelInput struct {
}

func (m *GetDNSLabelInput) Reset()                    { *m = GetDNSLabelInput{} }
func (m *GetDNSLabelInput) String() string            { return proto.CompactTextString(m) }
func (*GetDNSLabelInput) ProtoMessage()               {}
func (*GetDNSLabelInput) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{7} }

type GetDNSLabelOutput struct {
}

func (m *GetDNSLabelOutput) Reset()                    { *m = GetDNSLabelOutput{} }
func (m *GetDNSLabelOutput) String() string            { return proto.CompactTextString(m) }
func (*GetDNSLabelOutput) ProtoMessage()               {}
func (*GetDNSLabelOutput) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{8} }

func init() {
	proto.RegisterType((*DNSAliasServiceProperties)(nil), "service.DNSAliasServiceProperties")
	proto.RegisterType((*DescribeDNSAliasesInput)(nil), "service.DescribeDNSAliasesInput")
	proto.RegisterType((*DescribeDNSAliasesOutput)(nil), "service.DescribeDNSAliasesOutput")
	proto.RegisterType((*AssociateDNSAliasInput)(nil), "service.AssociateDNSAliasInput")
	proto.RegisterType((*AssociateDNSAliasOutput)(nil), "service.AssociateDNSAliasOutput")
	proto.RegisterType((*DissociateDNSAliasesInput)(nil), "service.DissociateDNSAliasesInput")
	proto.RegisterType((*DissociateDNSAliasesOutput)(nil), "service.DissociateDNSAliasesOutput")
	proto.RegisterType((*GetDNSLabelInput)(nil), "service.GetDNSLabelInput")
	proto.RegisterType((*GetDNSLabelOutput)(nil), "service.GetDNSLabelOutput")
}

type DNSAliasServiceInterface interface {
	DescribeDNSAliases(in *DescribeDNSAliasesInput) (out *DescribeDNSAliasesOutput, err error)
	AssociateDNSAlias(in *AssociateDNSAliasInput) (out *AssociateDNSAliasOutput, err error)
	DissociateDNSAliases(in *DissociateDNSAliasesInput) (out *DissociateDNSAliasesOutput, err error)
	GetDNSLabel(in *GetDNSLabelInput) (out *GetDNSLabelOutput, err error)
}

type DNSAliasService struct {
	Config     *config.Config
	Properties *DNSAliasServiceProperties
}

func NewDNSAliasService(conf *config.Config, zone string) (p *DNSAliasService, err error) {
	return &DNSAliasService{
		Config:     conf,
		Properties: &DNSAliasServiceProperties{Zone: zone},
	}, nil
}

func (p *DNSAliasService) DescribeDNSAliases(in *DescribeDNSAliasesInput) (out *DescribeDNSAliasesOutput, err error) {
	if in == nil {
		in = &DescribeDNSAliasesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeDNSAliases",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeDNSAliasesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DescribeDNSAliasesInput) Validate() error {
	return nil
}

func (p *DNSAliasService) AssociateDNSAlias(in *AssociateDNSAliasInput) (out *AssociateDNSAliasOutput, err error) {
	if in == nil {
		in = &AssociateDNSAliasInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "AssociateDNSAlias",
		RequestMethod: "GET", // GET or POST
	}

	x := &AssociateDNSAliasOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *AssociateDNSAliasInput) Validate() error {
	return nil
}

func (p *DNSAliasService) DissociateDNSAliases(in *DissociateDNSAliasesInput) (out *DissociateDNSAliasesOutput, err error) {
	if in == nil {
		in = &DissociateDNSAliasesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DissociateDNSAliases",
		RequestMethod: "GET", // GET or POST
	}

	x := &DissociateDNSAliasesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DissociateDNSAliasesInput) Validate() error {
	return nil
}

func (p *DNSAliasService) GetDNSLabel(in *GetDNSLabelInput) (out *GetDNSLabelOutput, err error) {
	if in == nil {
		in = &GetDNSLabelInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "GetDNSLabel",
		RequestMethod: "GET", // GET or POST
	}

	x := &GetDNSLabelOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *GetDNSLabelInput) Validate() error {
	return nil
}

func init() { proto.RegisterFile("dns.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0xa9, 0x88, 0xd2, 0xf1, 0xa0, 0x1d, 0xc5, 0x66, 0x57, 0xc1, 0x18, 0x2f, 0x9e, 0x22,
	0xe8, 0x13, 0x14, 0x16, 0x44, 0x90, 0x2a, 0x06, 0x04, 0x4f, 0x92, 0xc4, 0x39, 0x2c, 0x94, 0x6c,
	0xd8, 0xd9, 0x7a, 0xf0, 0x95, 0x7d, 0x09, 0xb1, 0xbb, 0x4d, 0x4b, 0xfe, 0xf4, 0x16, 0xf6, 0xfb,
	0x7e, 0x3b, 0x99, 0x1f, 0x0b, 0xe3, 0xaf, 0x8a, 0xd3, 0xda, 0x1a, 0x67, 0xf0, 0x90, 0xc9, 0x7e,
	0xeb, 0x92, 0x92, 0x3b, 0x10, 0x6a, 0x9e, 0xcd, 0x16, 0x3a, 0xe7, 0xcc, 0x1f, 0xbd, 0x5a, 0x53,
	0x93, 0x75, 0x9a, 0x18, 0x11, 0xf6, 0x7f, 0x4c, 0x45, 0xd1, 0x28, 0x1e, 0xdd, 0x8e, 0xdf, 0x56,
	0xdf, 0x89, 0x80, 0xa9, 0x22, 0x2e, 0xad, 0x2e, 0x68, 0x0d, 0x12, 0x3f, 0x55, 0xf5, 0xd2, 0x25,
	0x12, 0xa2, 0x6e, 0xf4, 0xb2, 0x74, 0xff, 0x59, 0x04, 0xe7, 0x33, 0x66, 0x53, 0xea, 0xdc, 0x35,
	0xa1, 0xa7, 0x04, 0x4c, 0x3b, 0x49, 0x80, 0x2e, 0x40, 0x28, 0xdd, 0xce, 0xd6, 0xd3, 0x2e, 0x41,
	0xf6, 0x85, 0x01, 0x45, 0x38, 0x79, 0x24, 0xa7, 0xe6, 0xd9, 0x73, 0x5e, 0xd0, 0xc2, 0x13, 0xa7,
	0x30, 0xd9, 0x3a, 0xf3, 0xc5, 0xfb, 0xdf, 0x3d, 0x38, 0x6e, 0x19, 0xc0, 0x0f, 0xc0, 0xee, 0x22,
	0x18, 0xa7, 0x41, 0x5a, 0x3a, 0x20, 0x40, 0x5e, 0xef, 0x68, 0xf8, 0x71, 0xf8, 0x0e, 0x93, 0xce,
	0xb6, 0x78, 0xd5, 0x70, 0xfd, 0x8e, 0x64, 0x3c, 0x5c, 0x08, 0xf7, 0x7e, 0xc2, 0x59, 0x9f, 0x0d,
	0x4c, 0x36, 0xbf, 0x34, 0x64, 0x52, 0xde, 0xec, 0xec, 0x84, 0x01, 0x0a, 0x8e, 0xb6, 0xe4, 0xa1,
	0x68, 0x98, 0xb6, 0x66, 0x29, 0xfb, 0x22, 0x7f, 0x4b, 0x71, 0xb0, 0x7a, 0x7e, 0x0f, 0x7f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x00, 0xaf, 0x9f, 0x74, 0x8b, 0x02, 0x00, 0x00,
}
