// Code generated by protoc-gen-go. DO NOT EDIT.
// source: key_pair.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/chai2010/qingcloud-go/spec.pb/qingcloud_sdk_rule"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import "github.com/chai2010/qingcloud-go/request/data"

var _ = config.Config{}
var _ = request.Request{}
var _ = data.Operation{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type KeyPairServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *KeyPairServiceProperties) Reset()                    { *m = KeyPairServiceProperties{} }
func (m *KeyPairServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*KeyPairServiceProperties) ProtoMessage()               {}
func (*KeyPairServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *KeyPairServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type DescribeKeyPairsInput struct {
}

func (m *DescribeKeyPairsInput) Reset()                    { *m = DescribeKeyPairsInput{} }
func (m *DescribeKeyPairsInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeKeyPairsInput) ProtoMessage()               {}
func (*DescribeKeyPairsInput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

type DescribeKeyPairsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DescribeKeyPairsOutput) Reset()                    { *m = DescribeKeyPairsOutput{} }
func (m *DescribeKeyPairsOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeKeyPairsOutput) ProtoMessage()               {}
func (*DescribeKeyPairsOutput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

func (m *DescribeKeyPairsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeKeyPairsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeKeyPairsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateKeyPairInput struct {
}

func (m *CreateKeyPairInput) Reset()                    { *m = CreateKeyPairInput{} }
func (m *CreateKeyPairInput) String() string            { return proto.CompactTextString(m) }
func (*CreateKeyPairInput) ProtoMessage()               {}
func (*CreateKeyPairInput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

type CreateKeyPairOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateKeyPairOutput) Reset()                    { *m = CreateKeyPairOutput{} }
func (m *CreateKeyPairOutput) String() string            { return proto.CompactTextString(m) }
func (*CreateKeyPairOutput) ProtoMessage()               {}
func (*CreateKeyPairOutput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{4} }

func (m *CreateKeyPairOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CreateKeyPairOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CreateKeyPairOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteKeyPairsInput struct {
}

func (m *DeleteKeyPairsInput) Reset()                    { *m = DeleteKeyPairsInput{} }
func (m *DeleteKeyPairsInput) String() string            { return proto.CompactTextString(m) }
func (*DeleteKeyPairsInput) ProtoMessage()               {}
func (*DeleteKeyPairsInput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{5} }

type DeleteKeyPairsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteKeyPairsOutput) Reset()                    { *m = DeleteKeyPairsOutput{} }
func (m *DeleteKeyPairsOutput) String() string            { return proto.CompactTextString(m) }
func (*DeleteKeyPairsOutput) ProtoMessage()               {}
func (*DeleteKeyPairsOutput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{6} }

func (m *DeleteKeyPairsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DeleteKeyPairsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DeleteKeyPairsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AttachKeyPairsInput struct {
}

func (m *AttachKeyPairsInput) Reset()                    { *m = AttachKeyPairsInput{} }
func (m *AttachKeyPairsInput) String() string            { return proto.CompactTextString(m) }
func (*AttachKeyPairsInput) ProtoMessage()               {}
func (*AttachKeyPairsInput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{7} }

type AttachKeyPairsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AttachKeyPairsOutput) Reset()                    { *m = AttachKeyPairsOutput{} }
func (m *AttachKeyPairsOutput) String() string            { return proto.CompactTextString(m) }
func (*AttachKeyPairsOutput) ProtoMessage()               {}
func (*AttachKeyPairsOutput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{8} }

func (m *AttachKeyPairsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *AttachKeyPairsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *AttachKeyPairsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DetachKeyPairsInput struct {
}

func (m *DetachKeyPairsInput) Reset()                    { *m = DetachKeyPairsInput{} }
func (m *DetachKeyPairsInput) String() string            { return proto.CompactTextString(m) }
func (*DetachKeyPairsInput) ProtoMessage()               {}
func (*DetachKeyPairsInput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{9} }

type DetachKeyPairsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DetachKeyPairsOutput) Reset()                    { *m = DetachKeyPairsOutput{} }
func (m *DetachKeyPairsOutput) String() string            { return proto.CompactTextString(m) }
func (*DetachKeyPairsOutput) ProtoMessage()               {}
func (*DetachKeyPairsOutput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{10} }

func (m *DetachKeyPairsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DetachKeyPairsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DetachKeyPairsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ModifyKeyPairAttributesInput struct {
}

func (m *ModifyKeyPairAttributesInput) Reset()                    { *m = ModifyKeyPairAttributesInput{} }
func (m *ModifyKeyPairAttributesInput) String() string            { return proto.CompactTextString(m) }
func (*ModifyKeyPairAttributesInput) ProtoMessage()               {}
func (*ModifyKeyPairAttributesInput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{11} }

type ModifyKeyPairAttributesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ModifyKeyPairAttributesOutput) Reset()                    { *m = ModifyKeyPairAttributesOutput{} }
func (m *ModifyKeyPairAttributesOutput) String() string            { return proto.CompactTextString(m) }
func (*ModifyKeyPairAttributesOutput) ProtoMessage()               {}
func (*ModifyKeyPairAttributesOutput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{12} }

func (m *ModifyKeyPairAttributesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ModifyKeyPairAttributesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ModifyKeyPairAttributesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*KeyPairServiceProperties)(nil), "service.KeyPairServiceProperties")
	proto.RegisterType((*DescribeKeyPairsInput)(nil), "service.DescribeKeyPairsInput")
	proto.RegisterType((*DescribeKeyPairsOutput)(nil), "service.DescribeKeyPairsOutput")
	proto.RegisterType((*CreateKeyPairInput)(nil), "service.CreateKeyPairInput")
	proto.RegisterType((*CreateKeyPairOutput)(nil), "service.CreateKeyPairOutput")
	proto.RegisterType((*DeleteKeyPairsInput)(nil), "service.DeleteKeyPairsInput")
	proto.RegisterType((*DeleteKeyPairsOutput)(nil), "service.DeleteKeyPairsOutput")
	proto.RegisterType((*AttachKeyPairsInput)(nil), "service.AttachKeyPairsInput")
	proto.RegisterType((*AttachKeyPairsOutput)(nil), "service.AttachKeyPairsOutput")
	proto.RegisterType((*DetachKeyPairsInput)(nil), "service.DetachKeyPairsInput")
	proto.RegisterType((*DetachKeyPairsOutput)(nil), "service.DetachKeyPairsOutput")
	proto.RegisterType((*ModifyKeyPairAttributesInput)(nil), "service.ModifyKeyPairAttributesInput")
	proto.RegisterType((*ModifyKeyPairAttributesOutput)(nil), "service.ModifyKeyPairAttributesOutput")
}

type KeyPairServiceInterface interface {
	DescribeKeyPairs(in *DescribeKeyPairsInput) (out *DescribeKeyPairsOutput, err error)
	CreateKeyPair(in *CreateKeyPairInput) (out *CreateKeyPairOutput, err error)
	DeleteKeyPairs(in *DeleteKeyPairsInput) (out *DeleteKeyPairsOutput, err error)
	AttachKeyPairs(in *AttachKeyPairsInput) (out *AttachKeyPairsOutput, err error)
	DetachKeyPairs(in *DetachKeyPairsInput) (out *DetachKeyPairsOutput, err error)
	ModifyKeyPairAttributes(in *ModifyKeyPairAttributesInput) (out *ModifyKeyPairAttributesOutput, err error)
}

type KeyPairService struct {
	Config           *config.Config
	Properties       *KeyPairServiceProperties
	LastResponseBody string
}

func NewKeyPairService(conf *config.Config, zone string) (p *KeyPairService) {
	return &KeyPairService{
		Config:     conf,
		Properties: &KeyPairServiceProperties{Zone: zone},
	}
}

func (s *QingCloudService) KeyPair(zone string) (*KeyPairService, error) {
	properties := &KeyPairServiceProperties{
		Zone: zone,
	}

	return &KeyPairService{Config: s.Config, Properties: properties}, nil
}

func (p *KeyPairService) DescribeKeyPairs(in *DescribeKeyPairsInput) (out *DescribeKeyPairsOutput, err error) {
	if in == nil {
		in = &DescribeKeyPairsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeKeyPairs",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeKeyPairsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DescribeKeyPairsInput) Validate() error {
	return nil
}

func (p *KeyPairService) CreateKeyPair(in *CreateKeyPairInput) (out *CreateKeyPairOutput, err error) {
	if in == nil {
		in = &CreateKeyPairInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateKeyPair",
		RequestMethod: "GET", // GET or POST
	}

	x := &CreateKeyPairOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *CreateKeyPairInput) Validate() error {
	return nil
}

func (p *KeyPairService) DeleteKeyPairs(in *DeleteKeyPairsInput) (out *DeleteKeyPairsOutput, err error) {
	if in == nil {
		in = &DeleteKeyPairsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteKeyPairs",
		RequestMethod: "GET", // GET or POST
	}

	x := &DeleteKeyPairsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DeleteKeyPairsInput) Validate() error {
	return nil
}

func (p *KeyPairService) AttachKeyPairs(in *AttachKeyPairsInput) (out *AttachKeyPairsOutput, err error) {
	if in == nil {
		in = &AttachKeyPairsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "AttachKeyPairs",
		RequestMethod: "GET", // GET or POST
	}

	x := &AttachKeyPairsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *AttachKeyPairsInput) Validate() error {
	return nil
}

func (p *KeyPairService) DetachKeyPairs(in *DetachKeyPairsInput) (out *DetachKeyPairsOutput, err error) {
	if in == nil {
		in = &DetachKeyPairsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DetachKeyPairs",
		RequestMethod: "GET", // GET or POST
	}

	x := &DetachKeyPairsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DetachKeyPairsInput) Validate() error {
	return nil
}

func (p *KeyPairService) ModifyKeyPairAttributes(in *ModifyKeyPairAttributesInput) (out *ModifyKeyPairAttributesOutput, err error) {
	if in == nil {
		in = &ModifyKeyPairAttributesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifyKeyPairAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &ModifyKeyPairAttributesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *ModifyKeyPairAttributesInput) Validate() error {
	return nil
}

func init() { proto.RegisterFile("key_pair.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 410 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0x5b, 0x6e, 0xda, 0x40,
	0x14, 0x86, 0x45, 0x4b, 0x71, 0x39, 0x52, 0x51, 0x35, 0xdc, 0x5c, 0x17, 0x28, 0xb2, 0xd4, 0x8a,
	0x27, 0x57, 0x6a, 0x57, 0x80, 0xe0, 0x25, 0x89, 0x50, 0x08, 0x2c, 0xc0, 0xf2, 0xe5, 0x04, 0x46,
	0x38, 0x1e, 0x67, 0x3c, 0x8e, 0x44, 0x96, 0x90, 0x65, 0x64, 0x87, 0xd9, 0x41, 0x84, 0x3d, 0x10,
	0x06, 0xec, 0xe4, 0xc9, 0x2f, 0x96, 0xe7, 0x5c, 0xfe, 0xff, 0x8c, 0xf4, 0x9d, 0x81, 0xc6, 0x06,
	0xb7, 0x76, 0xe4, 0x50, 0x6e, 0x45, 0x9c, 0x09, 0x46, 0xb4, 0x18, 0xf9, 0x03, 0xf5, 0xd0, 0xe8,
	0xdf, 0xd3, 0x70, 0xe5, 0x05, 0x2c, 0xf1, 0xed, 0xd8, 0xdf, 0xd8, 0x3c, 0x09, 0xf0, 0xef, 0xee,
	0x93, 0xd5, 0x99, 0x16, 0xe8, 0x57, 0xb8, 0x9d, 0x3b, 0x94, 0x2f, 0xb3, 0x86, 0x39, 0x67, 0x11,
	0x72, 0x41, 0x31, 0x26, 0x04, 0xaa, 0x8f, 0x2c, 0x44, 0xbd, 0x32, 0xac, 0x8c, 0xea, 0x8b, 0xf4,
	0xdf, 0xec, 0x42, 0x7b, 0x8a, 0xb1, 0xc7, 0xa9, 0x8b, 0xb2, 0x2f, 0xbe, 0x08, 0xa3, 0x44, 0x98,
	0x08, 0x9d, 0xd3, 0xc4, 0x75, 0x22, 0xa2, 0x44, 0x90, 0x0e, 0xd4, 0x1c, 0x4f, 0x50, 0x16, 0x4a,
	0x21, 0x79, 0x22, 0x3f, 0xe0, 0x2b, 0x47, 0x61, 0x7b, 0xcc, 0x47, 0xfd, 0xd3, 0xb0, 0x32, 0xfa,
	0xb2, 0xd0, 0x38, 0x8a, 0x09, 0xf3, 0x91, 0xe8, 0xa0, 0xdd, 0x61, 0x1c, 0x3b, 0x2b, 0xd4, 0x3f,
	0xa7, 0x3d, 0xfb, 0xa3, 0xd9, 0x02, 0x32, 0xe1, 0xe8, 0x88, 0xbd, 0x49, 0x66, 0xee, 0x42, 0x53,
	0x89, 0x96, 0xe1, 0xdc, 0x86, 0xe6, 0x14, 0x03, 0x14, 0x27, 0xf7, 0xf6, 0xa0, 0xa5, 0x86, 0x4b,
	0xf2, 0x1e, 0x0b, 0xe1, 0x78, 0xeb, 0x33, 0x6f, 0x35, 0x5c, 0xda, 0xbd, 0x73, 0xbd, 0xd5, 0x70,
	0x19, 0xde, 0x03, 0xe8, 0xcd, 0x98, 0x4f, 0x6f, 0xb7, 0xd2, 0x64, 0x2c, 0x04, 0xa7, 0x6e, 0x22,
	0x50, 0x0e, 0x11, 0x40, 0xbf, 0x20, 0x5f, 0xc2, 0x34, 0xff, 0x9e, 0xab, 0xd0, 0x50, 0x97, 0x85,
	0x2c, 0xe1, 0xfb, 0x29, 0xf5, 0x64, 0x60, 0xc9, 0xdd, 0xb3, 0x72, 0x37, 0xc5, 0xf8, 0x55, 0x98,
	0x97, 0x43, 0x5f, 0xc2, 0x37, 0x85, 0x66, 0xf2, 0xf3, 0xd0, 0x71, 0xce, 0xbe, 0xd1, 0xcb, 0x4f,
	0x4a, 0xad, 0x19, 0x34, 0x54, 0x3c, 0x49, 0xef, 0xc8, 0xfe, 0x0c, 0x67, 0xa3, 0x5f, 0x90, 0x7d,
	0x93, 0x53, 0x89, 0x3b, 0x92, 0xcb, 0x21, 0xf4, 0x48, 0x2e, 0x17, 0xd4, 0x74, 0xba, 0x02, 0xb9,
	0x1c, 0xe8, 0x94, 0xe9, 0x72, 0xe4, 0xd6, 0xd0, 0x2d, 0xc0, 0x81, 0xfc, 0x3e, 0x74, 0xbe, 0x07,
	0x94, 0xf1, 0xe7, 0xa3, 0xb2, 0xcc, 0xc9, 0xd0, 0x9f, 0x5e, 0xaa, 0x2d, 0xa8, 0xdf, 0xd0, 0x70,
	0x35, 0xd9, 0xbd, 0xad, 0x44, 0x93, 0x95, 0x6e, 0x2d, 0x7d, 0x57, 0xff, 0xbf, 0x06, 0x00, 0x00,
	0xff, 0xff, 0x12, 0x05, 0xa3, 0xf8, 0x91, 0x05, 0x00, 0x00,
}
