// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cluster.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/chai2010/qingcloud-go/spec.pb/qingcloud_sdk_rule"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import "github.com/chai2010/qingcloud-go/request/data"

var _ = config.Config{}
var _ = request.Request{}
var _ = data.Operation{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ClusterServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *ClusterServiceProperties) Reset()                    { *m = ClusterServiceProperties{} }
func (m *ClusterServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*ClusterServiceProperties) ProtoMessage()               {}
func (*ClusterServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *ClusterServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

//
// CreateCluster
//
// conf - 配置文件格式
//
// {
// "app_id": "app-zkv33646",
// "app_version": "1.0",
// "vxnet": "vxnet-p050mao",
// "node": {
// "container": {
// "type": "kvm",
// "image": "img-zookeeper",
// "zone": "allinone"
// },
// "instance_class": 0,
// "count": 3,
// "cpu": 1,
// "memory": 512,
// "volume": {
// "size": 3,
// "mount_point": "/zk_data",
// "filesystem": "xfs",
// "class": 0
// },
// "server_id_upper_bound":255,
// "service": {
// "start": {
// "cmd": "/opt/zookeeper/bin/zkServer.sh start"
// },
// "stop": {
// "cmd": "/opt/zookeeper/bin/zkServer.sh stop"
// }
// }
// }
// }
type CreateClusterInput_Conf struct {
	AppId      string                        `protobuf:"bytes,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	AppVersion string                        `protobuf:"bytes,2,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
	Vxnet      string                        `protobuf:"bytes,3,opt,name=vxnet" json:"vxnet,omitempty"`
	Node       *CreateClusterInput_Conf_Node `protobuf:"bytes,4,opt,name=node" json:"node,omitempty"`
}

func (m *CreateClusterInput_Conf) Reset()                    { *m = CreateClusterInput_Conf{} }
func (m *CreateClusterInput_Conf) String() string            { return proto.CompactTextString(m) }
func (*CreateClusterInput_Conf) ProtoMessage()               {}
func (*CreateClusterInput_Conf) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *CreateClusterInput_Conf) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *CreateClusterInput_Conf) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *CreateClusterInput_Conf) GetVxnet() string {
	if m != nil {
		return m.Vxnet
	}
	return ""
}

func (m *CreateClusterInput_Conf) GetNode() *CreateClusterInput_Conf_Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type CreateClusterInput_Conf_Node struct {
	Container          *CreateClusterInput_Conf_Container `protobuf:"bytes,1,opt,name=container" json:"container,omitempty"`
	InstanceClass      int32                              `protobuf:"varint,2,opt,name=instance_class,json=instanceClass" json:"instance_class,omitempty"`
	Count              int32                              `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	Cpu                int32                              `protobuf:"varint,4,opt,name=cpu" json:"cpu,omitempty"`
	Memory             int32                              `protobuf:"varint,5,opt,name=memory" json:"memory,omitempty"`
	Volume             *CreateClusterInput_Conf_Volume    `protobuf:"bytes,6,opt,name=volume" json:"volume,omitempty"`
	ServerIdUpperBound int32                              `protobuf:"varint,7,opt,name=server_id_upper_bound,json=serverIdUpperBound" json:"server_id_upper_bound,omitempty"`
	Service            *CreateClusterInput_Conf_Service   `protobuf:"bytes,8,opt,name=service" json:"service,omitempty"`
}

func (m *CreateClusterInput_Conf_Node) Reset()                    { *m = CreateClusterInput_Conf_Node{} }
func (m *CreateClusterInput_Conf_Node) String() string            { return proto.CompactTextString(m) }
func (*CreateClusterInput_Conf_Node) ProtoMessage()               {}
func (*CreateClusterInput_Conf_Node) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1, 0} }

func (m *CreateClusterInput_Conf_Node) GetContainer() *CreateClusterInput_Conf_Container {
	if m != nil {
		return m.Container
	}
	return nil
}

func (m *CreateClusterInput_Conf_Node) GetInstanceClass() int32 {
	if m != nil {
		return m.InstanceClass
	}
	return 0
}

func (m *CreateClusterInput_Conf_Node) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *CreateClusterInput_Conf_Node) GetCpu() int32 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *CreateClusterInput_Conf_Node) GetMemory() int32 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *CreateClusterInput_Conf_Node) GetVolume() *CreateClusterInput_Conf_Volume {
	if m != nil {
		return m.Volume
	}
	return nil
}

func (m *CreateClusterInput_Conf_Node) GetServerIdUpperBound() int32 {
	if m != nil {
		return m.ServerIdUpperBound
	}
	return 0
}

func (m *CreateClusterInput_Conf_Node) GetService() *CreateClusterInput_Conf_Service {
	if m != nil {
		return m.Service
	}
	return nil
}

type CreateClusterInput_Conf_Container struct {
	Type  string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Image string `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	Zone  string `protobuf:"bytes,3,opt,name=zone" json:"zone,omitempty"`
}

func (m *CreateClusterInput_Conf_Container) Reset()         { *m = CreateClusterInput_Conf_Container{} }
func (m *CreateClusterInput_Conf_Container) String() string { return proto.CompactTextString(m) }
func (*CreateClusterInput_Conf_Container) ProtoMessage()    {}
func (*CreateClusterInput_Conf_Container) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{1, 1}
}

func (m *CreateClusterInput_Conf_Container) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CreateClusterInput_Conf_Container) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *CreateClusterInput_Conf_Container) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type CreateClusterInput_Conf_Volume struct {
	Size       int32  `protobuf:"varint,1,opt,name=size" json:"size,omitempty"`
	MountPoint string `protobuf:"bytes,2,opt,name=mount_point,json=mountPoint" json:"mount_point,omitempty"`
	Filesystem string `protobuf:"bytes,3,opt,name=filesystem" json:"filesystem,omitempty"`
	Class      int32  `protobuf:"varint,4,opt,name=class" json:"class,omitempty"`
}

func (m *CreateClusterInput_Conf_Volume) Reset()         { *m = CreateClusterInput_Conf_Volume{} }
func (m *CreateClusterInput_Conf_Volume) String() string { return proto.CompactTextString(m) }
func (*CreateClusterInput_Conf_Volume) ProtoMessage()    {}
func (*CreateClusterInput_Conf_Volume) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{1, 2}
}

func (m *CreateClusterInput_Conf_Volume) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *CreateClusterInput_Conf_Volume) GetMountPoint() string {
	if m != nil {
		return m.MountPoint
	}
	return ""
}

func (m *CreateClusterInput_Conf_Volume) GetFilesystem() string {
	if m != nil {
		return m.Filesystem
	}
	return ""
}

func (m *CreateClusterInput_Conf_Volume) GetClass() int32 {
	if m != nil {
		return m.Class
	}
	return 0
}

type CreateClusterInput_Conf_Service struct {
	Start *CreateClusterInput_Conf_Command `protobuf:"bytes,1,opt,name=start" json:"start,omitempty"`
	Stop  *CreateClusterInput_Conf_Command `protobuf:"bytes,2,opt,name=stop" json:"stop,omitempty"`
}

func (m *CreateClusterInput_Conf_Service) Reset()         { *m = CreateClusterInput_Conf_Service{} }
func (m *CreateClusterInput_Conf_Service) String() string { return proto.CompactTextString(m) }
func (*CreateClusterInput_Conf_Service) ProtoMessage()    {}
func (*CreateClusterInput_Conf_Service) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{1, 3}
}

func (m *CreateClusterInput_Conf_Service) GetStart() *CreateClusterInput_Conf_Command {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *CreateClusterInput_Conf_Service) GetStop() *CreateClusterInput_Conf_Command {
	if m != nil {
		return m.Stop
	}
	return nil
}

type CreateClusterInput_Conf_Command struct {
	Cmd string `protobuf:"bytes,1,opt,name=cmd" json:"cmd,omitempty"`
}

func (m *CreateClusterInput_Conf_Command) Reset()         { *m = CreateClusterInput_Conf_Command{} }
func (m *CreateClusterInput_Conf_Command) String() string { return proto.CompactTextString(m) }
func (*CreateClusterInput_Conf_Command) ProtoMessage()    {}
func (*CreateClusterInput_Conf_Command) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{1, 4}
}

func (m *CreateClusterInput_Conf_Command) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

type CreateClusterInput struct {
	Conf string `protobuf:"bytes,1,opt,name=conf" json:"conf,omitempty"`
}

func (m *CreateClusterInput) Reset()                    { *m = CreateClusterInput{} }
func (m *CreateClusterInput) String() string            { return proto.CompactTextString(m) }
func (*CreateClusterInput) ProtoMessage()               {}
func (*CreateClusterInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *CreateClusterInput) GetConf() string {
	if m != nil {
		return m.Conf
	}
	return ""
}

type CreateClusterOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateClusterOutput) Reset()                    { *m = CreateClusterOutput{} }
func (m *CreateClusterOutput) String() string            { return proto.CompactTextString(m) }
func (*CreateClusterOutput) ProtoMessage()               {}
func (*CreateClusterOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *CreateClusterOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CreateClusterOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CreateClusterOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DescribeClustersInput struct {
	Clusters   []string `protobuf:"bytes,1,rep,name=clusters" json:"clusters,omitempty"`
	Scope      string   `protobuf:"bytes,2,opt,name=scope" json:"scope,omitempty"`
	Role       string   `protobuf:"bytes,3,opt,name=role" json:"role,omitempty"`
	AppId      []string `protobuf:"bytes,4,rep,name=app_id,json=appId" json:"app_id,omitempty"`
	AppVersion []string `protobuf:"bytes,5,rep,name=app_version,json=appVersion" json:"app_version,omitempty"`
	Users      []string `protobuf:"bytes,6,rep,name=users" json:"users,omitempty"`
}

func (m *DescribeClustersInput) Reset()                    { *m = DescribeClustersInput{} }
func (m *DescribeClustersInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeClustersInput) ProtoMessage()               {}
func (*DescribeClustersInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *DescribeClustersInput) GetClusters() []string {
	if m != nil {
		return m.Clusters
	}
	return nil
}

func (m *DescribeClustersInput) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *DescribeClustersInput) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *DescribeClustersInput) GetAppId() []string {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *DescribeClustersInput) GetAppVersion() []string {
	if m != nil {
		return m.AppVersion
	}
	return nil
}

func (m *DescribeClustersInput) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

type DescribeClustersOutput struct {
	Action     string     `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode    int32      `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message    string     `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	TotalCount int32      `protobuf:"varint,4,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	ClusterSet []*Cluster `protobuf:"bytes,5,rep,name=cluster_set,json=clusterSet" json:"cluster_set,omitempty"`
}

func (m *DescribeClustersOutput) Reset()                    { *m = DescribeClustersOutput{} }
func (m *DescribeClustersOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeClustersOutput) ProtoMessage()               {}
func (*DescribeClustersOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *DescribeClustersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeClustersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeClustersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeClustersOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeClustersOutput) GetClusterSet() []*Cluster {
	if m != nil {
		return m.ClusterSet
	}
	return nil
}

type DescribeClusterNodesInput struct {
	Cluster      string   `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	ClusterNodes []string `protobuf:"bytes,2,rep,name=cluster_nodes,json=clusterNodes" json:"cluster_nodes,omitempty"`
	Role         string   `protobuf:"bytes,3,opt,name=role" json:"role,omitempty"`
}

func (m *DescribeClusterNodesInput) Reset()                    { *m = DescribeClusterNodesInput{} }
func (m *DescribeClusterNodesInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeClusterNodesInput) ProtoMessage()               {}
func (*DescribeClusterNodesInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *DescribeClusterNodesInput) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *DescribeClusterNodesInput) GetClusterNodes() []string {
	if m != nil {
		return m.ClusterNodes
	}
	return nil
}

func (m *DescribeClusterNodesInput) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type DescribeClusterNodesOutput struct {
	Action     string         `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode    int32          `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message    string         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	TotalCount int32          `protobuf:"varint,4,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	NodeSet    []*ClasterNode `protobuf:"bytes,5,rep,name=node_set,json=nodeSet" json:"node_set,omitempty"`
}

func (m *DescribeClusterNodesOutput) Reset()                    { *m = DescribeClusterNodesOutput{} }
func (m *DescribeClusterNodesOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeClusterNodesOutput) ProtoMessage()               {}
func (*DescribeClusterNodesOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *DescribeClusterNodesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeClusterNodesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeClusterNodesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeClusterNodesOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeClusterNodesOutput) GetNodeSet() []*ClasterNode {
	if m != nil {
		return m.NodeSet
	}
	return nil
}

type StopClustersInput struct {
	Clusters []string `protobuf:"bytes,1,rep,name=clusters" json:"clusters,omitempty"`
	Force    int32    `protobuf:"varint,2,opt,name=force" json:"force,omitempty"`
}

func (m *StopClustersInput) Reset()                    { *m = StopClustersInput{} }
func (m *StopClustersInput) String() string            { return proto.CompactTextString(m) }
func (*StopClustersInput) ProtoMessage()               {}
func (*StopClustersInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *StopClustersInput) GetClusters() []string {
	if m != nil {
		return m.Clusters
	}
	return nil
}

func (m *StopClustersInput) GetForce() int32 {
	if m != nil {
		return m.Force
	}
	return 0
}

type StopClustersOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *StopClustersOutput) Reset()                    { *m = StopClustersOutput{} }
func (m *StopClustersOutput) String() string            { return proto.CompactTextString(m) }
func (*StopClustersOutput) ProtoMessage()               {}
func (*StopClustersOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *StopClustersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *StopClustersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *StopClustersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type StartClustersInput struct {
	Clusters []string `protobuf:"bytes,1,rep,name=clusters" json:"clusters,omitempty"`
}

func (m *StartClustersInput) Reset()                    { *m = StartClustersInput{} }
func (m *StartClustersInput) String() string            { return proto.CompactTextString(m) }
func (*StartClustersInput) ProtoMessage()               {}
func (*StartClustersInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *StartClustersInput) GetClusters() []string {
	if m != nil {
		return m.Clusters
	}
	return nil
}

type StartClustersOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *StartClustersOutput) Reset()                    { *m = StartClustersOutput{} }
func (m *StartClustersOutput) String() string            { return proto.CompactTextString(m) }
func (*StartClustersOutput) ProtoMessage()               {}
func (*StartClustersOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *StartClustersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *StartClustersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *StartClustersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteClustersInput struct {
	Clusters []string `protobuf:"bytes,1,rep,name=clusters" json:"clusters,omitempty"`
}

func (m *DeleteClustersInput) Reset()                    { *m = DeleteClustersInput{} }
func (m *DeleteClustersInput) String() string            { return proto.CompactTextString(m) }
func (*DeleteClustersInput) ProtoMessage()               {}
func (*DeleteClustersInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *DeleteClustersInput) GetClusters() []string {
	if m != nil {
		return m.Clusters
	}
	return nil
}

type DeleteClustersOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteClustersOutput) Reset()                    { *m = DeleteClustersOutput{} }
func (m *DeleteClustersOutput) String() string            { return proto.CompactTextString(m) }
func (*DeleteClustersOutput) ProtoMessage()               {}
func (*DeleteClustersOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *DeleteClustersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DeleteClustersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DeleteClustersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type LeaseInput struct {
	Clusters []string `protobuf:"bytes,1,rep,name=clusters" json:"clusters,omitempty"`
}

func (m *LeaseInput) Reset()                    { *m = LeaseInput{} }
func (m *LeaseInput) String() string            { return proto.CompactTextString(m) }
func (*LeaseInput) ProtoMessage()               {}
func (*LeaseInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *LeaseInput) GetClusters() []string {
	if m != nil {
		return m.Clusters
	}
	return nil
}

type LeaseOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *LeaseOutput) Reset()                    { *m = LeaseOutput{} }
func (m *LeaseOutput) String() string            { return proto.CompactTextString(m) }
func (*LeaseOutput) ProtoMessage()               {}
func (*LeaseOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *LeaseOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *LeaseOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *LeaseOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AddClusterNodesInput struct {
	Cluster    string   `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	NodeCount  int32    `protobuf:"varint,2,opt,name=node_count,json=nodeCount" json:"node_count,omitempty"`
	NodeRole   string   `protobuf:"bytes,3,opt,name=node_role,json=nodeRole" json:"node_role,omitempty"`
	NodeName   string   `protobuf:"bytes,4,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
	PrivateIps []string `protobuf:"bytes,5,rep,name=private_ips,json=privateIps" json:"private_ips,omitempty"`
}

func (m *AddClusterNodesInput) Reset()                    { *m = AddClusterNodesInput{} }
func (m *AddClusterNodesInput) String() string            { return proto.CompactTextString(m) }
func (*AddClusterNodesInput) ProtoMessage()               {}
func (*AddClusterNodesInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{16} }

func (m *AddClusterNodesInput) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *AddClusterNodesInput) GetNodeCount() int32 {
	if m != nil {
		return m.NodeCount
	}
	return 0
}

func (m *AddClusterNodesInput) GetNodeRole() string {
	if m != nil {
		return m.NodeRole
	}
	return ""
}

func (m *AddClusterNodesInput) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *AddClusterNodesInput) GetPrivateIps() []string {
	if m != nil {
		return m.PrivateIps
	}
	return nil
}

type AddClusterNodesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AddClusterNodesOutput) Reset()                    { *m = AddClusterNodesOutput{} }
func (m *AddClusterNodesOutput) String() string            { return proto.CompactTextString(m) }
func (*AddClusterNodesOutput) ProtoMessage()               {}
func (*AddClusterNodesOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{17} }

func (m *AddClusterNodesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *AddClusterNodesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *AddClusterNodesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteClusterNodesInput struct {
	Cluster string   `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Nodes   []string `protobuf:"bytes,2,rep,name=nodes" json:"nodes,omitempty"`
	Force   int32    `protobuf:"varint,3,opt,name=force" json:"force,omitempty"`
}

func (m *DeleteClusterNodesInput) Reset()                    { *m = DeleteClusterNodesInput{} }
func (m *DeleteClusterNodesInput) String() string            { return proto.CompactTextString(m) }
func (*DeleteClusterNodesInput) ProtoMessage()               {}
func (*DeleteClusterNodesInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{18} }

func (m *DeleteClusterNodesInput) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *DeleteClusterNodesInput) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *DeleteClusterNodesInput) GetForce() int32 {
	if m != nil {
		return m.Force
	}
	return 0
}

type DeleteClusterNodesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteClusterNodesOutput) Reset()                    { *m = DeleteClusterNodesOutput{} }
func (m *DeleteClusterNodesOutput) String() string            { return proto.CompactTextString(m) }
func (*DeleteClusterNodesOutput) ProtoMessage()               {}
func (*DeleteClusterNodesOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{19} }

func (m *DeleteClusterNodesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DeleteClusterNodesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DeleteClusterNodesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ResizeClusterInput struct {
	Cluster     string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	NodeRole    string `protobuf:"bytes,2,opt,name=node_role,json=nodeRole" json:"node_role,omitempty"`
	Cpu         int32  `protobuf:"varint,3,opt,name=cpu" json:"cpu,omitempty"`
	Memory      int32  `protobuf:"varint,4,opt,name=memory" json:"memory,omitempty"`
	StorageSize int32  `protobuf:"varint,5,opt,name=storage_size,json=storageSize" json:"storage_size,omitempty"`
}

func (m *ResizeClusterInput) Reset()                    { *m = ResizeClusterInput{} }
func (m *ResizeClusterInput) String() string            { return proto.CompactTextString(m) }
func (*ResizeClusterInput) ProtoMessage()               {}
func (*ResizeClusterInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{20} }

func (m *ResizeClusterInput) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *ResizeClusterInput) GetNodeRole() string {
	if m != nil {
		return m.NodeRole
	}
	return ""
}

func (m *ResizeClusterInput) GetCpu() int32 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *ResizeClusterInput) GetMemory() int32 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *ResizeClusterInput) GetStorageSize() int32 {
	if m != nil {
		return m.StorageSize
	}
	return 0
}

type ResizeClusterOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ResizeClusterOutput) Reset()                    { *m = ResizeClusterOutput{} }
func (m *ResizeClusterOutput) String() string            { return proto.CompactTextString(m) }
func (*ResizeClusterOutput) ProtoMessage()               {}
func (*ResizeClusterOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{21} }

func (m *ResizeClusterOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ResizeClusterOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ResizeClusterOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ChangeClusterVxnetInput struct {
	Cluster    string            `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Vxnet      string            `protobuf:"bytes,2,opt,name=vxnet" json:"vxnet,omitempty"`
	PrivateIps map[string]string `protobuf:"bytes,3,rep,name=private_ips,json=privateIps" json:"private_ips,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Roles      []string          `protobuf:"bytes,4,rep,name=roles" json:"roles,omitempty"`
}

func (m *ChangeClusterVxnetInput) Reset()                    { *m = ChangeClusterVxnetInput{} }
func (m *ChangeClusterVxnetInput) String() string            { return proto.CompactTextString(m) }
func (*ChangeClusterVxnetInput) ProtoMessage()               {}
func (*ChangeClusterVxnetInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{22} }

func (m *ChangeClusterVxnetInput) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *ChangeClusterVxnetInput) GetVxnet() string {
	if m != nil {
		return m.Vxnet
	}
	return ""
}

func (m *ChangeClusterVxnetInput) GetPrivateIps() map[string]string {
	if m != nil {
		return m.PrivateIps
	}
	return nil
}

func (m *ChangeClusterVxnetInput) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

type ChangeClusterVxnetOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ChangeClusterVxnetOutput) Reset()                    { *m = ChangeClusterVxnetOutput{} }
func (m *ChangeClusterVxnetOutput) String() string            { return proto.CompactTextString(m) }
func (*ChangeClusterVxnetOutput) ProtoMessage()               {}
func (*ChangeClusterVxnetOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{23} }

func (m *ChangeClusterVxnetOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ChangeClusterVxnetOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ChangeClusterVxnetOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SuspendClustersInput struct {
	Clusters []string `protobuf:"bytes,1,rep,name=clusters" json:"clusters,omitempty"`
}

func (m *SuspendClustersInput) Reset()                    { *m = SuspendClustersInput{} }
func (m *SuspendClustersInput) String() string            { return proto.CompactTextString(m) }
func (*SuspendClustersInput) ProtoMessage()               {}
func (*SuspendClustersInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{24} }

func (m *SuspendClustersInput) GetClusters() []string {
	if m != nil {
		return m.Clusters
	}
	return nil
}

type SuspendClustersOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *SuspendClustersOutput) Reset()                    { *m = SuspendClustersOutput{} }
func (m *SuspendClustersOutput) String() string            { return proto.CompactTextString(m) }
func (*SuspendClustersOutput) ProtoMessage()               {}
func (*SuspendClustersOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{25} }

func (m *SuspendClustersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *SuspendClustersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *SuspendClustersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateClusterEnvironmentInput struct {
	Cluster string            `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Roles   []string          `protobuf:"bytes,2,rep,name=roles" json:"roles,omitempty"`
	Env     map[string]string `protobuf:"bytes,3,rep,name=env" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *UpdateClusterEnvironmentInput) Reset()                    { *m = UpdateClusterEnvironmentInput{} }
func (m *UpdateClusterEnvironmentInput) String() string            { return proto.CompactTextString(m) }
func (*UpdateClusterEnvironmentInput) ProtoMessage()               {}
func (*UpdateClusterEnvironmentInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{26} }

func (m *UpdateClusterEnvironmentInput) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *UpdateClusterEnvironmentInput) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *UpdateClusterEnvironmentInput) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

type UpdateClusterEnvironmentOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateClusterEnvironmentOutput) Reset()                    { *m = UpdateClusterEnvironmentOutput{} }
func (m *UpdateClusterEnvironmentOutput) String() string            { return proto.CompactTextString(m) }
func (*UpdateClusterEnvironmentOutput) ProtoMessage()               {}
func (*UpdateClusterEnvironmentOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{27} }

func (m *UpdateClusterEnvironmentOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *UpdateClusterEnvironmentOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *UpdateClusterEnvironmentOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ModifyClusterAttributesInput struct {
	Cluster     string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *ModifyClusterAttributesInput) Reset()                    { *m = ModifyClusterAttributesInput{} }
func (m *ModifyClusterAttributesInput) String() string            { return proto.CompactTextString(m) }
func (*ModifyClusterAttributesInput) ProtoMessage()               {}
func (*ModifyClusterAttributesInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{28} }

func (m *ModifyClusterAttributesInput) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *ModifyClusterAttributesInput) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ModifyClusterAttributesInput) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ModifyClusterAttributesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ModifyClusterAttributesOutput) Reset()                    { *m = ModifyClusterAttributesOutput{} }
func (m *ModifyClusterAttributesOutput) String() string            { return proto.CompactTextString(m) }
func (*ModifyClusterAttributesOutput) ProtoMessage()               {}
func (*ModifyClusterAttributesOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{29} }

func (m *ModifyClusterAttributesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ModifyClusterAttributesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ModifyClusterAttributesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ModifyClusterNodeAttributesInput struct {
	Cluster     string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	ClusterNode string `protobuf:"bytes,2,opt,name=cluster_node,json=clusterNode" json:"cluster_node,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *ModifyClusterNodeAttributesInput) Reset()         { *m = ModifyClusterNodeAttributesInput{} }
func (m *ModifyClusterNodeAttributesInput) String() string { return proto.CompactTextString(m) }
func (*ModifyClusterNodeAttributesInput) ProtoMessage()    {}
func (*ModifyClusterNodeAttributesInput) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{30}
}

func (m *ModifyClusterNodeAttributesInput) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *ModifyClusterNodeAttributesInput) GetClusterNode() string {
	if m != nil {
		return m.ClusterNode
	}
	return ""
}

func (m *ModifyClusterNodeAttributesInput) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ModifyClusterNodeAttributesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ModifyClusterNodeAttributesOutput) Reset()         { *m = ModifyClusterNodeAttributesOutput{} }
func (m *ModifyClusterNodeAttributesOutput) String() string { return proto.CompactTextString(m) }
func (*ModifyClusterNodeAttributesOutput) ProtoMessage()    {}
func (*ModifyClusterNodeAttributesOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{31}
}

func (m *ModifyClusterNodeAttributesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ModifyClusterNodeAttributesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ModifyClusterNodeAttributesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetClustersStatsInput struct {
	Zones []string `protobuf:"bytes,1,rep,name=zones" json:"zones,omitempty"`
}

func (m *GetClustersStatsInput) Reset()                    { *m = GetClustersStatsInput{} }
func (m *GetClustersStatsInput) String() string            { return proto.CompactTextString(m) }
func (*GetClustersStatsInput) ProtoMessage()               {}
func (*GetClustersStatsInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{32} }

func (m *GetClustersStatsInput) GetZones() []string {
	if m != nil {
		return m.Zones
	}
	return nil
}

type GetClustersStatsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetClustersStatsOutput) Reset()                    { *m = GetClustersStatsOutput{} }
func (m *GetClustersStatsOutput) String() string            { return proto.CompactTextString(m) }
func (*GetClustersStatsOutput) ProtoMessage()               {}
func (*GetClustersStatsOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{33} }

func (m *GetClustersStatsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *GetClustersStatsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *GetClustersStatsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DescribeClusterUsersInput struct {
	Zones         []string `protobuf:"bytes,1,rep,name=zones" json:"zones,omitempty"`
	Apps          []string `protobuf:"bytes,2,rep,name=apps" json:"apps,omitempty"`
	AppVersions   []string `protobuf:"bytes,3,rep,name=app_versions,json=appVersions" json:"app_versions,omitempty"`
	Users         []string `protobuf:"bytes,4,rep,name=users" json:"users,omitempty"`
	ClusterStatus []string `protobuf:"bytes,5,rep,name=cluster_status,json=clusterStatus" json:"cluster_status,omitempty"`
}

func (m *DescribeClusterUsersInput) Reset()                    { *m = DescribeClusterUsersInput{} }
func (m *DescribeClusterUsersInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeClusterUsersInput) ProtoMessage()               {}
func (*DescribeClusterUsersInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{34} }

func (m *DescribeClusterUsersInput) GetZones() []string {
	if m != nil {
		return m.Zones
	}
	return nil
}

func (m *DescribeClusterUsersInput) GetApps() []string {
	if m != nil {
		return m.Apps
	}
	return nil
}

func (m *DescribeClusterUsersInput) GetAppVersions() []string {
	if m != nil {
		return m.AppVersions
	}
	return nil
}

func (m *DescribeClusterUsersInput) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *DescribeClusterUsersInput) GetClusterStatus() []string {
	if m != nil {
		return m.ClusterStatus
	}
	return nil
}

type DescribeClusterUsersOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DescribeClusterUsersOutput) Reset()                    { *m = DescribeClusterUsersOutput{} }
func (m *DescribeClusterUsersOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeClusterUsersOutput) ProtoMessage()               {}
func (*DescribeClusterUsersOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{35} }

func (m *DescribeClusterUsersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeClusterUsersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeClusterUsersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type RestartClusterServiceInput struct {
	Cluster string `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Role    string `protobuf:"bytes,2,opt,name=role" json:"role,omitempty"`
}

func (m *RestartClusterServiceInput) Reset()                    { *m = RestartClusterServiceInput{} }
func (m *RestartClusterServiceInput) String() string            { return proto.CompactTextString(m) }
func (*RestartClusterServiceInput) ProtoMessage()               {}
func (*RestartClusterServiceInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{36} }

func (m *RestartClusterServiceInput) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *RestartClusterServiceInput) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type RestartClusterServiceOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *RestartClusterServiceOutput) Reset()                    { *m = RestartClusterServiceOutput{} }
func (m *RestartClusterServiceOutput) String() string            { return proto.CompactTextString(m) }
func (*RestartClusterServiceOutput) ProtoMessage()               {}
func (*RestartClusterServiceOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{37} }

func (m *RestartClusterServiceOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *RestartClusterServiceOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *RestartClusterServiceOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpgradeClustersInput struct {
	Clusters   []string `protobuf:"bytes,1,rep,name=clusters" json:"clusters,omitempty"`
	AppVersion string   `protobuf:"bytes,2,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
}

func (m *UpgradeClustersInput) Reset()                    { *m = UpgradeClustersInput{} }
func (m *UpgradeClustersInput) String() string            { return proto.CompactTextString(m) }
func (*UpgradeClustersInput) ProtoMessage()               {}
func (*UpgradeClustersInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{38} }

func (m *UpgradeClustersInput) GetClusters() []string {
	if m != nil {
		return m.Clusters
	}
	return nil
}

func (m *UpgradeClustersInput) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

type UpgradeClustersOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpgradeClustersOutput) Reset()                    { *m = UpgradeClustersOutput{} }
func (m *UpgradeClustersOutput) String() string            { return proto.CompactTextString(m) }
func (*UpgradeClustersOutput) ProtoMessage()               {}
func (*UpgradeClustersOutput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{39} }

func (m *UpgradeClustersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *UpgradeClustersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *UpgradeClustersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AuthorizeClustersBrokerToDeveloperInput struct {
	Clusters []string `protobuf:"bytes,1,rep,name=clusters" json:"clusters,omitempty"`
}

func (m *AuthorizeClustersBrokerToDeveloperInput) Reset() {
	*m = AuthorizeClustersBrokerToDeveloperInput{}
}
func (m *AuthorizeClustersBrokerToDeveloperInput) String() string { return proto.CompactTextString(m) }
func (*AuthorizeClustersBrokerToDeveloperInput) ProtoMessage()    {}
func (*AuthorizeClustersBrokerToDeveloperInput) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{40}
}

func (m *AuthorizeClustersBrokerToDeveloperInput) GetClusters() []string {
	if m != nil {
		return m.Clusters
	}
	return nil
}

type AuthorizeClustersBrokerToDeveloperOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AuthorizeClustersBrokerToDeveloperOutput) Reset() {
	*m = AuthorizeClustersBrokerToDeveloperOutput{}
}
func (m *AuthorizeClustersBrokerToDeveloperOutput) String() string { return proto.CompactTextString(m) }
func (*AuthorizeClustersBrokerToDeveloperOutput) ProtoMessage()    {}
func (*AuthorizeClustersBrokerToDeveloperOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{41}
}

func (m *AuthorizeClustersBrokerToDeveloperOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *AuthorizeClustersBrokerToDeveloperOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *AuthorizeClustersBrokerToDeveloperOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type RevokeClustersBrokerFromDeveloperInput struct {
	Clusters []string `protobuf:"bytes,1,rep,name=clusters" json:"clusters,omitempty"`
}

func (m *RevokeClustersBrokerFromDeveloperInput) Reset() {
	*m = RevokeClustersBrokerFromDeveloperInput{}
}
func (m *RevokeClustersBrokerFromDeveloperInput) String() string { return proto.CompactTextString(m) }
func (*RevokeClustersBrokerFromDeveloperInput) ProtoMessage()    {}
func (*RevokeClustersBrokerFromDeveloperInput) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{42}
}

func (m *RevokeClustersBrokerFromDeveloperInput) GetClusters() []string {
	if m != nil {
		return m.Clusters
	}
	return nil
}

type RevokeClustersBrokerFromDeveloperOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *RevokeClustersBrokerFromDeveloperOutput) Reset() {
	*m = RevokeClustersBrokerFromDeveloperOutput{}
}
func (m *RevokeClustersBrokerFromDeveloperOutput) String() string { return proto.CompactTextString(m) }
func (*RevokeClustersBrokerFromDeveloperOutput) ProtoMessage()    {}
func (*RevokeClustersBrokerFromDeveloperOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{43}
}

func (m *RevokeClustersBrokerFromDeveloperOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *RevokeClustersBrokerFromDeveloperOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *RevokeClustersBrokerFromDeveloperOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ClusterServiceProperties)(nil), "service.ClusterServiceProperties")
	proto.RegisterType((*CreateClusterInput_Conf)(nil), "service.CreateClusterInput_Conf")
	proto.RegisterType((*CreateClusterInput_Conf_Node)(nil), "service.CreateClusterInput_Conf.Node")
	proto.RegisterType((*CreateClusterInput_Conf_Container)(nil), "service.CreateClusterInput_Conf.Container")
	proto.RegisterType((*CreateClusterInput_Conf_Volume)(nil), "service.CreateClusterInput_Conf.Volume")
	proto.RegisterType((*CreateClusterInput_Conf_Service)(nil), "service.CreateClusterInput_Conf.Service")
	proto.RegisterType((*CreateClusterInput_Conf_Command)(nil), "service.CreateClusterInput_Conf.Command")
	proto.RegisterType((*CreateClusterInput)(nil), "service.CreateClusterInput")
	proto.RegisterType((*CreateClusterOutput)(nil), "service.CreateClusterOutput")
	proto.RegisterType((*DescribeClustersInput)(nil), "service.DescribeClustersInput")
	proto.RegisterType((*DescribeClustersOutput)(nil), "service.DescribeClustersOutput")
	proto.RegisterType((*DescribeClusterNodesInput)(nil), "service.DescribeClusterNodesInput")
	proto.RegisterType((*DescribeClusterNodesOutput)(nil), "service.DescribeClusterNodesOutput")
	proto.RegisterType((*StopClustersInput)(nil), "service.StopClustersInput")
	proto.RegisterType((*StopClustersOutput)(nil), "service.StopClustersOutput")
	proto.RegisterType((*StartClustersInput)(nil), "service.StartClustersInput")
	proto.RegisterType((*StartClustersOutput)(nil), "service.StartClustersOutput")
	proto.RegisterType((*DeleteClustersInput)(nil), "service.DeleteClustersInput")
	proto.RegisterType((*DeleteClustersOutput)(nil), "service.DeleteClustersOutput")
	proto.RegisterType((*LeaseInput)(nil), "service.leaseInput")
	proto.RegisterType((*LeaseOutput)(nil), "service.leaseOutput")
	proto.RegisterType((*AddClusterNodesInput)(nil), "service.AddClusterNodesInput")
	proto.RegisterType((*AddClusterNodesOutput)(nil), "service.AddClusterNodesOutput")
	proto.RegisterType((*DeleteClusterNodesInput)(nil), "service.DeleteClusterNodesInput")
	proto.RegisterType((*DeleteClusterNodesOutput)(nil), "service.DeleteClusterNodesOutput")
	proto.RegisterType((*ResizeClusterInput)(nil), "service.ResizeClusterInput")
	proto.RegisterType((*ResizeClusterOutput)(nil), "service.ResizeClusterOutput")
	proto.RegisterType((*ChangeClusterVxnetInput)(nil), "service.ChangeClusterVxnetInput")
	proto.RegisterType((*ChangeClusterVxnetOutput)(nil), "service.ChangeClusterVxnetOutput")
	proto.RegisterType((*SuspendClustersInput)(nil), "service.SuspendClustersInput")
	proto.RegisterType((*SuspendClustersOutput)(nil), "service.SuspendClustersOutput")
	proto.RegisterType((*UpdateClusterEnvironmentInput)(nil), "service.UpdateClusterEnvironmentInput")
	proto.RegisterType((*UpdateClusterEnvironmentOutput)(nil), "service.UpdateClusterEnvironmentOutput")
	proto.RegisterType((*ModifyClusterAttributesInput)(nil), "service.ModifyClusterAttributesInput")
	proto.RegisterType((*ModifyClusterAttributesOutput)(nil), "service.ModifyClusterAttributesOutput")
	proto.RegisterType((*ModifyClusterNodeAttributesInput)(nil), "service.ModifyClusterNodeAttributesInput")
	proto.RegisterType((*ModifyClusterNodeAttributesOutput)(nil), "service.ModifyClusterNodeAttributesOutput")
	proto.RegisterType((*GetClustersStatsInput)(nil), "service.GetClustersStatsInput")
	proto.RegisterType((*GetClustersStatsOutput)(nil), "service.GetClustersStatsOutput")
	proto.RegisterType((*DescribeClusterUsersInput)(nil), "service.DescribeClusterUsersInput")
	proto.RegisterType((*DescribeClusterUsersOutput)(nil), "service.DescribeClusterUsersOutput")
	proto.RegisterType((*RestartClusterServiceInput)(nil), "service.RestartClusterServiceInput")
	proto.RegisterType((*RestartClusterServiceOutput)(nil), "service.RestartClusterServiceOutput")
	proto.RegisterType((*UpgradeClustersInput)(nil), "service.UpgradeClustersInput")
	proto.RegisterType((*UpgradeClustersOutput)(nil), "service.UpgradeClustersOutput")
	proto.RegisterType((*AuthorizeClustersBrokerToDeveloperInput)(nil), "service.AuthorizeClustersBrokerToDeveloperInput")
	proto.RegisterType((*AuthorizeClustersBrokerToDeveloperOutput)(nil), "service.AuthorizeClustersBrokerToDeveloperOutput")
	proto.RegisterType((*RevokeClustersBrokerFromDeveloperInput)(nil), "service.RevokeClustersBrokerFromDeveloperInput")
	proto.RegisterType((*RevokeClustersBrokerFromDeveloperOutput)(nil), "service.RevokeClustersBrokerFromDeveloperOutput")
}

type ClusterServiceInterface interface {
	CreateCluster(in *CreateClusterInput) (out *CreateClusterOutput, err error)
	DescribeClusters(in *DescribeClustersInput) (out *DescribeClustersOutput, err error)
	DescribeClusterNodes(in *DescribeClusterNodesInput) (out *DescribeClusterNodesOutput, err error)
	StopClusters(in *StopClustersInput) (out *StopClustersOutput, err error)
	StartClusters(in *StartClustersInput) (out *StartClustersOutput, err error)
	DeleteClusters(in *DeleteClustersInput) (out *DeleteClustersOutput, err error)
	Lease(in *LeaseInput) (out *LeaseOutput, err error)
	AddClusterNodes(in *AddClusterNodesInput) (out *AddClusterNodesOutput, err error)
	DeleteClusterNodes(in *DeleteClusterNodesInput) (out *DeleteClusterNodesOutput, err error)
	ResizeCluster(in *ResizeClusterInput) (out *ResizeClusterOutput, err error)
	ChangeClusterVxnet(in *ChangeClusterVxnetInput) (out *ChangeClusterVxnetOutput, err error)
	SuspendClusters(in *SuspendClustersInput) (out *SuspendClustersOutput, err error)
	UpdateClusterEnvironment(in *UpdateClusterEnvironmentInput) (out *UpdateClusterEnvironmentOutput, err error)
	ModifyClusterAttributes(in *ModifyClusterAttributesInput) (out *ModifyClusterAttributesOutput, err error)
	ModifyClusterNodeAttributes(in *ModifyClusterNodeAttributesInput) (out *ModifyClusterNodeAttributesOutput, err error)
	GetClustersStats(in *GetClustersStatsInput) (out *GetClustersStatsOutput, err error)
	DescribeClusterUsers(in *DescribeClusterUsersInput) (out *DescribeClusterUsersOutput, err error)
	RestartClusterService(in *RestartClusterServiceInput) (out *RestartClusterServiceOutput, err error)
	UpgradeClusters(in *UpgradeClustersInput) (out *UpgradeClustersOutput, err error)
	AuthorizeClustersBrokerToDeveloper(in *AuthorizeClustersBrokerToDeveloperInput) (out *AuthorizeClustersBrokerToDeveloperOutput, err error)
	RevokeClustersBrokerFromDeveloper(in *RevokeClustersBrokerFromDeveloperInput) (out *RevokeClustersBrokerFromDeveloperOutput, err error)
}

type ClusterService struct {
	Config           *config.Config
	Properties       *ClusterServiceProperties
	LastResponseBody string
}

func NewClusterService(conf *config.Config, zone string) (p *ClusterService) {
	return &ClusterService{
		Config:     conf,
		Properties: &ClusterServiceProperties{Zone: zone},
	}
}

func (s *QingCloudService) Cluster(zone string) (*ClusterService, error) {
	properties := &ClusterServiceProperties{
		Zone: zone,
	}

	return &ClusterService{Config: s.Config, Properties: properties}, nil
}

func (p *ClusterService) CreateCluster(in *CreateClusterInput) (out *CreateClusterOutput, err error) {
	if in == nil {
		in = &CreateClusterInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateCluster",
		RequestMethod: "GET", // GET or POST
	}

	x := &CreateClusterOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *CreateClusterInput) Validate() error {
	return nil
}

func (p *ClusterService) DescribeClusters(in *DescribeClustersInput) (out *DescribeClustersOutput, err error) {
	if in == nil {
		in = &DescribeClustersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeClusters",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeClustersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DescribeClustersInput) Validate() error {
	return nil
}

func (p *ClusterService) DescribeClusterNodes(in *DescribeClusterNodesInput) (out *DescribeClusterNodesOutput, err error) {
	if in == nil {
		in = &DescribeClusterNodesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeClusterNodes",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeClusterNodesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DescribeClusterNodesInput) Validate() error {
	return nil
}

func (p *ClusterService) StopClusters(in *StopClustersInput) (out *StopClustersOutput, err error) {
	if in == nil {
		in = &StopClustersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "StopClusters",
		RequestMethod: "GET", // GET or POST
	}

	x := &StopClustersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *StopClustersInput) Validate() error {
	return nil
}

func (p *ClusterService) StartClusters(in *StartClustersInput) (out *StartClustersOutput, err error) {
	if in == nil {
		in = &StartClustersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "StartClusters",
		RequestMethod: "GET", // GET or POST
	}

	x := &StartClustersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *StartClustersInput) Validate() error {
	return nil
}

func (p *ClusterService) DeleteClusters(in *DeleteClustersInput) (out *DeleteClustersOutput, err error) {
	if in == nil {
		in = &DeleteClustersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteClusters",
		RequestMethod: "GET", // GET or POST
	}

	x := &DeleteClustersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DeleteClustersInput) Validate() error {
	return nil
}

func (p *ClusterService) Lease(in *LeaseInput) (out *LeaseOutput, err error) {
	if in == nil {
		in = &LeaseInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "Lease",
		RequestMethod: "GET", // GET or POST
	}

	x := &LeaseOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *LeaseInput) Validate() error {
	return nil
}

func (p *ClusterService) AddClusterNodes(in *AddClusterNodesInput) (out *AddClusterNodesOutput, err error) {
	if in == nil {
		in = &AddClusterNodesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "AddClusterNodes",
		RequestMethod: "GET", // GET or POST
	}

	x := &AddClusterNodesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *AddClusterNodesInput) Validate() error {
	return nil
}

func (p *ClusterService) DeleteClusterNodes(in *DeleteClusterNodesInput) (out *DeleteClusterNodesOutput, err error) {
	if in == nil {
		in = &DeleteClusterNodesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteClusterNodes",
		RequestMethod: "GET", // GET or POST
	}

	x := &DeleteClusterNodesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DeleteClusterNodesInput) Validate() error {
	return nil
}

func (p *ClusterService) ResizeCluster(in *ResizeClusterInput) (out *ResizeClusterOutput, err error) {
	if in == nil {
		in = &ResizeClusterInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ResizeCluster",
		RequestMethod: "GET", // GET or POST
	}

	x := &ResizeClusterOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *ResizeClusterInput) Validate() error {
	return nil
}

func (p *ClusterService) ChangeClusterVxnet(in *ChangeClusterVxnetInput) (out *ChangeClusterVxnetOutput, err error) {
	if in == nil {
		in = &ChangeClusterVxnetInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ChangeClusterVxnet",
		RequestMethod: "GET", // GET or POST
	}

	x := &ChangeClusterVxnetOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *ChangeClusterVxnetInput) Validate() error {
	return nil
}

func (p *ClusterService) SuspendClusters(in *SuspendClustersInput) (out *SuspendClustersOutput, err error) {
	if in == nil {
		in = &SuspendClustersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "SuspendClusters",
		RequestMethod: "GET", // GET or POST
	}

	x := &SuspendClustersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SuspendClustersInput) Validate() error {
	return nil
}

func (p *ClusterService) UpdateClusterEnvironment(in *UpdateClusterEnvironmentInput) (out *UpdateClusterEnvironmentOutput, err error) {
	if in == nil {
		in = &UpdateClusterEnvironmentInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "UpdateClusterEnvironment",
		RequestMethod: "GET", // GET or POST
	}

	x := &UpdateClusterEnvironmentOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *UpdateClusterEnvironmentInput) Validate() error {
	return nil
}

func (p *ClusterService) ModifyClusterAttributes(in *ModifyClusterAttributesInput) (out *ModifyClusterAttributesOutput, err error) {
	if in == nil {
		in = &ModifyClusterAttributesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifyClusterAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &ModifyClusterAttributesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *ModifyClusterAttributesInput) Validate() error {
	return nil
}

func (p *ClusterService) ModifyClusterNodeAttributes(in *ModifyClusterNodeAttributesInput) (out *ModifyClusterNodeAttributesOutput, err error) {
	if in == nil {
		in = &ModifyClusterNodeAttributesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifyClusterNodeAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &ModifyClusterNodeAttributesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *ModifyClusterNodeAttributesInput) Validate() error {
	return nil
}

func (p *ClusterService) GetClustersStats(in *GetClustersStatsInput) (out *GetClustersStatsOutput, err error) {
	if in == nil {
		in = &GetClustersStatsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "GetClustersStats",
		RequestMethod: "GET", // GET or POST
	}

	x := &GetClustersStatsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *GetClustersStatsInput) Validate() error {
	return nil
}

func (p *ClusterService) DescribeClusterUsers(in *DescribeClusterUsersInput) (out *DescribeClusterUsersOutput, err error) {
	if in == nil {
		in = &DescribeClusterUsersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeClusterUsers",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeClusterUsersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DescribeClusterUsersInput) Validate() error {
	return nil
}

func (p *ClusterService) RestartClusterService(in *RestartClusterServiceInput) (out *RestartClusterServiceOutput, err error) {
	if in == nil {
		in = &RestartClusterServiceInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "RestartClusterService",
		RequestMethod: "GET", // GET or POST
	}

	x := &RestartClusterServiceOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RestartClusterServiceInput) Validate() error {
	return nil
}

func (p *ClusterService) UpgradeClusters(in *UpgradeClustersInput) (out *UpgradeClustersOutput, err error) {
	if in == nil {
		in = &UpgradeClustersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "UpgradeClusters",
		RequestMethod: "GET", // GET or POST
	}

	x := &UpgradeClustersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *UpgradeClustersInput) Validate() error {
	return nil
}

func (p *ClusterService) AuthorizeClustersBrokerToDeveloper(in *AuthorizeClustersBrokerToDeveloperInput) (out *AuthorizeClustersBrokerToDeveloperOutput, err error) {
	if in == nil {
		in = &AuthorizeClustersBrokerToDeveloperInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "AuthorizeClustersBrokerToDeveloper",
		RequestMethod: "GET", // GET or POST
	}

	x := &AuthorizeClustersBrokerToDeveloperOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *AuthorizeClustersBrokerToDeveloperInput) Validate() error {
	return nil
}

func (p *ClusterService) RevokeClustersBrokerFromDeveloper(in *RevokeClustersBrokerFromDeveloperInput) (out *RevokeClustersBrokerFromDeveloperOutput, err error) {
	if in == nil {
		in = &RevokeClustersBrokerFromDeveloperInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "RevokeClustersBrokerFromDeveloper",
		RequestMethod: "GET", // GET or POST
	}

	x := &RevokeClustersBrokerFromDeveloperOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RevokeClustersBrokerFromDeveloperInput) Validate() error {
	return nil
}

func init() { proto.RegisterFile("cluster.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 1837 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x59, 0xdd, 0x72, 0xdc, 0x48,
	0x15, 0xae, 0xf1, 0xfc, 0xd9, 0x67, 0xf2, 0x47, 0x67, 0x9c, 0xcc, 0xca, 0x71, 0xd6, 0x56, 0x48,
	0x62, 0xb6, 0xc0, 0x49, 0x0c, 0x45, 0x41, 0xf8, 0xab, 0x64, 0x62, 0x16, 0xa7, 0x6a, 0x17, 0xaf,
	0x86, 0xa4, 0x6a, 0xb9, 0x51, 0xc9, 0x52, 0x7b, 0x22, 0x3c, 0x52, 0x0b, 0x75, 0x6b, 0xc0, 0x79,
	0x00, 0x28, 0xf2, 0x04, 0xbc, 0x00, 0x37, 0x3c, 0x01, 0x14, 0xd7, 0xdc, 0xf0, 0x32, 0x54, 0xae,
	0xb9, 0xa1, 0xfa, 0x47, 0x52, 0x4b, 0x23, 0xcd, 0x8c, 0x2f, 0x54, 0x7b, 0x33, 0xa5, 0x3e, 0xdd,
	0xe7, 0xff, 0xf4, 0xd1, 0x77, 0x34, 0x70, 0xdd, 0x9d, 0x25, 0x94, 0xe1, 0xf8, 0x30, 0x8a, 0x09,
	0x23, 0xa8, 0x4f, 0x71, 0x3c, 0xf7, 0x5d, 0x6c, 0x0c, 0xd8, 0x65, 0x84, 0xa9, 0xa4, 0x1a, 0xbb,
	0xbf, 0xf7, 0xc3, 0xa9, 0x3b, 0x23, 0x89, 0x67, 0x53, 0xef, 0xc2, 0x8e, 0x93, 0x19, 0x7e, 0xc2,
	0x7f, 0xe4, 0xb6, 0x79, 0x08, 0xa3, 0xb1, 0x94, 0x32, 0x91, 0xdc, 0xa7, 0x31, 0x89, 0x70, 0xcc,
	0x7c, 0x4c, 0x11, 0x82, 0xce, 0x7b, 0x12, 0xe2, 0x51, 0x6b, 0xaf, 0x75, 0xb0, 0x65, 0x89, 0x67,
	0xf3, 0x7f, 0x3d, 0xb8, 0x3b, 0x8e, 0xb1, 0xc3, 0xb0, 0x62, 0x3b, 0x09, 0xa3, 0x84, 0xd9, 0x63,
	0x12, 0x9e, 0xa3, 0x6d, 0xe8, 0x39, 0x51, 0x64, 0xfb, 0x9e, 0xe2, 0xe8, 0x3a, 0x51, 0x74, 0xe2,
	0xa1, 0x4f, 0x61, 0xc0, 0xc9, 0x73, 0x1c, 0x53, 0x9f, 0x84, 0xa3, 0x0d, 0xb1, 0x07, 0x4e, 0x14,
	0xbd, 0x95, 0x14, 0x34, 0x84, 0xee, 0xfc, 0x8f, 0x21, 0x66, 0xa3, 0xb6, 0x64, 0x13, 0x0b, 0xf4,
	0x63, 0xe8, 0x84, 0xc4, 0xc3, 0xa3, 0xce, 0x5e, 0xeb, 0x60, 0x70, 0xf4, 0xf0, 0x50, 0x79, 0x77,
	0x58, 0xa3, 0xfd, 0xf0, 0x4b, 0xe2, 0x61, 0x4b, 0xb0, 0x18, 0xff, 0xdd, 0x80, 0x0e, 0x5f, 0xa2,
	0x5f, 0xc1, 0x96, 0x4b, 0x42, 0xe6, 0xf8, 0x21, 0x8e, 0x85, 0x51, 0x83, 0xa3, 0xcf, 0x56, 0x0a,
	0x1a, 0xa7, 0x1c, 0x56, 0xce, 0x8c, 0x1e, 0xc2, 0x0d, 0x3f, 0xa4, 0xcc, 0x09, 0x5d, 0x6c, 0xbb,
	0x33, 0x87, 0x52, 0xe1, 0x47, 0xd7, 0xba, 0x9e, 0x52, 0xc7, 0x9c, 0xc8, 0x5d, 0x71, 0x49, 0x12,
	0x4a, 0x57, 0xba, 0x96, 0x5c, 0xa0, 0x5b, 0xd0, 0x76, 0xa3, 0x44, 0x78, 0xd2, 0xb5, 0xf8, 0x23,
	0xba, 0x03, 0xbd, 0x00, 0x07, 0x24, 0xbe, 0x1c, 0x75, 0x05, 0x51, 0xad, 0xd0, 0x2f, 0xa0, 0x37,
	0x27, 0xb3, 0x24, 0xc0, 0xa3, 0x9e, 0xb0, 0xf6, 0xf1, 0x4a, 0x6b, 0xdf, 0x8a, 0xe3, 0x96, 0x62,
	0x43, 0xcf, 0x60, 0x9b, 0x73, 0xe0, 0xd8, 0xf6, 0x3d, 0x3b, 0x89, 0x22, 0x1c, 0xdb, 0x67, 0x24,
	0x09, 0xbd, 0x51, 0x5f, 0xe8, 0x41, 0x72, 0xf3, 0xc4, 0x7b, 0xc3, 0xb7, 0x5e, 0xf2, 0x1d, 0xf4,
	0x12, 0xd2, 0xca, 0x19, 0x6d, 0x0a, 0xa5, 0x07, 0x2b, 0x95, 0xaa, 0x5a, 0xb1, 0xb2, 0x92, 0x3b,
	0x81, 0xad, 0x2c, 0x6c, 0xbc, 0x6e, 0x78, 0x05, 0xa6, 0x75, 0xc3, 0x9f, 0x79, 0x60, 0xfc, 0xc0,
	0x99, 0x62, 0x95, 0x7e, 0xb9, 0xc8, 0x2a, 0xac, 0x9d, 0x57, 0x98, 0x41, 0xa1, 0x27, 0x7d, 0xe2,
	0xbb, 0xd4, 0x7f, 0x2f, 0xe5, 0x74, 0x2d, 0xf1, 0xcc, 0x8b, 0x29, 0xe0, 0x31, 0xb5, 0x23, 0xe2,
	0x87, 0x2c, 0x2d, 0x26, 0x41, 0x3a, 0xe5, 0x14, 0x74, 0x1f, 0xe0, 0xdc, 0x9f, 0x61, 0x7a, 0x49,
	0x19, 0x0e, 0x94, 0x60, 0x8d, 0x22, 0x32, 0x24, 0xf2, 0xd7, 0x51, 0x19, 0xe2, 0x0b, 0xe3, 0xcf,
	0x2d, 0xe8, 0x2b, 0xa7, 0xd0, 0xcf, 0xa1, 0x4b, 0x99, 0x13, 0x33, 0x55, 0x30, 0x07, 0x6b, 0x14,
	0x4c, 0x10, 0x38, 0xa1, 0x67, 0x49, 0x36, 0xf4, 0x53, 0xe8, 0x50, 0x46, 0x22, 0x61, 0xdb, 0x55,
	0xd8, 0x05, 0x97, 0xb1, 0x03, 0x7d, 0x45, 0x10, 0x65, 0x13, 0xa4, 0x97, 0x89, 0x3f, 0x9a, 0x3f,
	0x00, 0xb4, 0x28, 0x85, 0xc7, 0xc9, 0x25, 0xe1, 0x79, 0x1a, 0x6f, 0xfe, 0xfc, 0x1c, 0x3e, 0x7c,
	0xec, 0xf4, 0x24, 0xdd, 0x3c, 0x83, 0xdb, 0x05, 0xae, 0x5f, 0x27, 0x8c, 0xb3, 0xdd, 0x81, 0x9e,
	0xe3, 0x32, 0x7e, 0x25, 0x25, 0xa3, 0x5a, 0xa1, 0x4f, 0x60, 0x33, 0xc6, 0xcc, 0x76, 0xf9, 0xe5,
	0x93, 0x45, 0xde, 0x8f, 0x31, 0x1b, 0xf3, 0xfb, 0x34, 0x82, 0x7e, 0x80, 0x29, 0xe5, 0x79, 0x94,
	0x91, 0x4d, 0x97, 0xe6, 0xbf, 0x5b, 0xb0, 0xfd, 0x0a, 0x53, 0x37, 0xf6, 0xcf, 0x52, 0x35, 0x54,
	0x5a, 0x67, 0xc0, 0xa6, 0xea, 0x53, 0x74, 0xd4, 0xda, 0x6b, 0x1f, 0x6c, 0x59, 0xd9, 0x9a, 0x27,
	0x83, 0xba, 0x24, 0xca, 0xaa, 0x42, 0x2c, 0xb8, 0x3f, 0x31, 0x99, 0x65, 0x55, 0xc1, 0x9f, 0xb5,
	0xde, 0xd2, 0x11, 0x32, 0xaa, 0x7b, 0x4b, 0x57, 0xec, 0x95, 0x7a, 0x4b, 0x42, 0xb9, 0xea, 0x9e,
	0x64, 0x13, 0x8b, 0xe7, 0xa3, 0x0f, 0x1f, 0x3b, 0x43, 0x03, 0x09, 0x75, 0xcf, 0x9d, 0xd9, 0xec,
	0xbb, 0xee, 0xf9, 0x34, 0x98, 0x06, 0xec, 0x27, 0xe6, 0x3f, 0x5b, 0x70, 0xa7, 0xec, 0x47, 0x03,
	0xf1, 0xe2, 0x86, 0x33, 0xc2, 0x9c, 0x99, 0x2d, 0xdb, 0x85, 0x2c, 0x46, 0x10, 0xa4, 0xb1, 0xe8,
	0x19, 0xcf, 0x60, 0xa0, 0xc2, 0x64, 0x53, 0xcc, 0x84, 0x67, 0x83, 0xa3, 0x5b, 0x79, 0x31, 0xc9,
	0x3d, 0x0b, 0xdc, 0xb4, 0x7b, 0x33, 0x33, 0x84, 0x4f, 0x4a, 0xa6, 0xf3, 0x26, 0xa8, 0xd2, 0x30,
	0x82, 0xbe, 0x3a, 0xaa, 0xcc, 0x4f, 0x97, 0xe8, 0x41, 0xf6, 0x22, 0xb1, 0x79, 0xf7, 0xe4, 0x9d,
	0x8d, 0x87, 0xea, 0x9a, 0xab, 0xc9, 0xa8, 0xca, 0x89, 0xf9, 0xaf, 0x16, 0x18, 0x55, 0x0a, 0xbf,
	0x91, 0x78, 0x3d, 0x81, 0x4d, 0x6e, 0xbd, 0x16, 0xac, 0xa1, 0x16, 0x2c, 0x27, 0x35, 0xce, 0xea,
	0xf3, 0x53, 0x3c, 0x5a, 0xc7, 0xf0, 0xad, 0x09, 0x23, 0xd1, 0x95, 0x8a, 0xf5, 0x9c, 0xc4, 0x6e,
	0x6a, 0xb4, 0x5c, 0x98, 0x0e, 0x20, 0x5d, 0x4c, 0x13, 0x77, 0xeb, 0x29, 0x57, 0xe1, 0xc4, 0x6c,
	0x6d, 0x53, 0xf9, 0x8d, 0x2f, 0x70, 0x34, 0x61, 0xd5, 0x33, 0xb8, 0xfd, 0x0a, 0xcf, 0x30, 0x5b,
	0xff, 0xba, 0x9b, 0x2e, 0x0c, 0x8b, 0x2c, 0x4d, 0xd8, 0x75, 0x00, 0x30, 0xc3, 0x0e, 0xc5, 0xab,
	0xcd, 0xf9, 0x2d, 0x0c, 0xc4, 0xc9, 0x26, 0xac, 0xf8, 0x7b, 0x0b, 0x86, 0x2f, 0x3c, 0xef, 0x2a,
	0xf7, 0x70, 0x17, 0x40, 0x54, 0xb0, 0xac, 0x70, 0xa9, 0x69, 0x8b, 0x53, 0x64, 0x81, 0xef, 0x80,
	0x58, 0xd8, 0xda, 0x35, 0x14, 0x15, 0x6f, 0xf1, 0xf6, 0x98, 0x6e, 0x86, 0x4e, 0x20, 0x11, 0x93,
	0xda, 0xfc, 0xd2, 0x09, 0xc4, 0xdd, 0x89, 0x62, 0x7f, 0xee, 0x30, 0x6c, 0xfb, 0x11, 0x4d, 0x9b,
	0xa4, 0x22, 0x9d, 0x44, 0xd4, 0xf4, 0x60, 0xbb, 0x64, 0x6b, 0x13, 0x21, 0xb1, 0xe1, 0x6e, 0x21,
	0xfb, 0x6b, 0x05, 0x65, 0x08, 0x5d, 0xbd, 0x29, 0xc9, 0x45, 0x7e, 0x15, 0xdb, 0xfa, 0x55, 0x9c,
	0xc2, 0x68, 0x51, 0x41, 0x13, 0x9e, 0xfc, 0xb5, 0x05, 0xc8, 0xc2, 0x1c, 0x8f, 0x14, 0xde, 0xc3,
	0xf5, 0x5e, 0x14, 0x72, 0xb7, 0x51, 0xca, 0x9d, 0x42, 0x87, 0xed, 0x2a, 0x74, 0xd8, 0x29, 0xa0,
	0xc3, 0x7d, 0xb8, 0x46, 0x19, 0x89, 0x9d, 0x29, 0xb6, 0x05, 0x30, 0x92, 0xd8, 0x71, 0xa0, 0x68,
	0x13, 0xff, 0x3d, 0xe6, 0x37, 0xbf, 0x60, 0x59, 0x13, 0xee, 0x7f, 0x6c, 0xc1, 0xdd, 0xf1, 0x3b,
	0x27, 0x9c, 0xa6, 0x4a, 0xde, 0x72, 0xc0, 0xbe, 0x46, 0x26, 0x25, 0xca, 0xdf, 0xd0, 0x51, 0xfe,
	0x57, 0xc5, 0xda, 0x6c, 0x8b, 0xce, 0xfd, 0x34, 0xef, 0xdc, 0xd5, 0x6a, 0x0e, 0x4f, 0xb3, 0xe2,
	0x3d, 0x0e, 0x59, 0x7c, 0xa9, 0x57, 0x33, 0x57, 0xc4, 0xe3, 0x4c, 0x53, 0xa4, 0x20, 0x16, 0xc6,
	0xcf, 0xe0, 0x66, 0x89, 0x89, 0x07, 0xfe, 0x02, 0x5f, 0xa6, 0xf8, 0xea, 0x02, 0x5f, 0x0a, 0x1b,
	0x9d, 0x59, 0x92, 0xe1, 0x11, 0xb1, 0x78, 0xbe, 0xf1, 0xa3, 0x16, 0xaf, 0xad, 0x45, 0x5b, 0x9a,
	0x08, 0xee, 0x11, 0x0c, 0x27, 0x09, 0x8d, 0x70, 0xe8, 0xad, 0xdf, 0x57, 0x3d, 0xd8, 0x2e, 0xf1,
	0x34, 0x61, 0xd9, 0x7f, 0x5a, 0xb0, 0xfb, 0x26, 0xf2, 0x72, 0x1c, 0x79, 0x1c, 0xce, 0xfd, 0x98,
	0x84, 0x01, 0x0e, 0xd7, 0x49, 0xbe, 0xcc, 0xc9, 0x86, 0x96, 0x13, 0xf4, 0x02, 0xda, 0x38, 0x9c,
	0xab, 0xa4, 0x3f, 0xc9, 0x92, 0xbe, 0x54, 0xc9, 0xe1, 0x71, 0x38, 0x97, 0x39, 0xe7, 0xbc, 0xc6,
	0x0f, 0x61, 0x33, 0x25, 0x5c, 0x29, 0x9f, 0x01, 0xdc, 0xaf, 0x53, 0xd3, 0x44, 0xec, 0x42, 0xb8,
	0xf7, 0x05, 0xf1, 0xfc, 0xf3, 0x4b, 0xa5, 0xee, 0x05, 0x63, 0xb1, 0x7f, 0x96, 0xb0, 0xd5, 0x0d,
	0x10, 0x41, 0x47, 0x34, 0x75, 0xe9, 0x81, 0x78, 0x46, 0x7b, 0x30, 0xf0, 0x04, 0xee, 0x8a, 0x84,
	0x7d, 0x52, 0x97, 0x4e, 0x32, 0x67, 0xb0, 0x5b, 0xa3, 0xaf, 0x09, 0xef, 0x28, 0xec, 0x15, 0xb4,
	0xf1, 0xc6, 0xbb, 0xbe, 0x87, 0xfb, 0x70, 0x4d, 0xc7, 0x9f, 0xca, 0xd3, 0x81, 0x06, 0x3f, 0xb3,
	0x20, 0xb4, 0xf3, 0x20, 0x98, 0x11, 0xec, 0x2f, 0x51, 0xda, 0x84, 0x9b, 0xdf, 0x83, 0xed, 0xcf,
	0x71, 0x86, 0xa9, 0x26, 0xcc, 0x61, 0xca, 0xb7, 0x21, 0x74, 0xf9, 0xe8, 0x9a, 0x5e, 0x4c, 0xb9,
	0x30, 0x31, 0xdc, 0x29, 0x1f, 0x6f, 0xc2, 0xaa, 0xbf, 0xb5, 0x16, 0x60, 0xff, 0x1b, 0x9a, 0xb5,
	0x8d, 0x4a, 0xd3, 0x78, 0x3c, 0x9d, 0x28, 0x4a, 0x6f, 0xa3, 0x78, 0xe6, 0x69, 0xd0, 0x46, 0x29,
	0xd9, 0x8a, 0xb7, 0xac, 0x41, 0x3e, 0x4b, 0xd1, 0x7c, 0x98, 0xea, 0x68, 0xc3, 0x14, 0x7a, 0x08,
	0x37, 0xb2, 0x49, 0x85, 0x39, 0x2c, 0x49, 0x11, 0x46, 0x3a, 0x55, 0x4c, 0x04, 0xd1, 0xf4, 0x17,
	0x86, 0x05, 0x61, 0x66, 0x13, 0x21, 0x79, 0x0d, 0x86, 0x85, 0xa9, 0x06, 0x80, 0xd5, 0x68, 0xbf,
	0xc6, 0x5d, 0xd3, 0xde, 0xd0, 0x72, 0xc8, 0xf9, 0x1d, 0xec, 0x54, 0xca, 0x6a, 0xc2, 0xee, 0x09,
	0x0c, 0xdf, 0x44, 0xd3, 0xd8, 0xf1, 0xae, 0x30, 0x42, 0xaf, 0xfa, 0xba, 0xc6, 0x5f, 0x0e, 0x25,
	0xa1, 0x4d, 0x98, 0x7e, 0x0c, 0x8f, 0x5f, 0x24, 0xec, 0x1d, 0x89, 0x73, 0xe8, 0x41, 0x5f, 0xc6,
	0xe4, 0x02, 0xc7, 0xbf, 0x21, 0xaf, 0xf0, 0x1c, 0xcf, 0x48, 0x94, 0xc2, 0xa4, 0x65, 0x6f, 0xb2,
	0x3f, 0xc0, 0xc1, 0x6a, 0x31, 0x4d, 0xd8, 0xff, 0x0a, 0x1e, 0x59, 0x78, 0x4e, 0x2e, 0x4a, 0x5a,
	0x7f, 0x19, 0x93, 0xe0, 0x0a, 0xe6, 0xcf, 0xe1, 0xf1, 0x4a, 0x29, 0x0d, 0x58, 0x7f, 0xf4, 0x8f,
	0x9b, 0x70, 0xa3, 0x58, 0x9e, 0xe8, 0x35, 0x5c, 0x2f, 0x7c, 0xf4, 0x41, 0x3b, 0x4b, 0x3e, 0x44,
	0x19, 0xf7, 0xaa, 0x37, 0x95, 0xad, 0x13, 0xb8, 0x55, 0xfe, 0x26, 0x82, 0xee, 0x67, 0x1c, 0x95,
	0x9f, 0x7d, 0x8c, 0x4f, 0x6b, 0xf7, 0x95, 0x50, 0x9b, 0x0f, 0x83, 0x8b, 0x1f, 0x0f, 0x90, 0x59,
	0xc7, 0x98, 0xcf, 0x0b, 0xc6, 0x83, 0xa5, 0x67, 0x94, 0x82, 0xcf, 0xe1, 0x9a, 0x3e, 0x99, 0x23,
	0x23, 0x63, 0x5a, 0x98, 0xfb, 0x8d, 0x9d, 0xca, 0x3d, 0x25, 0xe8, 0x35, 0x5c, 0x2f, 0x4c, 0xd3,
	0x48, 0x3f, 0x5d, 0x9e, 0xcb, 0xb5, 0x50, 0x56, 0x8d, 0xe0, 0x5f, 0xc0, 0x8d, 0xe2, 0x08, 0x8c,
	0xee, 0x69, 0xbe, 0x2c, 0x8c, 0xd3, 0xc6, 0x6e, 0xcd, 0xae, 0x12, 0x77, 0x04, 0x5d, 0x31, 0xc2,
	0xa2, 0xdb, 0xd9, 0xb9, 0x7c, 0xf8, 0x35, 0x86, 0x45, 0xa2, 0xe2, 0x39, 0x85, 0x9b, 0xa5, 0x69,
	0x0f, 0xe5, 0x5a, 0xaa, 0x66, 0x56, 0xe3, 0x7e, 0xdd, 0xb6, 0x92, 0xf8, 0x35, 0xa0, 0xc5, 0xc1,
	0x0b, 0xed, 0x55, 0x9b, 0xae, 0xc9, 0xdd, 0x5f, 0x72, 0x22, 0x8f, 0x7d, 0x61, 0x9e, 0xd1, 0x62,
	0xbf, 0x38, 0x81, 0x69, 0xb1, 0xaf, 0x1a, 0x82, 0xbe, 0x06, 0xb4, 0x88, 0xe1, 0x35, 0x33, 0x6b,
	0x86, 0x0d, 0xcd, 0xcc, 0xda, 0x11, 0xe0, 0x14, 0x6e, 0x96, 0x10, 0xb8, 0x16, 0xd3, 0x2a, 0x3c,
	0xaf, 0xc5, 0xb4, 0x1a, 0xba, 0x5f, 0xc0, 0xa8, 0x0e, 0xa0, 0xa2, 0x47, 0xeb, 0x41, 0x65, 0xe3,
	0xf1, 0xca, 0x73, 0x4a, 0xd9, 0x3b, 0xb8, 0x5b, 0x03, 0x17, 0x51, 0xfe, 0xc7, 0xcb, 0x32, 0x00,
	0x6b, 0x3c, 0x5a, 0x75, 0x4c, 0x69, 0x62, 0xb0, 0xb3, 0x04, 0xb5, 0xa1, 0xef, 0x54, 0x8b, 0xa9,
	0x00, 0x94, 0xc6, 0x67, 0xeb, 0x1c, 0xcd, 0x1b, 0x58, 0x19, 0x8a, 0x69, 0x0d, 0xac, 0x12, 0xd4,
	0x69, 0x0d, 0xac, 0x06, 0xc5, 0x2d, 0x36, 0x30, 0x01, 0x68, 0xea, 0x1b, 0x58, 0x0e, 0xcb, 0xea,
	0x1b, 0x98, 0x8e, 0x89, 0xce, 0x60, 0xbb, 0x12, 0x7a, 0xa0, 0x07, 0x7a, 0x99, 0xd7, 0xc0, 0x1c,
	0xe3, 0xdb, 0xcb, 0x0f, 0xe5, 0x85, 0x5b, 0x42, 0x07, 0x5a, 0xe1, 0x56, 0x81, 0x11, 0xad, 0x70,
	0xab, 0x61, 0xc5, 0x5f, 0x5a, 0x60, 0xae, 0x7e, 0x87, 0xa3, 0x7c, 0xc6, 0x5f, 0x13, 0x37, 0x18,
	0xcf, 0xae, 0xc0, 0xa1, 0x6c, 0xf9, 0x53, 0x0b, 0xf6, 0x57, 0xbe, 0x90, 0xd1, 0x13, 0x2d, 0x52,
	0xeb, 0x40, 0x00, 0xe3, 0xe9, 0xfa, 0x0c, 0xd2, 0x10, 0x43, 0xfc, 0xe1, 0x80, 0xb6, 0xbe, 0xf2,
	0xc3, 0xe9, 0x78, 0x46, 0x12, 0xcf, 0xe8, 0x2b, 0x9e, 0xb3, 0x9e, 0xf8, 0x1f, 0xf6, 0xfb, 0xff,
	0x0f, 0x00, 0x00, 0xff, 0xff, 0xad, 0x66, 0x6a, 0x9d, 0xcd, 0x1d, 0x00, 0x00,
}
