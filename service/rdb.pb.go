// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rdb.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/chai2010/qingcloud-go/spec.pb/qingcloud_sdk_rule"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import "github.com/chai2010/qingcloud-go/request/data"

var _ = config.Config{}
var _ = request.Request{}
var _ = data.Operation{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RDBServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *RDBServiceProperties) Reset()                    { *m = RDBServiceProperties{} }
func (m *RDBServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*RDBServiceProperties) ProtoMessage()               {}
func (*RDBServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{0} }

func (m *RDBServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type CreateRDBInput struct {
	Vxnet          string                     `protobuf:"bytes,1,opt,name=vxnet" json:"vxnet,omitempty"`
	RdbEngine      string                     `protobuf:"bytes,2,opt,name=rdb_engine,json=rdbEngine" json:"rdb_engine,omitempty"`
	EngineVersion  string                     `protobuf:"bytes,3,opt,name=engine_version,json=engineVersion" json:"engine_version,omitempty"`
	RdbUsername    string                     `protobuf:"bytes,4,opt,name=rdb_username,json=rdbUsername" json:"rdb_username,omitempty"`
	RdbPassword    string                     `protobuf:"bytes,5,opt,name=rdb_password,json=rdbPassword" json:"rdb_password,omitempty"`
	RdbType        int32                      `protobuf:"varint,6,opt,name=rdb_type,json=rdbType" json:"rdb_type,omitempty"`
	StorageSize    int32                      `protobuf:"varint,7,opt,name=storage_size,json=storageSize" json:"storage_size,omitempty"`
	RdbName        string                     `protobuf:"bytes,8,opt,name=rdb_name,json=rdbName" json:"rdb_name,omitempty"`
	PrivateIps     *CreateRDBInput_PrivateIps `protobuf:"bytes,9,opt,name=private_ips,json=privateIps" json:"private_ips,omitempty"`
	Description    string                     `protobuf:"bytes,10,opt,name=description" json:"description,omitempty"`
	AutoBackupTime int32                      `protobuf:"varint,11,opt,name=auto_backup_time,json=autoBackupTime" json:"auto_backup_time,omitempty"`
}

func (m *CreateRDBInput) Reset()                    { *m = CreateRDBInput{} }
func (m *CreateRDBInput) String() string            { return proto.CompactTextString(m) }
func (*CreateRDBInput) ProtoMessage()               {}
func (*CreateRDBInput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{1} }

func (m *CreateRDBInput) GetVxnet() string {
	if m != nil {
		return m.Vxnet
	}
	return ""
}

func (m *CreateRDBInput) GetRdbEngine() string {
	if m != nil {
		return m.RdbEngine
	}
	return ""
}

func (m *CreateRDBInput) GetEngineVersion() string {
	if m != nil {
		return m.EngineVersion
	}
	return ""
}

func (m *CreateRDBInput) GetRdbUsername() string {
	if m != nil {
		return m.RdbUsername
	}
	return ""
}

func (m *CreateRDBInput) GetRdbPassword() string {
	if m != nil {
		return m.RdbPassword
	}
	return ""
}

func (m *CreateRDBInput) GetRdbType() int32 {
	if m != nil {
		return m.RdbType
	}
	return 0
}

func (m *CreateRDBInput) GetStorageSize() int32 {
	if m != nil {
		return m.StorageSize
	}
	return 0
}

func (m *CreateRDBInput) GetRdbName() string {
	if m != nil {
		return m.RdbName
	}
	return ""
}

func (m *CreateRDBInput) GetPrivateIps() *CreateRDBInput_PrivateIps {
	if m != nil {
		return m.PrivateIps
	}
	return nil
}

func (m *CreateRDBInput) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateRDBInput) GetAutoBackupTime() int32 {
	if m != nil {
		return m.AutoBackupTime
	}
	return 0
}

type CreateRDBInput_PrivateIps struct {
	Master   string `protobuf:"bytes,1,opt,name=master" json:"master,omitempty"`
	Topslave string `protobuf:"bytes,2,opt,name=topslave" json:"topslave,omitempty"`
}

func (m *CreateRDBInput_PrivateIps) Reset()                    { *m = CreateRDBInput_PrivateIps{} }
func (m *CreateRDBInput_PrivateIps) String() string            { return proto.CompactTextString(m) }
func (*CreateRDBInput_PrivateIps) ProtoMessage()               {}
func (*CreateRDBInput_PrivateIps) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{1, 0} }

func (m *CreateRDBInput_PrivateIps) GetMaster() string {
	if m != nil {
		return m.Master
	}
	return ""
}

func (m *CreateRDBInput_PrivateIps) GetTopslave() string {
	if m != nil {
		return m.Topslave
	}
	return ""
}

type CreateRDBOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Rdb     string `protobuf:"bytes,4,opt,name=rdb" json:"rdb,omitempty"`
}

func (m *CreateRDBOutput) Reset()                    { *m = CreateRDBOutput{} }
func (m *CreateRDBOutput) String() string            { return proto.CompactTextString(m) }
func (*CreateRDBOutput) ProtoMessage()               {}
func (*CreateRDBOutput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{2} }

func (m *CreateRDBOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CreateRDBOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CreateRDBOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateRDBOutput) GetRdb() string {
	if m != nil {
		return m.Rdb
	}
	return ""
}

type DescribeRDBsInput struct {
	Rdbs      []string `protobuf:"bytes,1,rep,name=rdbs" json:"rdbs,omitempty"`
	RdbEngine string   `protobuf:"bytes,2,opt,name=rdb_engine,json=rdbEngine" json:"rdb_engine,omitempty"`
	Status    []string `protobuf:"bytes,3,rep,name=status" json:"status,omitempty"`
	RdbName   string   `protobuf:"bytes,4,opt,name=rdb_name,json=rdbName" json:"rdb_name,omitempty"`
	Tags      []string `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	Verbose   int32    `protobuf:"varint,6,opt,name=verbose" json:"verbose,omitempty"`
	Offset    int32    `protobuf:"varint,7,opt,name=offset" json:"offset,omitempty"`
	Limit     int32    `protobuf:"varint,8,opt,name=limit" json:"limit,omitempty"`
}

func (m *DescribeRDBsInput) Reset()                    { *m = DescribeRDBsInput{} }
func (m *DescribeRDBsInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeRDBsInput) ProtoMessage()               {}
func (*DescribeRDBsInput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{3} }

func (m *DescribeRDBsInput) GetRdbs() []string {
	if m != nil {
		return m.Rdbs
	}
	return nil
}

func (m *DescribeRDBsInput) GetRdbEngine() string {
	if m != nil {
		return m.RdbEngine
	}
	return ""
}

func (m *DescribeRDBsInput) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeRDBsInput) GetRdbName() string {
	if m != nil {
		return m.RdbName
	}
	return ""
}

func (m *DescribeRDBsInput) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *DescribeRDBsInput) GetVerbose() int32 {
	if m != nil {
		return m.Verbose
	}
	return 0
}

func (m *DescribeRDBsInput) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeRDBsInput) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type DescribeRDBsOutput struct {
	Action     string                             `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode    int32                              `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message    string                             `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	RouterSet  []*DescribeRDBsOutput_ResponseItem `protobuf:"bytes,4,rep,name=router_set,json=routerSet" json:"router_set,omitempty"`
	TotalCount int32                              `protobuf:"varint,5,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *DescribeRDBsOutput) Reset()                    { *m = DescribeRDBsOutput{} }
func (m *DescribeRDBsOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeRDBsOutput) ProtoMessage()               {}
func (*DescribeRDBsOutput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{4} }

func (m *DescribeRDBsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeRDBsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeRDBsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeRDBsOutput) GetRouterSet() []*DescribeRDBsOutput_ResponseItem {
	if m != nil {
		return m.RouterSet
	}
	return nil
}

func (m *DescribeRDBsOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type DescribeRDBsOutput_ResponseItem struct {
	RdbId               string                                  `protobuf:"bytes,1,opt,name=rdb_id,json=rdbId" json:"rdb_id,omitempty"`
	AutoBackupTime      int32                                   `protobuf:"varint,2,opt,name=auto_backup_time,json=autoBackupTime" json:"auto_backup_time,omitempty"`
	CreateTime          *google_protobuf1.Timestamp             `protobuf:"bytes,3,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	AlarmStatus         string                                  `protobuf:"bytes,4,opt,name=alarm_status,json=alarmStatus" json:"alarm_status,omitempty"`
	RdbName             string                                  `protobuf:"bytes,5,opt,name=rdb_name,json=rdbName" json:"rdb_name,omitempty"`
	MasterIp            string                                  `protobuf:"bytes,6,opt,name=master_ip,json=masterIp" json:"master_ip,omitempty"`
	StatusTime          *google_protobuf1.Timestamp             `protobuf:"bytes,7,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	Vxnets              *DescribeRDBsOutput_ResponseItem_Vxnets `protobuf:"bytes,8,opt,name=vxnets" json:"vxnets,omitempty"`
	Status              string                                  `protobuf:"bytes,9,opt,name=status" json:"status,omitempty"`
	Description         string                                  `protobuf:"bytes,10,opt,name=description" json:"description,omitempty"`
	TransitionStatus    string                                  `protobuf:"bytes,11,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	StorageSize         int32                                   `protobuf:"varint,12,opt,name=storage_size,json=storageSize" json:"storage_size,omitempty"`
	RdbType             int32                                   `protobuf:"varint,13,opt,name=rdb_type,json=rdbType" json:"rdb_type,omitempty"`
	AutoMinorVerUpgrade int32                                   `protobuf:"varint,14,opt,name=auto_minor_ver_upgrade,json=autoMinorVerUpgrade" json:"auto_minor_ver_upgrade,omitempty"`
	LastestSnapshotTime *google_protobuf1.Timestamp             `protobuf:"bytes,15,opt,name=lastest_snapshot_time,json=lastestSnapshotTime" json:"lastest_snapshot_time,omitempty"`
	EngineVersion       string                                  `protobuf:"bytes,16,opt,name=engine_version,json=engineVersion" json:"engine_version,omitempty"`
	RdbEngine           string                                  `protobuf:"bytes,17,opt,name=rdb_engine,json=rdbEngine" json:"rdb_engine,omitempty"`
}

func (m *DescribeRDBsOutput_ResponseItem) Reset()         { *m = DescribeRDBsOutput_ResponseItem{} }
func (m *DescribeRDBsOutput_ResponseItem) String() string { return proto.CompactTextString(m) }
func (*DescribeRDBsOutput_ResponseItem) ProtoMessage()    {}
func (*DescribeRDBsOutput_ResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor17, []int{4, 0}
}

func (m *DescribeRDBsOutput_ResponseItem) GetRdbId() string {
	if m != nil {
		return m.RdbId
	}
	return ""
}

func (m *DescribeRDBsOutput_ResponseItem) GetAutoBackupTime() int32 {
	if m != nil {
		return m.AutoBackupTime
	}
	return 0
}

func (m *DescribeRDBsOutput_ResponseItem) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *DescribeRDBsOutput_ResponseItem) GetAlarmStatus() string {
	if m != nil {
		return m.AlarmStatus
	}
	return ""
}

func (m *DescribeRDBsOutput_ResponseItem) GetRdbName() string {
	if m != nil {
		return m.RdbName
	}
	return ""
}

func (m *DescribeRDBsOutput_ResponseItem) GetMasterIp() string {
	if m != nil {
		return m.MasterIp
	}
	return ""
}

func (m *DescribeRDBsOutput_ResponseItem) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *DescribeRDBsOutput_ResponseItem) GetVxnets() *DescribeRDBsOutput_ResponseItem_Vxnets {
	if m != nil {
		return m.Vxnets
	}
	return nil
}

func (m *DescribeRDBsOutput_ResponseItem) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DescribeRDBsOutput_ResponseItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DescribeRDBsOutput_ResponseItem) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *DescribeRDBsOutput_ResponseItem) GetStorageSize() int32 {
	if m != nil {
		return m.StorageSize
	}
	return 0
}

func (m *DescribeRDBsOutput_ResponseItem) GetRdbType() int32 {
	if m != nil {
		return m.RdbType
	}
	return 0
}

func (m *DescribeRDBsOutput_ResponseItem) GetAutoMinorVerUpgrade() int32 {
	if m != nil {
		return m.AutoMinorVerUpgrade
	}
	return 0
}

func (m *DescribeRDBsOutput_ResponseItem) GetLastestSnapshotTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.LastestSnapshotTime
	}
	return nil
}

func (m *DescribeRDBsOutput_ResponseItem) GetEngineVersion() string {
	if m != nil {
		return m.EngineVersion
	}
	return ""
}

func (m *DescribeRDBsOutput_ResponseItem) GetRdbEngine() string {
	if m != nil {
		return m.RdbEngine
	}
	return ""
}

type DescribeRDBsOutput_ResponseItem_Vxnets struct {
	VxnetName string `protobuf:"bytes,1,opt,name=vxnet_name,json=vxnetName" json:"vxnet_name,omitempty"`
	VxnetId   string `protobuf:"bytes,2,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
}

func (m *DescribeRDBsOutput_ResponseItem_Vxnets) Reset() {
	*m = DescribeRDBsOutput_ResponseItem_Vxnets{}
}
func (m *DescribeRDBsOutput_ResponseItem_Vxnets) String() string { return proto.CompactTextString(m) }
func (*DescribeRDBsOutput_ResponseItem_Vxnets) ProtoMessage()    {}
func (*DescribeRDBsOutput_ResponseItem_Vxnets) Descriptor() ([]byte, []int) {
	return fileDescriptor17, []int{4, 0, 0}
}

func (m *DescribeRDBsOutput_ResponseItem_Vxnets) GetVxnetName() string {
	if m != nil {
		return m.VxnetName
	}
	return ""
}

func (m *DescribeRDBsOutput_ResponseItem_Vxnets) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

type DeleteRDBsInput struct {
	Rdbs []string `protobuf:"bytes,1,rep,name=rdbs" json:"rdbs,omitempty"`
}

func (m *DeleteRDBsInput) Reset()                    { *m = DeleteRDBsInput{} }
func (m *DeleteRDBsInput) String() string            { return proto.CompactTextString(m) }
func (*DeleteRDBsInput) ProtoMessage()               {}
func (*DeleteRDBsInput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{5} }

func (m *DeleteRDBsInput) GetRdbs() []string {
	if m != nil {
		return m.Rdbs
	}
	return nil
}

type DeleteRDBsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *DeleteRDBsOutput) Reset()                    { *m = DeleteRDBsOutput{} }
func (m *DeleteRDBsOutput) String() string            { return proto.CompactTextString(m) }
func (*DeleteRDBsOutput) ProtoMessage()               {}
func (*DeleteRDBsOutput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{6} }

func (m *DeleteRDBsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DeleteRDBsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DeleteRDBsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteRDBsOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type StartRDBsInput struct {
	Rdbs []string `protobuf:"bytes,1,rep,name=rdbs" json:"rdbs,omitempty"`
}

func (m *StartRDBsInput) Reset()                    { *m = StartRDBsInput{} }
func (m *StartRDBsInput) String() string            { return proto.CompactTextString(m) }
func (*StartRDBsInput) ProtoMessage()               {}
func (*StartRDBsInput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{7} }

func (m *StartRDBsInput) GetRdbs() []string {
	if m != nil {
		return m.Rdbs
	}
	return nil
}

type StartRDBsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *StartRDBsOutput) Reset()                    { *m = StartRDBsOutput{} }
func (m *StartRDBsOutput) String() string            { return proto.CompactTextString(m) }
func (*StartRDBsOutput) ProtoMessage()               {}
func (*StartRDBsOutput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{8} }

func (m *StartRDBsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *StartRDBsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *StartRDBsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *StartRDBsOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type StopRDBsInput struct {
	Rdbs []string `protobuf:"bytes,1,rep,name=rdbs" json:"rdbs,omitempty"`
}

func (m *StopRDBsInput) Reset()                    { *m = StopRDBsInput{} }
func (m *StopRDBsInput) String() string            { return proto.CompactTextString(m) }
func (*StopRDBsInput) ProtoMessage()               {}
func (*StopRDBsInput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{9} }

func (m *StopRDBsInput) GetRdbs() []string {
	if m != nil {
		return m.Rdbs
	}
	return nil
}

type StopRDBsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *StopRDBsOutput) Reset()                    { *m = StopRDBsOutput{} }
func (m *StopRDBsOutput) String() string            { return proto.CompactTextString(m) }
func (*StopRDBsOutput) ProtoMessage()               {}
func (*StopRDBsOutput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{10} }

func (m *StopRDBsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *StopRDBsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *StopRDBsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *StopRDBsOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type ResizeRDBsInput struct {
	Rdbs        []string `protobuf:"bytes,1,rep,name=rdbs" json:"rdbs,omitempty"`
	RdbType     int32    `protobuf:"varint,2,opt,name=rdb_type,json=rdbType" json:"rdb_type,omitempty"`
	StorageSize int32    `protobuf:"varint,3,opt,name=storage_size,json=storageSize" json:"storage_size,omitempty"`
}

func (m *ResizeRDBsInput) Reset()                    { *m = ResizeRDBsInput{} }
func (m *ResizeRDBsInput) String() string            { return proto.CompactTextString(m) }
func (*ResizeRDBsInput) ProtoMessage()               {}
func (*ResizeRDBsInput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{11} }

func (m *ResizeRDBsInput) GetRdbs() []string {
	if m != nil {
		return m.Rdbs
	}
	return nil
}

func (m *ResizeRDBsInput) GetRdbType() int32 {
	if m != nil {
		return m.RdbType
	}
	return 0
}

func (m *ResizeRDBsInput) GetStorageSize() int32 {
	if m != nil {
		return m.StorageSize
	}
	return 0
}

type ResizeRDBsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *ResizeRDBsOutput) Reset()                    { *m = ResizeRDBsOutput{} }
func (m *ResizeRDBsOutput) String() string            { return proto.CompactTextString(m) }
func (*ResizeRDBsOutput) ProtoMessage()               {}
func (*ResizeRDBsOutput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{12} }

func (m *ResizeRDBsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ResizeRDBsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ResizeRDBsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ResizeRDBsOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type RDBsLeaveVxnetInput struct {
	Rdbs  []string `protobuf:"bytes,1,rep,name=rdbs" json:"rdbs,omitempty"`
	Vxnet string   `protobuf:"bytes,2,opt,name=vxnet" json:"vxnet,omitempty"`
}

func (m *RDBsLeaveVxnetInput) Reset()                    { *m = RDBsLeaveVxnetInput{} }
func (m *RDBsLeaveVxnetInput) String() string            { return proto.CompactTextString(m) }
func (*RDBsLeaveVxnetInput) ProtoMessage()               {}
func (*RDBsLeaveVxnetInput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{13} }

func (m *RDBsLeaveVxnetInput) GetRdbs() []string {
	if m != nil {
		return m.Rdbs
	}
	return nil
}

func (m *RDBsLeaveVxnetInput) GetVxnet() string {
	if m != nil {
		return m.Vxnet
	}
	return ""
}

type RDBsLeaveVxnetOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *RDBsLeaveVxnetOutput) Reset()                    { *m = RDBsLeaveVxnetOutput{} }
func (m *RDBsLeaveVxnetOutput) String() string            { return proto.CompactTextString(m) }
func (*RDBsLeaveVxnetOutput) ProtoMessage()               {}
func (*RDBsLeaveVxnetOutput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{14} }

func (m *RDBsLeaveVxnetOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *RDBsLeaveVxnetOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *RDBsLeaveVxnetOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RDBsLeaveVxnetOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type RDBsJoinVxnetInput struct {
	Rdbs  []string `protobuf:"bytes,1,rep,name=rdbs" json:"rdbs,omitempty"`
	Vxnet string   `protobuf:"bytes,2,opt,name=vxnet" json:"vxnet,omitempty"`
}

func (m *RDBsJoinVxnetInput) Reset()                    { *m = RDBsJoinVxnetInput{} }
func (m *RDBsJoinVxnetInput) String() string            { return proto.CompactTextString(m) }
func (*RDBsJoinVxnetInput) ProtoMessage()               {}
func (*RDBsJoinVxnetInput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{15} }

func (m *RDBsJoinVxnetInput) GetRdbs() []string {
	if m != nil {
		return m.Rdbs
	}
	return nil
}

func (m *RDBsJoinVxnetInput) GetVxnet() string {
	if m != nil {
		return m.Vxnet
	}
	return ""
}

type RDBsJoinVxnetOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *RDBsJoinVxnetOutput) Reset()                    { *m = RDBsJoinVxnetOutput{} }
func (m *RDBsJoinVxnetOutput) String() string            { return proto.CompactTextString(m) }
func (*RDBsJoinVxnetOutput) ProtoMessage()               {}
func (*RDBsJoinVxnetOutput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{16} }

func (m *RDBsJoinVxnetOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *RDBsJoinVxnetOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *RDBsJoinVxnetOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RDBsJoinVxnetOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type CreateRDBFromSnapshotInput struct {
	Snapshot       string                                 `protobuf:"bytes,1,opt,name=snapshot" json:"snapshot,omitempty"`
	Vxnet          string                                 `protobuf:"bytes,2,opt,name=vxnet" json:"vxnet,omitempty"`
	RdbType        int32                                  `protobuf:"varint,3,opt,name=rdb_type,json=rdbType" json:"rdb_type,omitempty"`
	RdbUsername    string                                 `protobuf:"bytes,4,opt,name=rdb_username,json=rdbUsername" json:"rdb_username,omitempty"`
	RdbPassword    string                                 `protobuf:"bytes,5,opt,name=rdb_password,json=rdbPassword" json:"rdb_password,omitempty"`
	RdbName        string                                 `protobuf:"bytes,6,opt,name=rdb_name,json=rdbName" json:"rdb_name,omitempty"`
	PrivateIps     *CreateRDBFromSnapshotInput_PrivateIps `protobuf:"bytes,7,opt,name=private_ips,json=privateIps" json:"private_ips,omitempty"`
	Description    string                                 `protobuf:"bytes,8,opt,name=description" json:"description,omitempty"`
	AutoBackupTime int32                                  `protobuf:"varint,9,opt,name=auto_backup_time,json=autoBackupTime" json:"auto_backup_time,omitempty"`
}

func (m *CreateRDBFromSnapshotInput) Reset()                    { *m = CreateRDBFromSnapshotInput{} }
func (m *CreateRDBFromSnapshotInput) String() string            { return proto.CompactTextString(m) }
func (*CreateRDBFromSnapshotInput) ProtoMessage()               {}
func (*CreateRDBFromSnapshotInput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{17} }

func (m *CreateRDBFromSnapshotInput) GetSnapshot() string {
	if m != nil {
		return m.Snapshot
	}
	return ""
}

func (m *CreateRDBFromSnapshotInput) GetVxnet() string {
	if m != nil {
		return m.Vxnet
	}
	return ""
}

func (m *CreateRDBFromSnapshotInput) GetRdbType() int32 {
	if m != nil {
		return m.RdbType
	}
	return 0
}

func (m *CreateRDBFromSnapshotInput) GetRdbUsername() string {
	if m != nil {
		return m.RdbUsername
	}
	return ""
}

func (m *CreateRDBFromSnapshotInput) GetRdbPassword() string {
	if m != nil {
		return m.RdbPassword
	}
	return ""
}

func (m *CreateRDBFromSnapshotInput) GetRdbName() string {
	if m != nil {
		return m.RdbName
	}
	return ""
}

func (m *CreateRDBFromSnapshotInput) GetPrivateIps() *CreateRDBFromSnapshotInput_PrivateIps {
	if m != nil {
		return m.PrivateIps
	}
	return nil
}

func (m *CreateRDBFromSnapshotInput) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateRDBFromSnapshotInput) GetAutoBackupTime() int32 {
	if m != nil {
		return m.AutoBackupTime
	}
	return 0
}

type CreateRDBFromSnapshotInput_PrivateIps struct {
	Master   string `protobuf:"bytes,1,opt,name=master" json:"master,omitempty"`
	Topslave string `protobuf:"bytes,2,opt,name=topslave" json:"topslave,omitempty"`
}

func (m *CreateRDBFromSnapshotInput_PrivateIps) Reset()         { *m = CreateRDBFromSnapshotInput_PrivateIps{} }
func (m *CreateRDBFromSnapshotInput_PrivateIps) String() string { return proto.CompactTextString(m) }
func (*CreateRDBFromSnapshotInput_PrivateIps) ProtoMessage()    {}
func (*CreateRDBFromSnapshotInput_PrivateIps) Descriptor() ([]byte, []int) {
	return fileDescriptor17, []int{17, 0}
}

func (m *CreateRDBFromSnapshotInput_PrivateIps) GetMaster() string {
	if m != nil {
		return m.Master
	}
	return ""
}

func (m *CreateRDBFromSnapshotInput_PrivateIps) GetTopslave() string {
	if m != nil {
		return m.Topslave
	}
	return ""
}

type CreateRDBFromSnapshotOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Rdb     string `protobuf:"bytes,4,opt,name=rdb" json:"rdb,omitempty"`
}

func (m *CreateRDBFromSnapshotOutput) Reset()                    { *m = CreateRDBFromSnapshotOutput{} }
func (m *CreateRDBFromSnapshotOutput) String() string            { return proto.CompactTextString(m) }
func (*CreateRDBFromSnapshotOutput) ProtoMessage()               {}
func (*CreateRDBFromSnapshotOutput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{18} }

func (m *CreateRDBFromSnapshotOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CreateRDBFromSnapshotOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CreateRDBFromSnapshotOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateRDBFromSnapshotOutput) GetRdb() string {
	if m != nil {
		return m.Rdb
	}
	return ""
}

type CreateTempRDBInstanceFromSnapshotInput struct {
	Rdb      string `protobuf:"bytes,1,opt,name=rdb" json:"rdb,omitempty"`
	Snapshot string `protobuf:"bytes,2,opt,name=snapshot" json:"snapshot,omitempty"`
}

func (m *CreateTempRDBInstanceFromSnapshotInput) Reset() {
	*m = CreateTempRDBInstanceFromSnapshotInput{}
}
func (m *CreateTempRDBInstanceFromSnapshotInput) String() string { return proto.CompactTextString(m) }
func (*CreateTempRDBInstanceFromSnapshotInput) ProtoMessage()    {}
func (*CreateTempRDBInstanceFromSnapshotInput) Descriptor() ([]byte, []int) {
	return fileDescriptor17, []int{19}
}

func (m *CreateTempRDBInstanceFromSnapshotInput) GetRdb() string {
	if m != nil {
		return m.Rdb
	}
	return ""
}

func (m *CreateTempRDBInstanceFromSnapshotInput) GetSnapshot() string {
	if m != nil {
		return m.Snapshot
	}
	return ""
}

type CreateTempRDBInstanceFromSnapshotOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *CreateTempRDBInstanceFromSnapshotOutput) Reset() {
	*m = CreateTempRDBInstanceFromSnapshotOutput{}
}
func (m *CreateTempRDBInstanceFromSnapshotOutput) String() string { return proto.CompactTextString(m) }
func (*CreateTempRDBInstanceFromSnapshotOutput) ProtoMessage()    {}
func (*CreateTempRDBInstanceFromSnapshotOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor17, []int{20}
}

func (m *CreateTempRDBInstanceFromSnapshotOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CreateTempRDBInstanceFromSnapshotOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CreateTempRDBInstanceFromSnapshotOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateTempRDBInstanceFromSnapshotOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type GetRDBInstanceFilesInput struct {
	RdbInstance string `protobuf:"bytes,1,opt,name=rdb_instance,json=rdbInstance" json:"rdb_instance,omitempty"`
}

func (m *GetRDBInstanceFilesInput) Reset()                    { *m = GetRDBInstanceFilesInput{} }
func (m *GetRDBInstanceFilesInput) String() string            { return proto.CompactTextString(m) }
func (*GetRDBInstanceFilesInput) ProtoMessage()               {}
func (*GetRDBInstanceFilesInput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{21} }

func (m *GetRDBInstanceFilesInput) GetRdbInstance() string {
	if m != nil {
		return m.RdbInstance
	}
	return ""
}

type GetRDBInstanceFilesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetRDBInstanceFilesOutput) Reset()                    { *m = GetRDBInstanceFilesOutput{} }
func (m *GetRDBInstanceFilesOutput) String() string            { return proto.CompactTextString(m) }
func (*GetRDBInstanceFilesOutput) ProtoMessage()               {}
func (*GetRDBInstanceFilesOutput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{22} }

func (m *GetRDBInstanceFilesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *GetRDBInstanceFilesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *GetRDBInstanceFilesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CopyRDBInstanceFilesToFTPInput struct {
	RdbInstance string   `protobuf:"bytes,1,opt,name=rdb_instance,json=rdbInstance" json:"rdb_instance,omitempty"`
	Files       []string `protobuf:"bytes,2,rep,name=files" json:"files,omitempty"`
}

func (m *CopyRDBInstanceFilesToFTPInput) Reset()         { *m = CopyRDBInstanceFilesToFTPInput{} }
func (m *CopyRDBInstanceFilesToFTPInput) String() string { return proto.CompactTextString(m) }
func (*CopyRDBInstanceFilesToFTPInput) ProtoMessage()    {}
func (*CopyRDBInstanceFilesToFTPInput) Descriptor() ([]byte, []int) {
	return fileDescriptor17, []int{23}
}

func (m *CopyRDBInstanceFilesToFTPInput) GetRdbInstance() string {
	if m != nil {
		return m.RdbInstance
	}
	return ""
}

func (m *CopyRDBInstanceFilesToFTPInput) GetFiles() []string {
	if m != nil {
		return m.Files
	}
	return nil
}

type CopyRDBInstanceFilesToFTPOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *CopyRDBInstanceFilesToFTPOutput) Reset()         { *m = CopyRDBInstanceFilesToFTPOutput{} }
func (m *CopyRDBInstanceFilesToFTPOutput) String() string { return proto.CompactTextString(m) }
func (*CopyRDBInstanceFilesToFTPOutput) ProtoMessage()    {}
func (*CopyRDBInstanceFilesToFTPOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor17, []int{24}
}

func (m *CopyRDBInstanceFilesToFTPOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CopyRDBInstanceFilesToFTPOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CopyRDBInstanceFilesToFTPOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CopyRDBInstanceFilesToFTPOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type PurgeRDBLogsInput struct {
	Rdb         string `protobuf:"bytes,1,opt,name=rdb" json:"rdb,omitempty"`
	RdbInstance string `protobuf:"bytes,2,opt,name=rdb_instance,json=rdbInstance" json:"rdb_instance,omitempty"`
	LogType     string `protobuf:"bytes,3,opt,name=log_type,json=logType" json:"log_type,omitempty"`
	BeforeFile  string `protobuf:"bytes,4,opt,name=before_file,json=beforeFile" json:"before_file,omitempty"`
}

func (m *PurgeRDBLogsInput) Reset()                    { *m = PurgeRDBLogsInput{} }
func (m *PurgeRDBLogsInput) String() string            { return proto.CompactTextString(m) }
func (*PurgeRDBLogsInput) ProtoMessage()               {}
func (*PurgeRDBLogsInput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{25} }

func (m *PurgeRDBLogsInput) GetRdb() string {
	if m != nil {
		return m.Rdb
	}
	return ""
}

func (m *PurgeRDBLogsInput) GetRdbInstance() string {
	if m != nil {
		return m.RdbInstance
	}
	return ""
}

func (m *PurgeRDBLogsInput) GetLogType() string {
	if m != nil {
		return m.LogType
	}
	return ""
}

func (m *PurgeRDBLogsInput) GetBeforeFile() string {
	if m != nil {
		return m.BeforeFile
	}
	return ""
}

type PurgeRDBLogsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *PurgeRDBLogsOutput) Reset()                    { *m = PurgeRDBLogsOutput{} }
func (m *PurgeRDBLogsOutput) String() string            { return proto.CompactTextString(m) }
func (*PurgeRDBLogsOutput) ProtoMessage()               {}
func (*PurgeRDBLogsOutput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{26} }

func (m *PurgeRDBLogsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *PurgeRDBLogsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *PurgeRDBLogsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *PurgeRDBLogsOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type CeaseRDBInstanceInput struct {
	Rdb         string `protobuf:"bytes,1,opt,name=rdb" json:"rdb,omitempty"`
	RdbInstance string `protobuf:"bytes,2,opt,name=rdb_instance,json=rdbInstance" json:"rdb_instance,omitempty"`
}

func (m *CeaseRDBInstanceInput) Reset()                    { *m = CeaseRDBInstanceInput{} }
func (m *CeaseRDBInstanceInput) String() string            { return proto.CompactTextString(m) }
func (*CeaseRDBInstanceInput) ProtoMessage()               {}
func (*CeaseRDBInstanceInput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{27} }

func (m *CeaseRDBInstanceInput) GetRdb() string {
	if m != nil {
		return m.Rdb
	}
	return ""
}

func (m *CeaseRDBInstanceInput) GetRdbInstance() string {
	if m != nil {
		return m.RdbInstance
	}
	return ""
}

type CeaseRDBInstanceOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *CeaseRDBInstanceOutput) Reset()                    { *m = CeaseRDBInstanceOutput{} }
func (m *CeaseRDBInstanceOutput) String() string            { return proto.CompactTextString(m) }
func (*CeaseRDBInstanceOutput) ProtoMessage()               {}
func (*CeaseRDBInstanceOutput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{28} }

func (m *CeaseRDBInstanceOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CeaseRDBInstanceOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CeaseRDBInstanceOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CeaseRDBInstanceOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type ModifyRDBParametersInput struct {
	Rdb        string                                     `protobuf:"bytes,1,opt,name=rdb" json:"rdb,omitempty"`
	Parameters []*ModifyRDBParametersInput_ParametersItem `protobuf:"bytes,2,rep,name=parameters" json:"parameters,omitempty"`
}

func (m *ModifyRDBParametersInput) Reset()                    { *m = ModifyRDBParametersInput{} }
func (m *ModifyRDBParametersInput) String() string            { return proto.CompactTextString(m) }
func (*ModifyRDBParametersInput) ProtoMessage()               {}
func (*ModifyRDBParametersInput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{29} }

func (m *ModifyRDBParametersInput) GetRdb() string {
	if m != nil {
		return m.Rdb
	}
	return ""
}

func (m *ModifyRDBParametersInput) GetParameters() []*ModifyRDBParametersInput_ParametersItem {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type ModifyRDBParametersInput_ParametersItem struct {
}

func (m *ModifyRDBParametersInput_ParametersItem) Reset() {
	*m = ModifyRDBParametersInput_ParametersItem{}
}
func (m *ModifyRDBParametersInput_ParametersItem) String() string { return proto.CompactTextString(m) }
func (*ModifyRDBParametersInput_ParametersItem) ProtoMessage()    {}
func (*ModifyRDBParametersInput_ParametersItem) Descriptor() ([]byte, []int) {
	return fileDescriptor17, []int{29, 0}
}

type ModifyRDBParametersOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Rdb     string `protobuf:"bytes,4,opt,name=rdb" json:"rdb,omitempty"`
}

func (m *ModifyRDBParametersOutput) Reset()                    { *m = ModifyRDBParametersOutput{} }
func (m *ModifyRDBParametersOutput) String() string            { return proto.CompactTextString(m) }
func (*ModifyRDBParametersOutput) ProtoMessage()               {}
func (*ModifyRDBParametersOutput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{30} }

func (m *ModifyRDBParametersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ModifyRDBParametersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ModifyRDBParametersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ModifyRDBParametersOutput) GetRdb() string {
	if m != nil {
		return m.Rdb
	}
	return ""
}

type ApplyRDBParameterGroupInput struct {
	Rdb string `protobuf:"bytes,1,opt,name=rdb" json:"rdb,omitempty"`
}

func (m *ApplyRDBParameterGroupInput) Reset()                    { *m = ApplyRDBParameterGroupInput{} }
func (m *ApplyRDBParameterGroupInput) String() string            { return proto.CompactTextString(m) }
func (*ApplyRDBParameterGroupInput) ProtoMessage()               {}
func (*ApplyRDBParameterGroupInput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{31} }

func (m *ApplyRDBParameterGroupInput) GetRdb() string {
	if m != nil {
		return m.Rdb
	}
	return ""
}

type ApplyRDBParameterGroupOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Rdb     string `protobuf:"bytes,4,opt,name=rdb" json:"rdb,omitempty"`
}

func (m *ApplyRDBParameterGroupOutput) Reset()                    { *m = ApplyRDBParameterGroupOutput{} }
func (m *ApplyRDBParameterGroupOutput) String() string            { return proto.CompactTextString(m) }
func (*ApplyRDBParameterGroupOutput) ProtoMessage()               {}
func (*ApplyRDBParameterGroupOutput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{32} }

func (m *ApplyRDBParameterGroupOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ApplyRDBParameterGroupOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ApplyRDBParameterGroupOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ApplyRDBParameterGroupOutput) GetRdb() string {
	if m != nil {
		return m.Rdb
	}
	return ""
}

type DescribeRDBParametersInput struct {
	Rdb    string `protobuf:"bytes,1,opt,name=rdb" json:"rdb,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Limit  int32  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
}

func (m *DescribeRDBParametersInput) Reset()                    { *m = DescribeRDBParametersInput{} }
func (m *DescribeRDBParametersInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeRDBParametersInput) ProtoMessage()               {}
func (*DescribeRDBParametersInput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{33} }

func (m *DescribeRDBParametersInput) GetRdb() string {
	if m != nil {
		return m.Rdb
	}
	return ""
}

func (m *DescribeRDBParametersInput) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeRDBParametersInput) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type DescribeRDBParametersOutput struct {
	Action       string                                      `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode      int32                                       `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message      string                                      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	ParameterSet []*DescribeRDBParametersOutput_ResponseItem `protobuf:"bytes,4,rep,name=parameter_set,json=parameterSet" json:"parameter_set,omitempty"`
	TotalCount   int32                                       `protobuf:"varint,5,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *DescribeRDBParametersOutput) Reset()                    { *m = DescribeRDBParametersOutput{} }
func (m *DescribeRDBParametersOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeRDBParametersOutput) ProtoMessage()               {}
func (*DescribeRDBParametersOutput) Descriptor() ([]byte, []int) { return fileDescriptor17, []int{34} }

func (m *DescribeRDBParametersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeRDBParametersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeRDBParametersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeRDBParametersOutput) GetParameterSet() []*DescribeRDBParametersOutput_ResponseItem {
	if m != nil {
		return m.ParameterSet
	}
	return nil
}

func (m *DescribeRDBParametersOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type DescribeRDBParametersOutput_ResponseItem struct {
	IsStatic    int32  `protobuf:"varint,1,opt,name=is_static,json=isStatic" json:"is_static,omitempty"`
	MinValue    int32  `protobuf:"varint,2,opt,name=min_value,json=minValue" json:"min_value,omitempty"`
	Family      string `protobuf:"bytes,3,opt,name=family" json:"family,omitempty"`
	IsReadonly  int32  `protobuf:"varint,4,opt,name=is_readonly,json=isReadonly" json:"is_readonly,omitempty"`
	VarValue    string `protobuf:"bytes,5,opt,name=var_value,json=varValue" json:"var_value,omitempty"`
	MaxValue    int32  `protobuf:"varint,6,opt,name=max_value,json=maxValue" json:"max_value,omitempty"`
	OptName     string `protobuf:"bytes,7,opt,name=opt_name,json=optName" json:"opt_name,omitempty"`
	VarType     string `protobuf:"bytes,8,opt,name=var_type,json=varType" json:"var_type,omitempty"`
	VarName     string `protobuf:"bytes,9,opt,name=var_name,json=varName" json:"var_name,omitempty"`
	SectionName string `protobuf:"bytes,10,opt,name=section_name,json=sectionName" json:"section_name,omitempty"`
}

func (m *DescribeRDBParametersOutput_ResponseItem) Reset() {
	*m = DescribeRDBParametersOutput_ResponseItem{}
}
func (m *DescribeRDBParametersOutput_ResponseItem) String() string { return proto.CompactTextString(m) }
func (*DescribeRDBParametersOutput_ResponseItem) ProtoMessage()    {}
func (*DescribeRDBParametersOutput_ResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor17, []int{34, 0}
}

func (m *DescribeRDBParametersOutput_ResponseItem) GetIsStatic() int32 {
	if m != nil {
		return m.IsStatic
	}
	return 0
}

func (m *DescribeRDBParametersOutput_ResponseItem) GetMinValue() int32 {
	if m != nil {
		return m.MinValue
	}
	return 0
}

func (m *DescribeRDBParametersOutput_ResponseItem) GetFamily() string {
	if m != nil {
		return m.Family
	}
	return ""
}

func (m *DescribeRDBParametersOutput_ResponseItem) GetIsReadonly() int32 {
	if m != nil {
		return m.IsReadonly
	}
	return 0
}

func (m *DescribeRDBParametersOutput_ResponseItem) GetVarValue() string {
	if m != nil {
		return m.VarValue
	}
	return ""
}

func (m *DescribeRDBParametersOutput_ResponseItem) GetMaxValue() int32 {
	if m != nil {
		return m.MaxValue
	}
	return 0
}

func (m *DescribeRDBParametersOutput_ResponseItem) GetOptName() string {
	if m != nil {
		return m.OptName
	}
	return ""
}

func (m *DescribeRDBParametersOutput_ResponseItem) GetVarType() string {
	if m != nil {
		return m.VarType
	}
	return ""
}

func (m *DescribeRDBParametersOutput_ResponseItem) GetVarName() string {
	if m != nil {
		return m.VarName
	}
	return ""
}

func (m *DescribeRDBParametersOutput_ResponseItem) GetSectionName() string {
	if m != nil {
		return m.SectionName
	}
	return ""
}

func init() {
	proto.RegisterType((*RDBServiceProperties)(nil), "service.RDBServiceProperties")
	proto.RegisterType((*CreateRDBInput)(nil), "service.CreateRDBInput")
	proto.RegisterType((*CreateRDBInput_PrivateIps)(nil), "service.CreateRDBInput.PrivateIps")
	proto.RegisterType((*CreateRDBOutput)(nil), "service.CreateRDBOutput")
	proto.RegisterType((*DescribeRDBsInput)(nil), "service.DescribeRDBsInput")
	proto.RegisterType((*DescribeRDBsOutput)(nil), "service.DescribeRDBsOutput")
	proto.RegisterType((*DescribeRDBsOutput_ResponseItem)(nil), "service.DescribeRDBsOutput.ResponseItem")
	proto.RegisterType((*DescribeRDBsOutput_ResponseItem_Vxnets)(nil), "service.DescribeRDBsOutput.ResponseItem.Vxnets")
	proto.RegisterType((*DeleteRDBsInput)(nil), "service.DeleteRDBsInput")
	proto.RegisterType((*DeleteRDBsOutput)(nil), "service.DeleteRDBsOutput")
	proto.RegisterType((*StartRDBsInput)(nil), "service.StartRDBsInput")
	proto.RegisterType((*StartRDBsOutput)(nil), "service.StartRDBsOutput")
	proto.RegisterType((*StopRDBsInput)(nil), "service.StopRDBsInput")
	proto.RegisterType((*StopRDBsOutput)(nil), "service.StopRDBsOutput")
	proto.RegisterType((*ResizeRDBsInput)(nil), "service.ResizeRDBsInput")
	proto.RegisterType((*ResizeRDBsOutput)(nil), "service.ResizeRDBsOutput")
	proto.RegisterType((*RDBsLeaveVxnetInput)(nil), "service.RDBsLeaveVxnetInput")
	proto.RegisterType((*RDBsLeaveVxnetOutput)(nil), "service.RDBsLeaveVxnetOutput")
	proto.RegisterType((*RDBsJoinVxnetInput)(nil), "service.RDBsJoinVxnetInput")
	proto.RegisterType((*RDBsJoinVxnetOutput)(nil), "service.RDBsJoinVxnetOutput")
	proto.RegisterType((*CreateRDBFromSnapshotInput)(nil), "service.CreateRDBFromSnapshotInput")
	proto.RegisterType((*CreateRDBFromSnapshotInput_PrivateIps)(nil), "service.CreateRDBFromSnapshotInput.PrivateIps")
	proto.RegisterType((*CreateRDBFromSnapshotOutput)(nil), "service.CreateRDBFromSnapshotOutput")
	proto.RegisterType((*CreateTempRDBInstanceFromSnapshotInput)(nil), "service.CreateTempRDBInstanceFromSnapshotInput")
	proto.RegisterType((*CreateTempRDBInstanceFromSnapshotOutput)(nil), "service.CreateTempRDBInstanceFromSnapshotOutput")
	proto.RegisterType((*GetRDBInstanceFilesInput)(nil), "service.GetRDBInstanceFilesInput")
	proto.RegisterType((*GetRDBInstanceFilesOutput)(nil), "service.GetRDBInstanceFilesOutput")
	proto.RegisterType((*CopyRDBInstanceFilesToFTPInput)(nil), "service.CopyRDBInstanceFilesToFTPInput")
	proto.RegisterType((*CopyRDBInstanceFilesToFTPOutput)(nil), "service.CopyRDBInstanceFilesToFTPOutput")
	proto.RegisterType((*PurgeRDBLogsInput)(nil), "service.PurgeRDBLogsInput")
	proto.RegisterType((*PurgeRDBLogsOutput)(nil), "service.PurgeRDBLogsOutput")
	proto.RegisterType((*CeaseRDBInstanceInput)(nil), "service.CeaseRDBInstanceInput")
	proto.RegisterType((*CeaseRDBInstanceOutput)(nil), "service.CeaseRDBInstanceOutput")
	proto.RegisterType((*ModifyRDBParametersInput)(nil), "service.ModifyRDBParametersInput")
	proto.RegisterType((*ModifyRDBParametersInput_ParametersItem)(nil), "service.ModifyRDBParametersInput.ParametersItem")
	proto.RegisterType((*ModifyRDBParametersOutput)(nil), "service.ModifyRDBParametersOutput")
	proto.RegisterType((*ApplyRDBParameterGroupInput)(nil), "service.ApplyRDBParameterGroupInput")
	proto.RegisterType((*ApplyRDBParameterGroupOutput)(nil), "service.ApplyRDBParameterGroupOutput")
	proto.RegisterType((*DescribeRDBParametersInput)(nil), "service.DescribeRDBParametersInput")
	proto.RegisterType((*DescribeRDBParametersOutput)(nil), "service.DescribeRDBParametersOutput")
	proto.RegisterType((*DescribeRDBParametersOutput_ResponseItem)(nil), "service.DescribeRDBParametersOutput.ResponseItem")
}

// See https://docs.qingcloud.com/api/rdb/index.html
type RDBServiceInterface interface {
	CreateRDB(in *CreateRDBInput) (out *CreateRDBOutput, err error)
	DescribeRDBs(in *DescribeRDBsInput) (out *DescribeRDBsOutput, err error)
	DeleteRDBs(in *DeleteRDBsInput) (out *DeleteRDBsOutput, err error)
	StartRDBs(in *StartRDBsInput) (out *StartRDBsOutput, err error)
	StopRDBs(in *StopRDBsInput) (out *StopRDBsOutput, err error)
	ResizeRDBs(in *ResizeRDBsInput) (out *ResizeRDBsOutput, err error)
	RDBsLeaveVxnet(in *RDBsLeaveVxnetInput) (out *RDBsLeaveVxnetOutput, err error)
	RDBsJoinVxnet(in *RDBsJoinVxnetInput) (out *RDBsJoinVxnetOutput, err error)
	CreateRDBFromSnapshot(in *CreateRDBFromSnapshotInput) (out *CreateRDBFromSnapshotOutput, err error)
	CreateTempRDBInstanceFromSnapshot(in *CreateTempRDBInstanceFromSnapshotInput) (out *CreateTempRDBInstanceFromSnapshotOutput, err error)
	GetRDBInstanceFiles(in *GetRDBInstanceFilesInput) (out *GetRDBInstanceFilesOutput, err error)
	CopyRDBInstanceFilesToFTP(in *CopyRDBInstanceFilesToFTPInput) (out *CopyRDBInstanceFilesToFTPOutput, err error)
	PurgeRDBLogs(in *PurgeRDBLogsInput) (out *PurgeRDBLogsOutput, err error)
	CeaseRDBInstance(in *CeaseRDBInstanceInput) (out *CeaseRDBInstanceOutput, err error)
	ModifyRDBParameters(in *ModifyRDBParametersInput) (out *ModifyRDBParametersOutput, err error)
	ApplyRDBParameterGroup(in *ApplyRDBParameterGroupInput) (out *ApplyRDBParameterGroupOutput, err error)
	DescribeRDBParameters(in *DescribeRDBParametersInput) (out *DescribeRDBParametersOutput, err error)
}

// See https://docs.qingcloud.com/api/rdb/index.html
type RDBService struct {
	Config           *config.Config
	Properties       *RDBServiceProperties
	LastResponseBody string
}

// See https://docs.qingcloud.com/api/rdb/index.html
func NewRDBService(conf *config.Config, zone string) (p *RDBService) {
	return &RDBService{
		Config:     conf,
		Properties: &RDBServiceProperties{Zone: zone},
	}
}

// See https://docs.qingcloud.com/api/rdb/index.html
func (s *QingCloudService) RDB(zone string) (*RDBService, error) {
	properties := &RDBServiceProperties{
		Zone: zone,
	}

	return &RDBService{Config: s.Config, Properties: properties}, nil
}

func (p *RDBService) CreateRDB(in *CreateRDBInput) (out *CreateRDBOutput, err error) {
	if in == nil {
		in = &CreateRDBInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateRDB",
		RequestMethod: "GET", // GET or POST
	}

	x := &CreateRDBOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RDBService) DescribeRDBs(in *DescribeRDBsInput) (out *DescribeRDBsOutput, err error) {
	if in == nil {
		in = &DescribeRDBsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeRDBs",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeRDBsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RDBService) DeleteRDBs(in *DeleteRDBsInput) (out *DeleteRDBsOutput, err error) {
	if in == nil {
		in = &DeleteRDBsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteRDBs",
		RequestMethod: "GET", // GET or POST
	}

	x := &DeleteRDBsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RDBService) StartRDBs(in *StartRDBsInput) (out *StartRDBsOutput, err error) {
	if in == nil {
		in = &StartRDBsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "StartRDBs",
		RequestMethod: "GET", // GET or POST
	}

	x := &StartRDBsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RDBService) StopRDBs(in *StopRDBsInput) (out *StopRDBsOutput, err error) {
	if in == nil {
		in = &StopRDBsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "StopRDBs",
		RequestMethod: "GET", // GET or POST
	}

	x := &StopRDBsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RDBService) ResizeRDBs(in *ResizeRDBsInput) (out *ResizeRDBsOutput, err error) {
	if in == nil {
		in = &ResizeRDBsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ResizeRDBs",
		RequestMethod: "GET", // GET or POST
	}

	x := &ResizeRDBsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RDBService) RDBsLeaveVxnet(in *RDBsLeaveVxnetInput) (out *RDBsLeaveVxnetOutput, err error) {
	if in == nil {
		in = &RDBsLeaveVxnetInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "RDBsLeaveVxnet",
		RequestMethod: "GET", // GET or POST
	}

	x := &RDBsLeaveVxnetOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RDBService) RDBsJoinVxnet(in *RDBsJoinVxnetInput) (out *RDBsJoinVxnetOutput, err error) {
	if in == nil {
		in = &RDBsJoinVxnetInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "RDBsJoinVxnet",
		RequestMethod: "GET", // GET or POST
	}

	x := &RDBsJoinVxnetOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RDBService) CreateRDBFromSnapshot(in *CreateRDBFromSnapshotInput) (out *CreateRDBFromSnapshotOutput, err error) {
	if in == nil {
		in = &CreateRDBFromSnapshotInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateRDBFromSnapshot",
		RequestMethod: "GET", // GET or POST
	}

	x := &CreateRDBFromSnapshotOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RDBService) CreateTempRDBInstanceFromSnapshot(in *CreateTempRDBInstanceFromSnapshotInput) (out *CreateTempRDBInstanceFromSnapshotOutput, err error) {
	if in == nil {
		in = &CreateTempRDBInstanceFromSnapshotInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateTempRDBInstanceFromSnapshot",
		RequestMethod: "GET", // GET or POST
	}

	x := &CreateTempRDBInstanceFromSnapshotOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RDBService) GetRDBInstanceFiles(in *GetRDBInstanceFilesInput) (out *GetRDBInstanceFilesOutput, err error) {
	if in == nil {
		in = &GetRDBInstanceFilesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "GetRDBInstanceFiles",
		RequestMethod: "GET", // GET or POST
	}

	x := &GetRDBInstanceFilesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RDBService) CopyRDBInstanceFilesToFTP(in *CopyRDBInstanceFilesToFTPInput) (out *CopyRDBInstanceFilesToFTPOutput, err error) {
	if in == nil {
		in = &CopyRDBInstanceFilesToFTPInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CopyRDBInstanceFilesToFTP",
		RequestMethod: "GET", // GET or POST
	}

	x := &CopyRDBInstanceFilesToFTPOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RDBService) PurgeRDBLogs(in *PurgeRDBLogsInput) (out *PurgeRDBLogsOutput, err error) {
	if in == nil {
		in = &PurgeRDBLogsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "PurgeRDBLogs",
		RequestMethod: "GET", // GET or POST
	}

	x := &PurgeRDBLogsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RDBService) CeaseRDBInstance(in *CeaseRDBInstanceInput) (out *CeaseRDBInstanceOutput, err error) {
	if in == nil {
		in = &CeaseRDBInstanceInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CeaseRDBInstance",
		RequestMethod: "GET", // GET or POST
	}

	x := &CeaseRDBInstanceOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RDBService) ModifyRDBParameters(in *ModifyRDBParametersInput) (out *ModifyRDBParametersOutput, err error) {
	if in == nil {
		in = &ModifyRDBParametersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifyRDBParameters",
		RequestMethod: "GET", // GET or POST
	}

	x := &ModifyRDBParametersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RDBService) ApplyRDBParameterGroup(in *ApplyRDBParameterGroupInput) (out *ApplyRDBParameterGroupOutput, err error) {
	if in == nil {
		in = &ApplyRDBParameterGroupInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ApplyRDBParameterGroup",
		RequestMethod: "GET", // GET or POST
	}

	x := &ApplyRDBParameterGroupOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RDBService) DescribeRDBParameters(in *DescribeRDBParametersInput) (out *DescribeRDBParametersOutput, err error) {
	if in == nil {
		in = &DescribeRDBParametersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeRDBParameters",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeRDBParametersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RDBServiceProperties) Validate() error {
	return nil // TODO
}

func (p *CreateRDBInput) Validate() error {
	return nil // TODO
}

func (p *CreateRDBOutput) Validate() error {
	return nil // TODO
}

func (p *DescribeRDBsInput) Validate() error {
	return nil // TODO
}

func (p *DescribeRDBsOutput) Validate() error {
	return nil // TODO
}

func (p *DeleteRDBsInput) Validate() error {
	return nil // TODO
}

func (p *DeleteRDBsOutput) Validate() error {
	return nil // TODO
}

func (p *StartRDBsInput) Validate() error {
	return nil // TODO
}

func (p *StartRDBsOutput) Validate() error {
	return nil // TODO
}

func (p *StopRDBsInput) Validate() error {
	return nil // TODO
}

func (p *StopRDBsOutput) Validate() error {
	return nil // TODO
}

func (p *ResizeRDBsInput) Validate() error {
	return nil // TODO
}

func (p *ResizeRDBsOutput) Validate() error {
	return nil // TODO
}

func (p *RDBsLeaveVxnetInput) Validate() error {
	return nil // TODO
}

func (p *RDBsLeaveVxnetOutput) Validate() error {
	return nil // TODO
}

func (p *RDBsJoinVxnetInput) Validate() error {
	return nil // TODO
}

func (p *RDBsJoinVxnetOutput) Validate() error {
	return nil // TODO
}

func (p *CreateRDBFromSnapshotInput) Validate() error {
	return nil // TODO
}

func (p *CreateRDBFromSnapshotOutput) Validate() error {
	return nil // TODO
}

func (p *CreateTempRDBInstanceFromSnapshotInput) Validate() error {
	return nil // TODO
}

func (p *CreateTempRDBInstanceFromSnapshotOutput) Validate() error {
	return nil // TODO
}

func (p *GetRDBInstanceFilesInput) Validate() error {
	return nil // TODO
}

func (p *GetRDBInstanceFilesOutput) Validate() error {
	return nil // TODO
}

func (p *CopyRDBInstanceFilesToFTPInput) Validate() error {
	return nil // TODO
}

func (p *CopyRDBInstanceFilesToFTPOutput) Validate() error {
	return nil // TODO
}

func (p *PurgeRDBLogsInput) Validate() error {
	return nil // TODO
}

func (p *PurgeRDBLogsOutput) Validate() error {
	return nil // TODO
}

func (p *CeaseRDBInstanceInput) Validate() error {
	return nil // TODO
}

func (p *CeaseRDBInstanceOutput) Validate() error {
	return nil // TODO
}

func (p *ModifyRDBParametersInput) Validate() error {
	return nil // TODO
}

func (p *ModifyRDBParametersOutput) Validate() error {
	return nil // TODO
}

func (p *ApplyRDBParameterGroupInput) Validate() error {
	return nil // TODO
}

func (p *ApplyRDBParameterGroupOutput) Validate() error {
	return nil // TODO
}

func (p *DescribeRDBParametersInput) Validate() error {
	return nil // TODO
}

func (p *DescribeRDBParametersOutput) Validate() error {
	return nil // TODO
}

func init() { proto.RegisterFile("rdb.proto", fileDescriptor17) }

var fileDescriptor17 = []byte{
	// 1882 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x19, 0xc9, 0x6e, 0x23, 0xc7,
	0x15, 0x24, 0xc5, 0xed, 0x51, 0xdb, 0xd4, 0x58, 0x72, 0xab, 0xe5, 0xb1, 0x34, 0x6d, 0x4f, 0x2c,
	0x24, 0x08, 0xe9, 0xc8, 0xb7, 0x18, 0x99, 0xc4, 0x92, 0x62, 0x41, 0xc6, 0xcc, 0x58, 0x69, 0xca,
	0x02, 0x02, 0x18, 0x68, 0x14, 0xd9, 0x25, 0x4e, 0xdb, 0xec, 0xae, 0x4e, 0x55, 0x91, 0x91, 0x04,
	0xe7, 0x96, 0xe4, 0x10, 0x20, 0x40, 0x2e, 0xf9, 0x80, 0x1c, 0x73, 0xca, 0xd7, 0xe4, 0x9a, 0x5f,
	0x08, 0x72, 0xcc, 0x2d, 0xa8, 0x85, 0xbd, 0x90, 0x4d, 0x52, 0x30, 0x22, 0x5e, 0x04, 0xd6, 0xdb,
	0xea, 0xed, 0xfd, 0x5e, 0x09, 0x9a, 0xcc, 0xef, 0xb5, 0x63, 0x46, 0x05, 0x45, 0x75, 0x4e, 0xd8,
	0x38, 0xe8, 0x13, 0xfb, 0xd9, 0x6f, 0x82, 0x68, 0xd0, 0x1f, 0xd2, 0x91, 0xef, 0x71, 0xff, 0x5b,
	0x8f, 0x8d, 0x86, 0xa4, 0x23, 0xff, 0x68, 0x3a, 0xfb, 0x60, 0x40, 0xe9, 0x60, 0x48, 0x3a, 0xea,
	0xd4, 0x1b, 0xdd, 0x74, 0x44, 0x10, 0x12, 0x2e, 0x70, 0x18, 0x6b, 0x02, 0xe7, 0x87, 0xf0, 0x8e,
	0x7b, 0x76, 0xd2, 0xd5, 0xd2, 0x2e, 0x19, 0x8d, 0x09, 0x13, 0x01, 0xe1, 0x08, 0xc1, 0xda, 0x3d,
	0x8d, 0x88, 0x55, 0x3a, 0x2c, 0x1d, 0x35, 0x5d, 0xf5, 0xdb, 0xf9, 0x57, 0x05, 0x36, 0x4f, 0x19,
	0xc1, 0x82, 0xb8, 0x67, 0x27, 0x17, 0x51, 0x3c, 0x12, 0xe8, 0x1d, 0xa8, 0x8e, 0x6f, 0x23, 0x22,
	0x0c, 0x9d, 0x3e, 0xa0, 0x67, 0x00, 0xcc, 0xef, 0x79, 0x24, 0x1a, 0x04, 0x11, 0xb1, 0xca, 0x0a,
	0x25, 0x95, 0xff, 0xa5, 0x02, 0xa0, 0x17, 0xb0, 0xa9, 0x51, 0xde, 0x98, 0x30, 0x1e, 0xd0, 0xc8,
	0xaa, 0x28, 0x92, 0x0d, 0x0d, 0xbd, 0xd6, 0x40, 0xf4, 0x1c, 0xd6, 0xa5, 0x94, 0x11, 0x27, 0x2c,
	0xc2, 0x21, 0xb1, 0xd6, 0x14, 0x51, 0x8b, 0xf9, 0xbd, 0xaf, 0x0c, 0x68, 0x42, 0x12, 0x63, 0xce,
	0x7f, 0x4b, 0x99, 0x6f, 0x55, 0x13, 0x92, 0x4b, 0x03, 0x42, 0x7b, 0xd0, 0x90, 0x24, 0xe2, 0x2e,
	0x26, 0x56, 0xed, 0xb0, 0x74, 0x54, 0x75, 0xeb, 0xcc, 0xef, 0x5d, 0xdd, 0xc5, 0x8a, 0x9b, 0x0b,
	0xca, 0xf0, 0x80, 0x78, 0x3c, 0xb8, 0x27, 0x56, 0x5d, 0xa1, 0x5b, 0x06, 0xd6, 0x0d, 0xee, 0xc9,
	0x84, 0x5b, 0xdd, 0xdf, 0x50, 0xc2, 0x25, 0xf7, 0x1b, 0x79, 0xf7, 0x29, 0xb4, 0x62, 0x16, 0x8c,
	0xb1, 0x20, 0x5e, 0x10, 0x73, 0xab, 0x79, 0x58, 0x3a, 0x6a, 0x1d, 0x3b, 0x6d, 0x13, 0x98, 0x76,
	0xde, 0x51, 0xed, 0x4b, 0x4d, 0x7a, 0x11, 0x73, 0x17, 0xe2, 0xe4, 0x37, 0x3a, 0x84, 0x96, 0x4f,
	0x78, 0x9f, 0x05, 0xb1, 0x90, 0x7e, 0x00, 0xad, 0x7f, 0x06, 0x84, 0x8e, 0x60, 0x1b, 0x8f, 0x04,
	0xf5, 0x7a, 0xb8, 0xff, 0xed, 0x28, 0xf6, 0x64, 0xfc, 0xac, 0x96, 0x52, 0x74, 0x53, 0xc2, 0x4f,
	0x14, 0xf8, 0x2a, 0x08, 0x89, 0xfd, 0x0b, 0x80, 0xf4, 0x16, 0xb4, 0x0b, 0xb5, 0x10, 0x73, 0x41,
	0x98, 0x09, 0x8d, 0x39, 0x21, 0x1b, 0x1a, 0x82, 0xc6, 0x7c, 0x88, 0xc7, 0x93, 0xc8, 0x24, 0x67,
	0x27, 0x86, 0xad, 0x44, 0xed, 0x2f, 0x47, 0x42, 0x06, 0x78, 0x17, 0x6a, 0xb8, 0xaf, 0x74, 0x33,
	0x62, 0xf4, 0x49, 0x39, 0x86, 0x08, 0xaf, 0x4f, 0x7d, 0x2d, 0x46, 0xba, 0x95, 0x88, 0x53, 0xea,
	0x13, 0x64, 0x41, 0x3d, 0x24, 0x9c, 0xe3, 0x01, 0x31, 0x71, 0x9d, 0x1c, 0xd1, 0x36, 0x54, 0x98,
	0xdf, 0x33, 0x81, 0x94, 0x3f, 0x9d, 0x7f, 0x96, 0xe0, 0xc9, 0x99, 0xb2, 0xb6, 0x27, 0x2f, 0xe5,
	0x3a, 0xab, 0x10, 0xac, 0x31, 0xbf, 0xc7, 0xad, 0xd2, 0x61, 0x45, 0x26, 0x9f, 0xfc, 0xbd, 0x2c,
	0xa7, 0x76, 0xa1, 0xc6, 0x05, 0x16, 0x23, 0x6e, 0x55, 0x14, 0x93, 0x39, 0xe5, 0x02, 0xb8, 0x96,
	0x0f, 0x20, 0x82, 0x35, 0x81, 0x07, 0xdc, 0xaa, 0xea, 0x5b, 0xe4, 0x6f, 0xa9, 0xfb, 0x98, 0xb0,
	0x1e, 0xe5, 0x49, 0xb2, 0x98, 0xa3, 0xbc, 0x80, 0xde, 0xdc, 0x70, 0x22, 0x4c, 0x9a, 0x98, 0x93,
	0xac, 0x80, 0x61, 0x10, 0x06, 0x42, 0xa5, 0x47, 0xd5, 0xd5, 0x07, 0xe7, 0xdf, 0x75, 0x40, 0x59,
	0xbb, 0x1e, 0xc3, 0x9b, 0xe7, 0x00, 0x8c, 0x8e, 0x04, 0x61, 0x9e, 0xd4, 0x6a, 0xed, 0xb0, 0x72,
	0xd4, 0x3a, 0x3e, 0x4a, 0xf2, 0x6f, 0xf6, 0xf6, 0xb6, 0x4b, 0x78, 0x4c, 0x23, 0x4e, 0x2e, 0x04,
	0x09, 0xdd, 0xa6, 0xe6, 0xed, 0x12, 0x81, 0x0e, 0xa0, 0x25, 0xa8, 0xc0, 0x43, 0xaf, 0x4f, 0x47,
	0x91, 0x50, 0x45, 0x54, 0x75, 0x41, 0x81, 0x4e, 0x25, 0xc4, 0xfe, 0x5b, 0x0d, 0xd6, 0xb3, 0xcc,
	0x68, 0x07, 0x6a, 0xd2, 0xab, 0x81, 0x3f, 0xa9, 0x7b, 0xe6, 0xf7, 0x2e, 0xfc, 0xc2, 0x5c, 0x2d,
	0x17, 0xe5, 0x2a, 0xfa, 0x14, 0x5a, 0x7d, 0x95, 0x69, 0x9a, 0xa8, 0xa2, 0x8a, 0xc7, 0x6e, 0xeb,
	0x6e, 0xd5, 0x9e, 0x74, 0xab, 0xf6, 0xd5, 0xa4, 0x5b, 0xb9, 0xa0, 0xc9, 0x15, 0xf3, 0x73, 0x58,
	0xc7, 0x43, 0xcc, 0x42, 0xcf, 0x44, 0xdc, 0x34, 0x06, 0x05, 0xeb, 0xce, 0x86, 0xbd, 0x9a, 0x0f,
	0xfb, 0x3e, 0x34, 0x75, 0x29, 0x78, 0x41, 0xac, 0x82, 0xdc, 0x74, 0x1b, 0x1a, 0x70, 0x11, 0x4b,
	0xbd, 0xb4, 0x50, 0xad, 0x57, 0x7d, 0xb9, 0x5e, 0x9a, 0x5c, 0xe9, 0x75, 0x0e, 0x35, 0xd5, 0xff,
	0xb8, 0xca, 0x85, 0xd6, 0x71, 0xe7, 0xa1, 0xc1, 0x68, 0x5f, 0x2b, 0x36, 0xd7, 0xb0, 0x67, 0x92,
	0xb9, 0xa9, 0xd3, 0xc4, 0x24, 0xf3, 0xf2, 0x6e, 0xf1, 0x23, 0x78, 0x22, 0x18, 0x8e, 0x78, 0x20,
	0x4f, 0x13, 0xff, 0xb4, 0x14, 0xdd, 0x76, 0x8a, 0x30, 0x4e, 0x9a, 0xee, 0x7f, 0xeb, 0x73, 0xfb,
	0x9f, 0xea, 0x9e, 0x1b, 0xf9, 0xee, 0xf9, 0x09, 0xec, 0xaa, 0x60, 0x87, 0x41, 0x44, 0x99, 0xec,
	0xe4, 0xde, 0x28, 0x1e, 0x30, 0xec, 0x13, 0x6b, 0x53, 0x11, 0x3e, 0x95, 0xd8, 0xd7, 0x12, 0x79,
	0x4d, 0xd8, 0x57, 0x1a, 0x85, 0xde, 0xc0, 0xce, 0x50, 0xfa, 0x9a, 0x0b, 0x8f, 0x47, 0x38, 0xe6,
	0x6f, 0xa9, 0xd0, 0x9e, 0xde, 0x5a, 0xea, 0xe9, 0xa7, 0x86, 0xb1, 0x6b, 0xf8, 0x94, 0xcb, 0x67,
	0x3f, 0x25, 0xdb, 0x45, 0x9f, 0x92, 0x7c, 0xf3, 0x78, 0x32, 0xd5, 0x3c, 0xec, 0x13, 0xa8, 0xe9,
	0x08, 0x48, 0x42, 0x15, 0x03, 0x9d, 0x39, 0x3a, 0xb9, 0x9b, 0x0a, 0xa2, 0x72, 0x67, 0x0f, 0x1a,
	0x1a, 0x1d, 0xf8, 0xa6, 0x05, 0xd5, 0xd5, 0xf9, 0xc2, 0x77, 0x5e, 0xc0, 0xd6, 0x19, 0x19, 0x12,
	0xb1, 0xb8, 0x8d, 0x39, 0x63, 0xd8, 0x4e, 0xc9, 0x1e, 0xa3, 0x2b, 0xec, 0x40, 0xed, 0x1b, 0xaa,
	0x4a, 0x53, 0x97, 0x45, 0xf5, 0x1b, 0xda, 0xbb, 0xf0, 0x9d, 0x0f, 0x61, 0xb3, 0x2b, 0x30, 0x13,
	0x8b, 0xb5, 0x1b, 0xc1, 0x56, 0x42, 0xb5, 0x42, 0xe5, 0x3e, 0x80, 0x8d, 0xae, 0xa0, 0xf1, 0x62,
	0xdd, 0x84, 0xb4, 0x40, 0x13, 0xad, 0x50, 0xb5, 0x3e, 0x6c, 0xb9, 0x44, 0x56, 0xc7, 0xe2, 0xaf,
	0x53, 0xb6, 0x4e, 0xca, 0x8b, 0xa7, 0x8c, 0xca, 0x4c, 0x95, 0xc9, 0xa4, 0x48, 0x2f, 0x59, 0xa1,
	0x71, 0x3f, 0x87, 0xa7, 0xf2, 0xc6, 0x57, 0x04, 0x8f, 0x89, 0x2a, 0x80, 0xf9, 0x06, 0x26, 0x83,
	0x5e, 0x39, 0x33, 0xe8, 0x39, 0xf7, 0x6a, 0x7a, 0xcc, 0x08, 0x58, 0xa1, 0xf2, 0x2f, 0x01, 0xc9,
	0xbb, 0xbf, 0xa0, 0x41, 0xf4, 0xbd, 0x74, 0xbf, 0xd3, 0xc6, 0x27, 0xfc, 0x2b, 0x54, 0xfd, 0xef,
	0x15, 0xb0, 0x93, 0x41, 0xeb, 0x73, 0x46, 0xc3, 0x49, 0x4f, 0xd3, 0x36, 0xd8, 0xd0, 0x98, 0x34,
	0x47, 0xa3, 0x44, 0x72, 0x2e, 0xb6, 0x25, 0x97, 0x7e, 0x95, 0x99, 0xf4, 0xfb, 0xff, 0x4d, 0xd1,
	0x4a, 0x42, 0x2d, 0xff, 0x3d, 0xfd, 0x32, 0x3f, 0x07, 0xeb, 0x4f, 0x66, 0x7b, 0x76, 0x0e, 0x9e,
	0xb1, 0xf3, 0x81, 0x33, 0x71, 0xe3, 0x61, 0x33, 0x71, 0xf3, 0x91, 0x66, 0xe2, 0xef, 0x60, 0xbf,
	0xd0, 0x84, 0xd5, 0xcc, 0xc7, 0xd7, 0xf0, 0x03, 0x7d, 0xfb, 0x15, 0x09, 0x63, 0xb5, 0x4c, 0x70,
	0x81, 0xa3, 0x3e, 0x99, 0x4d, 0x1a, 0xc3, 0x5b, 0x4a, 0x78, 0x73, 0x69, 0x54, 0xce, 0xa7, 0x91,
	0xf3, 0xe7, 0x12, 0x7c, 0xb4, 0x54, 0xf0, 0x0a, 0x2b, 0xe2, 0x67, 0x60, 0x9d, 0x13, 0x91, 0xd5,
	0x23, 0x18, 0x12, 0xd3, 0x6f, 0x4d, 0x7a, 0x06, 0x06, 0x63, 0xb4, 0x90, 0xe9, 0x39, 0x21, 0x76,
	0xde, 0xc2, 0x5e, 0x01, 0xfb, 0x23, 0xe8, 0xef, 0xfc, 0x1a, 0xde, 0x3f, 0xa5, 0xf1, 0xdd, 0xf4,
	0x55, 0x57, 0xf4, 0xf3, 0xab, 0xcb, 0x87, 0xaa, 0x2b, 0x8b, 0xf8, 0x46, 0x72, 0x59, 0x65, 0xd5,
	0xa5, 0xf4, 0xc1, 0xf9, 0x43, 0x09, 0x0e, 0xe6, 0xca, 0x5e, 0x61, 0x2c, 0x7e, 0x5f, 0x82, 0x27,
	0x97, 0x23, 0x36, 0x90, 0x19, 0xff, 0x8a, 0x0e, 0xf8, 0xbc, 0xfc, 0x9a, 0x36, 0xb4, 0x3c, 0x6b,
	0xe8, 0x1e, 0x34, 0x86, 0x74, 0x90, 0xf6, 0xa5, 0xa6, 0x5b, 0x1f, 0xd2, 0x81, 0xea, 0x4b, 0x07,
	0xd0, 0xea, 0x91, 0x1b, 0xca, 0x88, 0x27, 0xad, 0x37, 0x1a, 0x80, 0x06, 0x49, 0xb3, 0x9d, 0x5b,
	0x40, 0x59, 0x2d, 0x56, 0xe8, 0x80, 0x57, 0xb0, 0x73, 0x4a, 0x30, 0x27, 0x99, 0x40, 0x7c, 0x7f,
	0x1f, 0x38, 0xdf, 0xc1, 0xee, 0xb4, 0xb4, 0x15, 0xda, 0xf2, 0x97, 0x12, 0x58, 0xaf, 0xa9, 0x1f,
	0xdc, 0xc8, 0xb4, 0xba, 0xc4, 0x0c, 0x87, 0x44, 0x10, 0x36, 0x37, 0xa6, 0x97, 0x00, 0x71, 0x42,
	0xa4, 0xd2, 0xb3, 0x75, 0xfc, 0x71, 0xd2, 0xcb, 0xe7, 0x09, 0x6a, 0x67, 0xce, 0x72, 0xb7, 0xcc,
	0xc8, 0xb0, 0xb7, 0x61, 0x33, 0x8f, 0x75, 0xee, 0x61, 0xaf, 0x40, 0xd0, 0x6a, 0xfa, 0x69, 0x07,
	0xf6, 0x3f, 0x8b, 0xe3, 0x61, 0xee, 0xea, 0x73, 0x46, 0x47, 0xf1, 0x1c, 0x87, 0x38, 0xbf, 0x83,
	0xf7, 0x8a, 0x19, 0x56, 0xa3, 0xef, 0xd7, 0x60, 0x67, 0x76, 0xc7, 0xe5, 0xf1, 0x4b, 0x5f, 0x29,
	0xca, 0xc5, 0xaf, 0x14, 0x95, 0xec, 0x2b, 0xc5, 0x5f, 0xd7, 0x60, 0xbf, 0x50, 0xfc, 0x63, 0x18,
	0x77, 0x0d, 0x1b, 0x49, 0x5a, 0x64, 0x5e, 0x2c, 0x7e, 0x52, 0xb4, 0x24, 0x4f, 0x6b, 0x92, 0x7f,
	0xba, 0x58, 0x4f, 0xe4, 0x3c, 0xe8, 0xf5, 0xe2, 0x1f, 0xe5, 0xa9, 0xd7, 0x8b, 0x7d, 0x68, 0x06,
	0x5c, 0x2d, 0xc7, 0x41, 0x5f, 0x59, 0x56, 0x75, 0x1b, 0x01, 0xef, 0xaa, 0xb3, 0x7a, 0x1e, 0x08,
	0x22, 0x6f, 0x8c, 0x87, 0xa3, 0x89, 0x71, 0x8d, 0x30, 0x88, 0xae, 0xe5, 0x59, 0x3a, 0xe4, 0x06,
	0x87, 0xc1, 0xf0, 0xce, 0x18, 0x67, 0x4e, 0x52, 0x87, 0x80, 0x7b, 0x8c, 0x60, 0x9f, 0x46, 0xc3,
	0x3b, 0x15, 0xc0, 0xaa, 0x0b, 0x01, 0x77, 0x0d, 0x44, 0x4a, 0x1d, 0x63, 0x66, 0xa4, 0xea, 0xf9,
	0xaa, 0x31, 0xc6, 0x4c, 0x4b, 0x55, 0x2f, 0x12, 0xb7, 0x06, 0x59, 0x33, 0x57, 0xe2, 0x5b, 0x8d,
	0xdc, 0x83, 0x06, 0x8d, 0xcd, 0x3e, 0x5a, 0xd7, 0x1e, 0xa5, 0x71, 0xba, 0x8d, 0x62, 0xa6, 0xbb,
	0xab, 0x79, 0x9c, 0x1c, 0x63, 0xa6, 0xba, 0xab, 0x41, 0x29, 0xae, 0x66, 0x82, 0x7a, 0x63, 0xa6,
	0x3d, 0x4e, 0x54, 0x1c, 0x35, 0xda, 0xbc, 0x22, 0x18, 0x98, 0x24, 0x39, 0xfe, 0x6f, 0x0b, 0x20,
	0x7d, 0x15, 0x46, 0x2f, 0xa1, 0x99, 0x8c, 0x40, 0xe8, 0xdd, 0x39, 0x2f, 0x9c, 0xb6, 0x35, 0x8b,
	0x30, 0x69, 0x74, 0x0e, 0xeb, 0xd9, 0x07, 0x10, 0x64, 0x17, 0xbe, 0x8b, 0x68, 0x29, 0xfb, 0x0b,
	0xde, 0x4c, 0xd0, 0x67, 0x00, 0xe9, 0xf2, 0x8c, 0xac, 0x0c, 0x69, 0x6e, 0xf1, 0xb6, 0xf7, 0x0a,
	0x30, 0x46, 0xc4, 0x4b, 0x68, 0x26, 0x1b, 0x6e, 0xc6, 0x96, 0xfc, 0x6e, 0x9c, 0xb1, 0x65, 0x7a,
	0x1d, 0xfe, 0x14, 0x1a, 0x93, 0x2d, 0x14, 0xed, 0x66, 0xa8, 0x32, 0xdb, 0xab, 0xfd, 0xee, 0x0c,
	0x3c, 0xd5, 0x3f, 0xdd, 0xf3, 0x32, 0xfa, 0x4f, 0x6d, 0x98, 0x19, 0xfd, 0x67, 0xd6, 0xc2, 0xd7,
	0xb0, 0x99, 0xdf, 0xb8, 0xd0, 0x7b, 0x29, 0xf1, 0xec, 0x2e, 0x67, 0x3f, 0x9b, 0x83, 0x35, 0xe2,
	0xbe, 0x80, 0x8d, 0xdc, 0x12, 0x84, 0xf6, 0x73, 0xf4, 0xf9, 0xe5, 0xca, 0x7e, 0xaf, 0x18, 0x69,
	0x64, 0xf5, 0x60, 0xa7, 0x70, 0x52, 0x46, 0x1f, 0x3c, 0x60, 0x19, 0xb0, 0x3f, 0x5c, 0x4c, 0x64,
	0xee, 0xf8, 0x63, 0x09, 0x9e, 0x2f, 0x9d, 0x5b, 0x51, 0x67, 0x4a, 0xd6, 0xb2, 0xe1, 0xd9, 0xfe,
	0xf8, 0xe1, 0x0c, 0x46, 0x91, 0xaf, 0xe1, 0x69, 0xc1, 0xc4, 0x89, 0x9e, 0x27, 0x82, 0xe6, 0x8d,
	0xb3, 0xb6, 0xb3, 0x88, 0xc4, 0x48, 0x8f, 0x60, 0x6f, 0xee, 0x24, 0x88, 0x3e, 0x4a, 0x95, 0x5d,
	0x38, 0x89, 0xda, 0x47, 0xcb, 0x09, 0xd3, 0x0a, 0xcd, 0xce, 0x5a, 0x99, 0x0a, 0x9d, 0x19, 0x04,
	0x33, 0x15, 0x5a, 0x30, 0x9e, 0x75, 0x61, 0x7b, 0x7a, 0xd8, 0x41, 0xef, 0xa7, 0x6a, 0x14, 0x4d,
	0x55, 0xf6, 0xc1, 0x5c, 0x7c, 0xea, 0xeb, 0x82, 0x81, 0x21, 0xe3, 0xeb, 0x79, 0x73, 0x49, 0xc6,
	0xd7, 0xf3, 0x27, 0x0e, 0x02, 0xbb, 0xc5, 0x5f, 0x78, 0x94, 0xa6, 0xe4, 0x82, 0x99, 0xc1, 0x7e,
	0xb1, 0x84, 0x2a, 0xad, 0x8e, 0xc2, 0x0f, 0x5c, 0xa6, 0x3a, 0xe6, 0x7f, 0xe9, 0x33, 0xd5, 0xb1,
	0xe0, 0x2b, 0x69, 0x9f, 0xfc, 0xe9, 0x3f, 0x6b, 0x2f, 0xe1, 0xc7, 0x6f, 0x85, 0x88, 0xf9, 0x4f,
	0x3b, 0x1d, 0x9f, 0xf6, 0x79, 0x3b, 0xf9, 0xff, 0x60, 0xbb, 0x4f, 0xc3, 0x0e, 0x8e, 0x83, 0x0e,
	0xf3, 0x7b, 0x9d, 0x20, 0xf2, 0xc9, 0x6d, 0xfb, 0xad, 0x08, 0x87, 0x68, 0xe3, 0x57, 0x41, 0x34,
	0x38, 0x55, 0x14, 0xee, 0xd9, 0x49, 0xaf, 0xa6, 0x9e, 0x5e, 0x3f, 0xf9, 0x5f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x51, 0x7a, 0xcf, 0x02, 0x6d, 0x1c, 0x00, 0x00,
}
