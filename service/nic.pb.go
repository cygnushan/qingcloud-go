// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nic.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/chai2010/qingcloud-go/spec.pb/qingcloud_sdk_rule"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import "github.com/chai2010/qingcloud-go/request/data"

var _ = config.Config{}
var _ = request.Request{}
var _ = data.Operation{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type NicServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *NicServiceProperties) Reset()                    { *m = NicServiceProperties{} }
func (m *NicServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*NicServiceProperties) ProtoMessage()               {}
func (*NicServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{0} }

func (m *NicServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type CreateNicsInput struct {
}

func (m *CreateNicsInput) Reset()                    { *m = CreateNicsInput{} }
func (m *CreateNicsInput) String() string            { return proto.CompactTextString(m) }
func (*CreateNicsInput) ProtoMessage()               {}
func (*CreateNicsInput) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{1} }

type CreateNicsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateNicsOutput) Reset()                    { *m = CreateNicsOutput{} }
func (m *CreateNicsOutput) String() string            { return proto.CompactTextString(m) }
func (*CreateNicsOutput) ProtoMessage()               {}
func (*CreateNicsOutput) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{2} }

func (m *CreateNicsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CreateNicsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CreateNicsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DescribeNicsInput struct {
	Instances []string `protobuf:"bytes,1,rep,name=instances" json:"instances,omitempty"`
	Limit     int32    `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	NicName   string   `protobuf:"bytes,3,opt,name=nic_name,json=nicName" json:"nic_name,omitempty"`
	Nics      []string `protobuf:"bytes,4,rep,name=nics" json:"nics,omitempty"`
	Offset    int32    `protobuf:"varint,5,opt,name=offset" json:"offset,omitempty"`
	Status    string   `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	VxnetType int32    `protobuf:"varint,7,opt,name=vxnet_type,json=vxnetType" json:"vxnet_type,omitempty"`
	Vxnets    []string `protobuf:"bytes,8,rep,name=vxnets" json:"vxnets,omitempty"`
}

func (m *DescribeNicsInput) Reset()                    { *m = DescribeNicsInput{} }
func (m *DescribeNicsInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeNicsInput) ProtoMessage()               {}
func (*DescribeNicsInput) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{3} }

func (m *DescribeNicsInput) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *DescribeNicsInput) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeNicsInput) GetNicName() string {
	if m != nil {
		return m.NicName
	}
	return ""
}

func (m *DescribeNicsInput) GetNics() []string {
	if m != nil {
		return m.Nics
	}
	return nil
}

func (m *DescribeNicsInput) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeNicsInput) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DescribeNicsInput) GetVxnetType() int32 {
	if m != nil {
		return m.VxnetType
	}
	return 0
}

func (m *DescribeNicsInput) GetVxnets() []string {
	if m != nil {
		return m.Vxnets
	}
	return nil
}

type DescribeNicsOutput struct {
	Action     string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode    int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message    string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	NicSet     []*NIC `protobuf:"bytes,4,rep,name=nic_set,json=nicSet" json:"nic_set,omitempty"`
	TotalCount int32  `protobuf:"varint,5,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *DescribeNicsOutput) Reset()                    { *m = DescribeNicsOutput{} }
func (m *DescribeNicsOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeNicsOutput) ProtoMessage()               {}
func (*DescribeNicsOutput) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{4} }

func (m *DescribeNicsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeNicsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeNicsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeNicsOutput) GetNicSet() []*NIC {
	if m != nil {
		return m.NicSet
	}
	return nil
}

func (m *DescribeNicsOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type AttachNicsInput struct {
}

func (m *AttachNicsInput) Reset()                    { *m = AttachNicsInput{} }
func (m *AttachNicsInput) String() string            { return proto.CompactTextString(m) }
func (*AttachNicsInput) ProtoMessage()               {}
func (*AttachNicsInput) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{5} }

type AttachNicsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AttachNicsOutput) Reset()                    { *m = AttachNicsOutput{} }
func (m *AttachNicsOutput) String() string            { return proto.CompactTextString(m) }
func (*AttachNicsOutput) ProtoMessage()               {}
func (*AttachNicsOutput) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{6} }

func (m *AttachNicsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *AttachNicsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *AttachNicsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DetachNicsInput struct {
}

func (m *DetachNicsInput) Reset()                    { *m = DetachNicsInput{} }
func (m *DetachNicsInput) String() string            { return proto.CompactTextString(m) }
func (*DetachNicsInput) ProtoMessage()               {}
func (*DetachNicsInput) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{7} }

type DetachNicsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DetachNicsOutput) Reset()                    { *m = DetachNicsOutput{} }
func (m *DetachNicsOutput) String() string            { return proto.CompactTextString(m) }
func (*DetachNicsOutput) ProtoMessage()               {}
func (*DetachNicsOutput) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{8} }

func (m *DetachNicsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DetachNicsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DetachNicsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ModifyNicAttributesInput struct {
}

func (m *ModifyNicAttributesInput) Reset()                    { *m = ModifyNicAttributesInput{} }
func (m *ModifyNicAttributesInput) String() string            { return proto.CompactTextString(m) }
func (*ModifyNicAttributesInput) ProtoMessage()               {}
func (*ModifyNicAttributesInput) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{9} }

type ModifyNicAttributesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ModifyNicAttributesOutput) Reset()                    { *m = ModifyNicAttributesOutput{} }
func (m *ModifyNicAttributesOutput) String() string            { return proto.CompactTextString(m) }
func (*ModifyNicAttributesOutput) ProtoMessage()               {}
func (*ModifyNicAttributesOutput) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{10} }

func (m *ModifyNicAttributesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ModifyNicAttributesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ModifyNicAttributesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteNicsInput struct {
}

func (m *DeleteNicsInput) Reset()                    { *m = DeleteNicsInput{} }
func (m *DeleteNicsInput) String() string            { return proto.CompactTextString(m) }
func (*DeleteNicsInput) ProtoMessage()               {}
func (*DeleteNicsInput) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{11} }

type DeleteNicsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteNicsOutput) Reset()                    { *m = DeleteNicsOutput{} }
func (m *DeleteNicsOutput) String() string            { return proto.CompactTextString(m) }
func (*DeleteNicsOutput) ProtoMessage()               {}
func (*DeleteNicsOutput) Descriptor() ([]byte, []int) { return fileDescriptor14, []int{12} }

func (m *DeleteNicsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DeleteNicsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DeleteNicsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*NicServiceProperties)(nil), "service.NicServiceProperties")
	proto.RegisterType((*CreateNicsInput)(nil), "service.CreateNicsInput")
	proto.RegisterType((*CreateNicsOutput)(nil), "service.CreateNicsOutput")
	proto.RegisterType((*DescribeNicsInput)(nil), "service.DescribeNicsInput")
	proto.RegisterType((*DescribeNicsOutput)(nil), "service.DescribeNicsOutput")
	proto.RegisterType((*AttachNicsInput)(nil), "service.AttachNicsInput")
	proto.RegisterType((*AttachNicsOutput)(nil), "service.AttachNicsOutput")
	proto.RegisterType((*DetachNicsInput)(nil), "service.DetachNicsInput")
	proto.RegisterType((*DetachNicsOutput)(nil), "service.DetachNicsOutput")
	proto.RegisterType((*ModifyNicAttributesInput)(nil), "service.ModifyNicAttributesInput")
	proto.RegisterType((*ModifyNicAttributesOutput)(nil), "service.ModifyNicAttributesOutput")
	proto.RegisterType((*DeleteNicsInput)(nil), "service.DeleteNicsInput")
	proto.RegisterType((*DeleteNicsOutput)(nil), "service.DeleteNicsOutput")
}

type NicServiceInterface interface {
	CreateNics(in *CreateNicsInput) (out *CreateNicsOutput, err error)
	DescribeNics(in *DescribeNicsInput) (out *DescribeNicsOutput, err error)
	AttachNics(in *AttachNicsInput) (out *AttachNicsOutput, err error)
	DetachNics(in *DetachNicsInput) (out *DetachNicsOutput, err error)
	ModifyNicAttributes(in *ModifyNicAttributesInput) (out *ModifyNicAttributesOutput, err error)
	DeleteNics(in *DeleteNicsInput) (out *DeleteNicsOutput, err error)
}

type NicService struct {
	Config           *config.Config
	Properties       *NicServiceProperties
	LastResponseBody string
}

func NewNicService(conf *config.Config, zone string) (p *NicService) {
	return &NicService{
		Config:     conf,
		Properties: &NicServiceProperties{Zone: zone},
	}
}

func (s *QingCloudService) Nic(zone string) (*NicService, error) {
	properties := &NicServiceProperties{
		Zone: zone,
	}

	return &NicService{Config: s.Config, Properties: properties}, nil
}

func (p *NicService) CreateNics(in *CreateNicsInput) (out *CreateNicsOutput, err error) {
	if in == nil {
		in = &CreateNicsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateNics",
		RequestMethod: "GET", // GET or POST
	}

	x := &CreateNicsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *CreateNicsInput) Validate() error {
	return nil
}

func (p *NicService) DescribeNics(in *DescribeNicsInput) (out *DescribeNicsOutput, err error) {
	if in == nil {
		in = &DescribeNicsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeNics",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeNicsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DescribeNicsInput) Validate() error {
	return nil
}

func (p *NicService) AttachNics(in *AttachNicsInput) (out *AttachNicsOutput, err error) {
	if in == nil {
		in = &AttachNicsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "AttachNics",
		RequestMethod: "GET", // GET or POST
	}

	x := &AttachNicsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *AttachNicsInput) Validate() error {
	return nil
}

func (p *NicService) DetachNics(in *DetachNicsInput) (out *DetachNicsOutput, err error) {
	if in == nil {
		in = &DetachNicsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DetachNics",
		RequestMethod: "GET", // GET or POST
	}

	x := &DetachNicsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DetachNicsInput) Validate() error {
	return nil
}

func (p *NicService) ModifyNicAttributes(in *ModifyNicAttributesInput) (out *ModifyNicAttributesOutput, err error) {
	if in == nil {
		in = &ModifyNicAttributesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifyNicAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &ModifyNicAttributesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *ModifyNicAttributesInput) Validate() error {
	return nil
}

func (p *NicService) DeleteNics(in *DeleteNicsInput) (out *DeleteNicsOutput, err error) {
	if in == nil {
		in = &DeleteNicsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteNics",
		RequestMethod: "GET", // GET or POST
	}

	x := &DeleteNicsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DeleteNicsInput) Validate() error {
	return nil
}

func init() { proto.RegisterFile("nic.proto", fileDescriptor14) }

var fileDescriptor14 = []byte{
	// 552 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x4b, 0x8e, 0xd3, 0x40,
	0x10, 0x95, 0xc9, 0x6f, 0x5c, 0x19, 0x69, 0x26, 0x4d, 0x84, 0x3a, 0x86, 0x11, 0xc1, 0x12, 0x52,
	0xc4, 0x22, 0x48, 0xc3, 0x09, 0xa2, 0x8c, 0x84, 0x66, 0x81, 0x81, 0xc0, 0x12, 0xc9, 0x72, 0x3a,
	0x95, 0x4c, 0x8b, 0xa4, 0xdb, 0xb8, 0xcb, 0x23, 0xc2, 0x11, 0xb8, 0x09, 0x07, 0x62, 0xc9, 0x21,
	0xb8, 0x01, 0x6a, 0xdb, 0x89, 0x9d, 0x0f, 0xb3, 0xcb, 0xc6, 0x72, 0xbd, 0x76, 0xd5, 0xab, 0xe7,
	0x7a, 0x5d, 0xe0, 0x2a, 0x29, 0x86, 0x71, 0xa2, 0x49, 0xb3, 0x96, 0xc1, 0xe4, 0x5e, 0x0a, 0xf4,
	0xda, 0xb4, 0x8e, 0xd1, 0xe4, 0xa8, 0x77, 0xf5, 0x4d, 0xaa, 0x85, 0x58, 0xea, 0x74, 0x16, 0x9a,
	0xd9, 0xd7, 0x30, 0x49, 0x97, 0xf8, 0xda, 0x3e, 0xf2, 0x63, 0xff, 0x15, 0x74, 0x03, 0x29, 0x3e,
	0xe5, 0x99, 0x1f, 0x12, 0x1d, 0x63, 0x42, 0x12, 0x0d, 0x63, 0x50, 0xff, 0xa1, 0x15, 0x72, 0xa7,
	0xef, 0x0c, 0xdc, 0x49, 0xf6, 0xee, 0x77, 0xe0, 0x62, 0x9c, 0x60, 0x44, 0x18, 0x48, 0x61, 0x6e,
	0x55, 0x9c, 0x92, 0x1f, 0xc2, 0x65, 0x09, 0xbd, 0x4f, 0x29, 0x4e, 0x89, 0x3d, 0x81, 0x66, 0x24,
	0x48, 0x6a, 0x55, 0x24, 0x17, 0x11, 0xeb, 0xc1, 0x59, 0x82, 0x14, 0x0a, 0x3d, 0x43, 0xfe, 0xa8,
	0xef, 0x0c, 0x1a, 0x93, 0x56, 0x82, 0x34, 0xd6, 0x33, 0x64, 0x1c, 0x5a, 0x2b, 0x34, 0x26, 0x5a,
	0x20, 0xaf, 0x65, 0x39, 0x9b, 0xd0, 0xff, 0xe3, 0x40, 0xe7, 0x06, 0x8d, 0x48, 0xe4, 0xb4, 0xa4,
	0x65, 0xcf, 0xc0, 0x95, 0xca, 0x50, 0xa4, 0x04, 0x1a, 0xee, 0xf4, 0x6b, 0x03, 0x77, 0x52, 0x02,
	0xac, 0x0b, 0x8d, 0xa5, 0x5c, 0x49, 0x2a, 0x58, 0xf2, 0xc0, 0xd2, 0x2b, 0x29, 0x42, 0x15, 0xad,
	0xb6, 0x24, 0x4a, 0x8a, 0x20, 0x5a, 0xa1, 0x15, 0xab, 0xa4, 0x30, 0xbc, 0x9e, 0x55, 0xca, 0xde,
	0xad, 0x0a, 0x3d, 0x9f, 0x1b, 0x24, 0xde, 0xc8, 0xaa, 0x14, 0x91, 0xc5, 0x0d, 0x45, 0x94, 0x1a,
	0xde, 0xcc, 0xd5, 0xe5, 0x11, 0xbb, 0x02, 0xb8, 0xff, 0xae, 0x90, 0x42, 0xfb, 0xf3, 0x79, 0x2b,
	0xcb, 0x71, 0x33, 0xe4, 0xf3, 0x3a, 0x46, 0x9b, 0x96, 0x05, 0x86, 0x9f, 0x65, 0x24, 0x45, 0xe4,
	0xff, 0x72, 0x80, 0x55, 0xf5, 0x9d, 0xe0, 0x1f, 0xb2, 0x97, 0x60, 0x95, 0x86, 0x56, 0x8b, 0x55,
	0xd8, 0xbe, 0x3e, 0x1f, 0x16, 0x56, 0x19, 0x06, 0xb7, 0xe3, 0x49, 0x53, 0x59, 0x03, 0x10, 0x7b,
	0x0e, 0x6d, 0xd2, 0x14, 0x2d, 0x43, 0xa1, 0x53, 0xb5, 0x91, 0x0d, 0x19, 0x34, 0xb6, 0x88, 0x9d,
	0xff, 0x88, 0x28, 0x12, 0x77, 0x3b, 0xf3, 0x2f, 0xa1, 0x53, 0xcc, 0xbf, 0x03, 0x17, 0x37, 0x78,
	0xc0, 0x59, 0x42, 0xa7, 0xe0, 0xf4, 0x80, 0xbf, 0xd3, 0x33, 0x39, 0x5f, 0x07, 0x52, 0x8c, 0x88,
	0x12, 0x39, 0x4d, 0x09, 0x0b, 0xf2, 0x3b, 0xe8, 0x1d, 0x39, 0x3b, 0x99, 0xf2, 0x25, 0xee, 0xdd,
	0xb6, 0x12, 0x3a, 0x01, 0xe7, 0xf5, 0xef, 0x1a, 0x40, 0xb9, 0x0e, 0xd8, 0x08, 0xa0, 0xbc, 0xdd,
	0x8c, 0x6f, 0x5d, 0xb3, 0xb7, 0x05, 0xbc, 0xde, 0x91, 0x93, 0xa2, 0xbd, 0xb7, 0x70, 0x5e, 0xb5,
	0x37, 0xf3, 0xb6, 0x9f, 0x1e, 0xdc, 0x6a, 0xef, 0xe9, 0xd1, 0xb3, 0xa2, 0xd0, 0x08, 0xa0, 0x74,
	0x5a, 0xa5, 0x97, 0x3d, 0x47, 0x56, 0x7a, 0x39, 0x30, 0xe6, 0x08, 0xa0, 0x34, 0x4e, 0xa5, 0xc4,
	0x9e, 0xc1, 0x2a, 0x25, 0x0e, 0x7c, 0xf6, 0x05, 0x1e, 0x1f, 0x19, 0x3f, 0x7b, 0xb1, 0xcd, 0xf8,
	0x9f, 0x71, 0x3c, 0xff, 0xa1, 0x4f, 0xaa, 0x0d, 0x6e, 0xe6, 0xbb, 0xd3, 0xe0, 0x8e, 0x0f, 0x76,
	0x1a, 0xdc, 0xb5, 0x83, 0xd7, 0xfd, 0xf9, 0xb7, 0x7e, 0x09, 0xee, 0x47, 0xa9, 0x16, 0x63, 0xbb,
	0xf4, 0x59, 0x2d, 0x90, 0x62, 0xda, 0xcc, 0x96, 0xfd, 0x9b, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xae, 0xf0, 0x53, 0x65, 0x2e, 0x06, 0x00, 0x00,
}
