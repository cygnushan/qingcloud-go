// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vxnet.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/chai2010/qingcloud-go/spec.pb/qingcloud_sdk_rule"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import "github.com/chai2010/qingcloud-go/request/data"

var _ = config.Config{}
var _ = request.Request{}
var _ = data.Operation{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type VxnetServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *VxnetServiceProperties) Reset()                    { *m = VxnetServiceProperties{} }
func (m *VxnetServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*VxnetServiceProperties) ProtoMessage()               {}
func (*VxnetServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{0} }

func (m *VxnetServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type DescribeVxnetsInput struct {
	Vxnets     []string `protobuf:"bytes,1,rep,name=vxnets" json:"vxnets,omitempty"`
	VxnetType  int32    `protobuf:"varint,2,opt,name=vxnet_type,json=vxnetType" json:"vxnet_type,omitempty"`
	SearchWord string   `protobuf:"bytes,3,opt,name=search_word,json=searchWord" json:"search_word,omitempty"`
	Tags       []string `protobuf:"bytes,4,rep,name=tags" json:"tags,omitempty"`
	Verbose    int32    `protobuf:"varint,5,opt,name=verbose" json:"verbose,omitempty"`
	Offset     int32    `protobuf:"varint,6,opt,name=offset" json:"offset,omitempty"`
	Limit      int32    `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
}

func (m *DescribeVxnetsInput) Reset()                    { *m = DescribeVxnetsInput{} }
func (m *DescribeVxnetsInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeVxnetsInput) ProtoMessage()               {}
func (*DescribeVxnetsInput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{1} }

func (m *DescribeVxnetsInput) GetVxnets() []string {
	if m != nil {
		return m.Vxnets
	}
	return nil
}

func (m *DescribeVxnetsInput) GetVxnetType() int32 {
	if m != nil {
		return m.VxnetType
	}
	return 0
}

func (m *DescribeVxnetsInput) GetSearchWord() string {
	if m != nil {
		return m.SearchWord
	}
	return ""
}

func (m *DescribeVxnetsInput) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *DescribeVxnetsInput) GetVerbose() int32 {
	if m != nil {
		return m.Verbose
	}
	return 0
}

func (m *DescribeVxnetsInput) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeVxnetsInput) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type DescribeVxnetsOutput struct {
	Action     string                               `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode    int32                                `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message    string                               `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	VxnetSet   []*DescribeVxnetsOutput_ResponseItem `protobuf:"bytes,4,rep,name=vxnet_set,json=vxnetSet" json:"vxnet_set,omitempty"`
	TotalCount int32                                `protobuf:"varint,5,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *DescribeVxnetsOutput) Reset()                    { *m = DescribeVxnetsOutput{} }
func (m *DescribeVxnetsOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeVxnetsOutput) ProtoMessage()               {}
func (*DescribeVxnetsOutput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{2} }

func (m *DescribeVxnetsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeVxnetsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeVxnetsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeVxnetsOutput) GetVxnetSet() []*DescribeVxnetsOutput_ResponseItem {
	if m != nil {
		return m.VxnetSet
	}
	return nil
}

func (m *DescribeVxnetsOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type DescribeVxnetsOutput_ResponseItem struct {
	VxnetType   int32                       `protobuf:"varint,1,opt,name=vxnet_type,json=vxnetType" json:"vxnet_type,omitempty"`
	VxnetId     string                      `protobuf:"bytes,2,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
	VxnetName   string                      `protobuf:"bytes,3,opt,name=vxnet_name,json=vxnetName" json:"vxnet_name,omitempty"`
	CreateTime  *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description string                      `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	InstanceIds []string                    `protobuf:"bytes,6,rep,name=instance_ids,json=instanceIds" json:"instance_ids,omitempty"`
	Router      *Router                     `protobuf:"bytes,7,opt,name=router" json:"router,omitempty"`
}

func (m *DescribeVxnetsOutput_ResponseItem) Reset()         { *m = DescribeVxnetsOutput_ResponseItem{} }
func (m *DescribeVxnetsOutput_ResponseItem) String() string { return proto.CompactTextString(m) }
func (*DescribeVxnetsOutput_ResponseItem) ProtoMessage()    {}
func (*DescribeVxnetsOutput_ResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor30, []int{2, 0}
}

func (m *DescribeVxnetsOutput_ResponseItem) GetVxnetType() int32 {
	if m != nil {
		return m.VxnetType
	}
	return 0
}

func (m *DescribeVxnetsOutput_ResponseItem) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

func (m *DescribeVxnetsOutput_ResponseItem) GetVxnetName() string {
	if m != nil {
		return m.VxnetName
	}
	return ""
}

func (m *DescribeVxnetsOutput_ResponseItem) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *DescribeVxnetsOutput_ResponseItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DescribeVxnetsOutput_ResponseItem) GetInstanceIds() []string {
	if m != nil {
		return m.InstanceIds
	}
	return nil
}

func (m *DescribeVxnetsOutput_ResponseItem) GetRouter() *Router {
	if m != nil {
		return m.Router
	}
	return nil
}

type CreateVxnetsInput struct {
	VxnetName  string `protobuf:"bytes,1,opt,name=vxnet_name,json=vxnetName" json:"vxnet_name,omitempty"`
	VxnetType  int32  `protobuf:"varint,2,opt,name=vxnet_type,json=vxnetType" json:"vxnet_type,omitempty"`
	Count      int32  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	TargetUser string `protobuf:"bytes,4,opt,name=target_user,json=targetUser" json:"target_user,omitempty"`
}

func (m *CreateVxnetsInput) Reset()                    { *m = CreateVxnetsInput{} }
func (m *CreateVxnetsInput) String() string            { return proto.CompactTextString(m) }
func (*CreateVxnetsInput) ProtoMessage()               {}
func (*CreateVxnetsInput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{3} }

func (m *CreateVxnetsInput) GetVxnetName() string {
	if m != nil {
		return m.VxnetName
	}
	return ""
}

func (m *CreateVxnetsInput) GetVxnetType() int32 {
	if m != nil {
		return m.VxnetType
	}
	return 0
}

func (m *CreateVxnetsInput) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *CreateVxnetsInput) GetTargetUser() string {
	if m != nil {
		return m.TargetUser
	}
	return ""
}

type CreateVxnetsOutput struct {
	Action  string   `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32    `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Vxnets  []string `protobuf:"bytes,4,rep,name=vxnets" json:"vxnets,omitempty"`
}

func (m *CreateVxnetsOutput) Reset()                    { *m = CreateVxnetsOutput{} }
func (m *CreateVxnetsOutput) String() string            { return proto.CompactTextString(m) }
func (*CreateVxnetsOutput) ProtoMessage()               {}
func (*CreateVxnetsOutput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{4} }

func (m *CreateVxnetsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CreateVxnetsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CreateVxnetsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateVxnetsOutput) GetVxnets() []string {
	if m != nil {
		return m.Vxnets
	}
	return nil
}

type DeleteVxnetsInput struct {
	Vxnets []string `protobuf:"bytes,1,rep,name=vxnets" json:"vxnets,omitempty"`
}

func (m *DeleteVxnetsInput) Reset()                    { *m = DeleteVxnetsInput{} }
func (m *DeleteVxnetsInput) String() string            { return proto.CompactTextString(m) }
func (*DeleteVxnetsInput) ProtoMessage()               {}
func (*DeleteVxnetsInput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{5} }

func (m *DeleteVxnetsInput) GetVxnets() []string {
	if m != nil {
		return m.Vxnets
	}
	return nil
}

type DeleteVxnetsOutput struct {
	Action  string   `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32    `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Vxnets  []string `protobuf:"bytes,4,rep,name=vxnets" json:"vxnets,omitempty"`
}

func (m *DeleteVxnetsOutput) Reset()                    { *m = DeleteVxnetsOutput{} }
func (m *DeleteVxnetsOutput) String() string            { return proto.CompactTextString(m) }
func (*DeleteVxnetsOutput) ProtoMessage()               {}
func (*DeleteVxnetsOutput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{6} }

func (m *DeleteVxnetsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DeleteVxnetsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DeleteVxnetsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteVxnetsOutput) GetVxnets() []string {
	if m != nil {
		return m.Vxnets
	}
	return nil
}

type JoinVxnetInput struct {
	Vxnet     string   `protobuf:"bytes,1,opt,name=vxnet" json:"vxnet,omitempty"`
	Instances []string `protobuf:"bytes,2,rep,name=instances" json:"instances,omitempty"`
}

func (m *JoinVxnetInput) Reset()                    { *m = JoinVxnetInput{} }
func (m *JoinVxnetInput) String() string            { return proto.CompactTextString(m) }
func (*JoinVxnetInput) ProtoMessage()               {}
func (*JoinVxnetInput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{7} }

func (m *JoinVxnetInput) GetVxnet() string {
	if m != nil {
		return m.Vxnet
	}
	return ""
}

func (m *JoinVxnetInput) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

type JoinVxnetOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *JoinVxnetOutput) Reset()                    { *m = JoinVxnetOutput{} }
func (m *JoinVxnetOutput) String() string            { return proto.CompactTextString(m) }
func (*JoinVxnetOutput) ProtoMessage()               {}
func (*JoinVxnetOutput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{8} }

func (m *JoinVxnetOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *JoinVxnetOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *JoinVxnetOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *JoinVxnetOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type LeaveVxnetInput struct {
	Vxnet     string   `protobuf:"bytes,1,opt,name=vxnet" json:"vxnet,omitempty"`
	Instances []string `protobuf:"bytes,2,rep,name=instances" json:"instances,omitempty"`
}

func (m *LeaveVxnetInput) Reset()                    { *m = LeaveVxnetInput{} }
func (m *LeaveVxnetInput) String() string            { return proto.CompactTextString(m) }
func (*LeaveVxnetInput) ProtoMessage()               {}
func (*LeaveVxnetInput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{9} }

func (m *LeaveVxnetInput) GetVxnet() string {
	if m != nil {
		return m.Vxnet
	}
	return ""
}

func (m *LeaveVxnetInput) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

type LeaveVxnetOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *LeaveVxnetOutput) Reset()                    { *m = LeaveVxnetOutput{} }
func (m *LeaveVxnetOutput) String() string            { return proto.CompactTextString(m) }
func (*LeaveVxnetOutput) ProtoMessage()               {}
func (*LeaveVxnetOutput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{10} }

func (m *LeaveVxnetOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *LeaveVxnetOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *LeaveVxnetOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *LeaveVxnetOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type ModifyVxnetAttributesInput struct {
	Vxnet       string `protobuf:"bytes,1,opt,name=vxnet" json:"vxnet,omitempty"`
	VxnetName   string `protobuf:"bytes,2,opt,name=vxnet_name,json=vxnetName" json:"vxnet_name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *ModifyVxnetAttributesInput) Reset()                    { *m = ModifyVxnetAttributesInput{} }
func (m *ModifyVxnetAttributesInput) String() string            { return proto.CompactTextString(m) }
func (*ModifyVxnetAttributesInput) ProtoMessage()               {}
func (*ModifyVxnetAttributesInput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{11} }

func (m *ModifyVxnetAttributesInput) GetVxnet() string {
	if m != nil {
		return m.Vxnet
	}
	return ""
}

func (m *ModifyVxnetAttributesInput) GetVxnetName() string {
	if m != nil {
		return m.VxnetName
	}
	return ""
}

func (m *ModifyVxnetAttributesInput) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ModifyVxnetAttributesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ModifyVxnetAttributesOutput) Reset()                    { *m = ModifyVxnetAttributesOutput{} }
func (m *ModifyVxnetAttributesOutput) String() string            { return proto.CompactTextString(m) }
func (*ModifyVxnetAttributesOutput) ProtoMessage()               {}
func (*ModifyVxnetAttributesOutput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{12} }

func (m *ModifyVxnetAttributesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ModifyVxnetAttributesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ModifyVxnetAttributesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DescribeVxnetInstancesInput struct {
	Vxnet        string   `protobuf:"bytes,1,opt,name=vxnet" json:"vxnet,omitempty"`
	Instances    []string `protobuf:"bytes,2,rep,name=instances" json:"instances,omitempty"`
	InstanceType string   `protobuf:"bytes,3,opt,name=instance_type,json=instanceType" json:"instance_type,omitempty"`
	Status       string   `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	Image        string   `protobuf:"bytes,5,opt,name=image" json:"image,omitempty"`
	Offset       int32    `protobuf:"varint,6,opt,name=offset" json:"offset,omitempty"`
	Limit        int32    `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
}

func (m *DescribeVxnetInstancesInput) Reset()                    { *m = DescribeVxnetInstancesInput{} }
func (m *DescribeVxnetInstancesInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeVxnetInstancesInput) ProtoMessage()               {}
func (*DescribeVxnetInstancesInput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{13} }

func (m *DescribeVxnetInstancesInput) GetVxnet() string {
	if m != nil {
		return m.Vxnet
	}
	return ""
}

func (m *DescribeVxnetInstancesInput) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *DescribeVxnetInstancesInput) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *DescribeVxnetInstancesInput) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DescribeVxnetInstancesInput) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *DescribeVxnetInstancesInput) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeVxnetInstancesInput) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type DescribeVxnetInstancesOutput struct {
	Action      string                                       `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode     int32                                        `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message     string                                       `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	InstanceSet []*DescribeVxnetInstancesOutput_ResponseItem `protobuf:"bytes,4,rep,name=instance_set,json=instanceSet" json:"instance_set,omitempty"`
	TotalCount  int32                                        `protobuf:"varint,5,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *DescribeVxnetInstancesOutput) Reset()                    { *m = DescribeVxnetInstancesOutput{} }
func (m *DescribeVxnetInstancesOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeVxnetInstancesOutput) ProtoMessage()               {}
func (*DescribeVxnetInstancesOutput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{14} }

func (m *DescribeVxnetInstancesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeVxnetInstancesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeVxnetInstancesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeVxnetInstancesOutput) GetInstanceSet() []*DescribeVxnetInstancesOutput_ResponseItem {
	if m != nil {
		return m.InstanceSet
	}
	return nil
}

func (m *DescribeVxnetInstancesOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type DescribeVxnetInstancesOutput_ResponseItem struct {
	VxnetId          string                      `protobuf:"bytes,1,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
	InstanceId       string                      `protobuf:"bytes,2,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	InstanceName     string                      `protobuf:"bytes,3,opt,name=instance_name,json=instanceName" json:"instance_name,omitempty"`
	Description      string                      `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	InstanceType     string                      `protobuf:"bytes,5,opt,name=instance_type,json=instanceType" json:"instance_type,omitempty"`
	VcpusCurrent     int32                       `protobuf:"varint,6,opt,name=vcpus_current,json=vcpusCurrent" json:"vcpus_current,omitempty"`
	MemoryCurrent    int32                       `protobuf:"varint,7,opt,name=memory_current,json=memoryCurrent" json:"memory_current,omitempty"`
	Status           string                      `protobuf:"bytes,8,opt,name=status" json:"status,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,9,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,10,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,11,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	ImageId          string                      `protobuf:"bytes,12,opt,name=image_id,json=imageId" json:"image_id,omitempty"`
	DhcpOptions      map[string]string           `protobuf:"bytes,13,rep,name=dhcp_options,json=dhcpOptions" json:"dhcp_options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PrivateIp        string                      `protobuf:"bytes,14,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
}

func (m *DescribeVxnetInstancesOutput_ResponseItem) Reset() {
	*m = DescribeVxnetInstancesOutput_ResponseItem{}
}
func (m *DescribeVxnetInstancesOutput_ResponseItem) String() string { return proto.CompactTextString(m) }
func (*DescribeVxnetInstancesOutput_ResponseItem) ProtoMessage()    {}
func (*DescribeVxnetInstancesOutput_ResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor30, []int{14, 0}
}

func (m *DescribeVxnetInstancesOutput_ResponseItem) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

func (m *DescribeVxnetInstancesOutput_ResponseItem) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *DescribeVxnetInstancesOutput_ResponseItem) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *DescribeVxnetInstancesOutput_ResponseItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DescribeVxnetInstancesOutput_ResponseItem) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *DescribeVxnetInstancesOutput_ResponseItem) GetVcpusCurrent() int32 {
	if m != nil {
		return m.VcpusCurrent
	}
	return 0
}

func (m *DescribeVxnetInstancesOutput_ResponseItem) GetMemoryCurrent() int32 {
	if m != nil {
		return m.MemoryCurrent
	}
	return 0
}

func (m *DescribeVxnetInstancesOutput_ResponseItem) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DescribeVxnetInstancesOutput_ResponseItem) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *DescribeVxnetInstancesOutput_ResponseItem) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *DescribeVxnetInstancesOutput_ResponseItem) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *DescribeVxnetInstancesOutput_ResponseItem) GetImageId() string {
	if m != nil {
		return m.ImageId
	}
	return ""
}

func (m *DescribeVxnetInstancesOutput_ResponseItem) GetDhcpOptions() map[string]string {
	if m != nil {
		return m.DhcpOptions
	}
	return nil
}

func (m *DescribeVxnetInstancesOutput_ResponseItem) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func init() {
	proto.RegisterType((*VxnetServiceProperties)(nil), "service.VxnetServiceProperties")
	proto.RegisterType((*DescribeVxnetsInput)(nil), "service.DescribeVxnetsInput")
	proto.RegisterType((*DescribeVxnetsOutput)(nil), "service.DescribeVxnetsOutput")
	proto.RegisterType((*DescribeVxnetsOutput_ResponseItem)(nil), "service.DescribeVxnetsOutput.ResponseItem")
	proto.RegisterType((*CreateVxnetsInput)(nil), "service.CreateVxnetsInput")
	proto.RegisterType((*CreateVxnetsOutput)(nil), "service.CreateVxnetsOutput")
	proto.RegisterType((*DeleteVxnetsInput)(nil), "service.DeleteVxnetsInput")
	proto.RegisterType((*DeleteVxnetsOutput)(nil), "service.DeleteVxnetsOutput")
	proto.RegisterType((*JoinVxnetInput)(nil), "service.JoinVxnetInput")
	proto.RegisterType((*JoinVxnetOutput)(nil), "service.JoinVxnetOutput")
	proto.RegisterType((*LeaveVxnetInput)(nil), "service.LeaveVxnetInput")
	proto.RegisterType((*LeaveVxnetOutput)(nil), "service.LeaveVxnetOutput")
	proto.RegisterType((*ModifyVxnetAttributesInput)(nil), "service.ModifyVxnetAttributesInput")
	proto.RegisterType((*ModifyVxnetAttributesOutput)(nil), "service.ModifyVxnetAttributesOutput")
	proto.RegisterType((*DescribeVxnetInstancesInput)(nil), "service.DescribeVxnetInstancesInput")
	proto.RegisterType((*DescribeVxnetInstancesOutput)(nil), "service.DescribeVxnetInstancesOutput")
	proto.RegisterType((*DescribeVxnetInstancesOutput_ResponseItem)(nil), "service.DescribeVxnetInstancesOutput.ResponseItem")
}

type VxnetServiceInterface interface {
	DescribeVxnets(in *DescribeVxnetsInput) (out *DescribeVxnetsOutput, err error)
	CreateVxnets(in *CreateVxnetsInput) (out *CreateVxnetsOutput, err error)
	DeleteVxnets(in *DeleteVxnetsInput) (out *DeleteVxnetsOutput, err error)
	JoinVxnet(in *JoinVxnetInput) (out *JoinVxnetOutput, err error)
	LeaveVxnet(in *LeaveVxnetInput) (out *LeaveVxnetOutput, err error)
	ModifyVxnetAttributes(in *ModifyVxnetAttributesInput) (out *ModifyVxnetAttributesOutput, err error)
	DescribeVxnetInstances(in *DescribeVxnetInstancesInput) (out *DescribeVxnetInstancesOutput, err error)
}

type VxnetService struct {
	Config           *config.Config
	Properties       *VxnetServiceProperties
	LastResponseBody string
}

func NewVxnetService(conf *config.Config, zone string) (p *VxnetService) {
	return &VxnetService{
		Config:     conf,
		Properties: &VxnetServiceProperties{Zone: zone},
	}
}

func (s *QingCloudService) Vxnet(zone string) (*VxnetService, error) {
	properties := &VxnetServiceProperties{
		Zone: zone,
	}

	return &VxnetService{Config: s.Config, Properties: properties}, nil
}

func (p *VxnetService) DescribeVxnets(in *DescribeVxnetsInput) (out *DescribeVxnetsOutput, err error) {
	if in == nil {
		in = &DescribeVxnetsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeVxnets",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeVxnetsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DescribeVxnetsInput) Validate() error {
	return nil
}

func (p *VxnetService) CreateVxnets(in *CreateVxnetsInput) (out *CreateVxnetsOutput, err error) {
	if in == nil {
		in = &CreateVxnetsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateVxnets",
		RequestMethod: "GET", // GET or POST
	}

	x := &CreateVxnetsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *CreateVxnetsInput) Validate() error {
	return nil
}

func (p *VxnetService) DeleteVxnets(in *DeleteVxnetsInput) (out *DeleteVxnetsOutput, err error) {
	if in == nil {
		in = &DeleteVxnetsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteVxnets",
		RequestMethod: "GET", // GET or POST
	}

	x := &DeleteVxnetsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DeleteVxnetsInput) Validate() error {
	return nil
}

func (p *VxnetService) JoinVxnet(in *JoinVxnetInput) (out *JoinVxnetOutput, err error) {
	if in == nil {
		in = &JoinVxnetInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "JoinVxnet",
		RequestMethod: "GET", // GET or POST
	}

	x := &JoinVxnetOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *JoinVxnetInput) Validate() error {
	return nil
}

func (p *VxnetService) LeaveVxnet(in *LeaveVxnetInput) (out *LeaveVxnetOutput, err error) {
	if in == nil {
		in = &LeaveVxnetInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "LeaveVxnet",
		RequestMethod: "GET", // GET or POST
	}

	x := &LeaveVxnetOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *LeaveVxnetInput) Validate() error {
	return nil
}

func (p *VxnetService) ModifyVxnetAttributes(in *ModifyVxnetAttributesInput) (out *ModifyVxnetAttributesOutput, err error) {
	if in == nil {
		in = &ModifyVxnetAttributesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifyVxnetAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &ModifyVxnetAttributesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *ModifyVxnetAttributesInput) Validate() error {
	return nil
}

func (p *VxnetService) DescribeVxnetInstances(in *DescribeVxnetInstancesInput) (out *DescribeVxnetInstancesOutput, err error) {
	if in == nil {
		in = &DescribeVxnetInstancesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeVxnetInstances",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeVxnetInstancesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DescribeVxnetInstancesInput) Validate() error {
	return nil
}

func init() { proto.RegisterFile("vxnet.proto", fileDescriptor30) }

var fileDescriptor30 = []byte{
	// 1126 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xdb, 0x6e, 0xdb, 0x46,
	0x13, 0x06, 0xad, 0x93, 0x35, 0x94, 0x1d, 0x7b, 0x7f, 0xc7, 0x3f, 0x4d, 0xdb, 0xb0, 0x2b, 0x27,
	0xa8, 0xd1, 0x14, 0x32, 0xe0, 0xde, 0x14, 0x0d, 0x10, 0x20, 0x90, 0x83, 0x40, 0x45, 0xd3, 0xb4,
	0x4c, 0xd2, 0x5e, 0x12, 0x14, 0xb9, 0x96, 0xe9, 0x48, 0x5c, 0x76, 0x77, 0xa9, 0x56, 0x7d, 0x82,
	0xb6, 0x97, 0x7d, 0x85, 0x3e, 0x4d, 0x6f, 0x0b, 0xf4, 0x05, 0xfa, 0x06, 0x7d, 0x83, 0x62, 0x67,
	0x79, 0x92, 0xc4, 0xf8, 0xd0, 0xc2, 0xb9, 0x11, 0x38, 0xb3, 0xb3, 0x73, 0xd8, 0xf9, 0x76, 0xbe,
	0x15, 0x98, 0xd3, 0x1f, 0x22, 0x2a, 0x7b, 0x31, 0x67, 0x92, 0x91, 0x96, 0xa0, 0x7c, 0x1a, 0xfa,
	0xd4, 0x36, 0xe5, 0x2c, 0xa6, 0x42, 0x6b, 0xed, 0xfd, 0xef, 0xc2, 0x68, 0xe4, 0x8f, 0x59, 0x12,
	0xb8, 0x22, 0x78, 0xeb, 0xf2, 0x64, 0x4c, 0x4f, 0xd4, 0x4f, 0xba, 0x7c, 0x30, 0x62, 0x6c, 0x34,
	0xa6, 0x27, 0x28, 0x0d, 0x93, 0xf3, 0x13, 0x19, 0x4e, 0xa8, 0x90, 0xde, 0x24, 0xd6, 0x06, 0xdd,
	0x8f, 0x61, 0xfb, 0x1b, 0x15, 0xe4, 0x95, 0x76, 0xfe, 0x15, 0x67, 0x31, 0xe5, 0x32, 0xa4, 0x82,
	0x10, 0xa8, 0xff, 0xc8, 0x22, 0x6a, 0x19, 0x87, 0xc6, 0x71, 0xdb, 0xc1, 0xef, 0xee, 0xef, 0x06,
	0xfc, 0xef, 0x8c, 0x0a, 0x9f, 0x87, 0x43, 0x8a, 0xdb, 0xc4, 0x20, 0x8a, 0x13, 0x49, 0xb6, 0xa1,
	0x89, 0xa9, 0x0a, 0xcb, 0x38, 0xac, 0x1d, 0xb7, 0x9d, 0x54, 0x22, 0xfb, 0x00, 0xf8, 0xe5, 0xaa,
	0x94, 0xad, 0x95, 0x43, 0xe3, 0xb8, 0xe1, 0xb4, 0x51, 0xf3, 0x7a, 0x16, 0x53, 0x72, 0x00, 0xa6,
	0xa0, 0x1e, 0xf7, 0x2f, 0xdc, 0xef, 0x19, 0x0f, 0xac, 0x1a, 0x46, 0x02, 0xad, 0xfa, 0x96, 0xf1,
	0x40, 0xe5, 0x20, 0xbd, 0x91, 0xb0, 0xea, 0xe8, 0x15, 0xbf, 0x89, 0x05, 0xad, 0x29, 0xe5, 0x43,
	0x26, 0xa8, 0xd5, 0x40, 0x87, 0x99, 0xa8, 0xb2, 0x60, 0xe7, 0xe7, 0x82, 0x4a, 0xab, 0x89, 0x0b,
	0xa9, 0x44, 0xb6, 0xa0, 0x31, 0x0e, 0x27, 0xa1, 0xb4, 0x5a, 0xa8, 0xd6, 0x42, 0xf7, 0xaf, 0x1a,
	0x6c, 0xcd, 0xd7, 0xf2, 0x32, 0x91, 0x69, 0x31, 0x9e, 0x2f, 0x43, 0x16, 0xa5, 0xa5, 0xa7, 0x12,
	0xd9, 0x81, 0x55, 0x4e, 0xa5, 0xeb, 0xb3, 0x20, 0x2b, 0xa5, 0xc5, 0xa9, 0xec, 0xb3, 0x80, 0xaa,
	0x9c, 0x26, 0x54, 0x08, 0x6f, 0x44, 0xd3, 0x22, 0x32, 0x91, 0x3c, 0x07, 0x5d, 0xaf, 0xab, 0xd2,
	0x52, 0x65, 0x98, 0xa7, 0x1f, 0xf5, 0xd2, 0x4e, 0xf6, 0xaa, 0xc2, 0xf7, 0x1c, 0x2a, 0x62, 0x16,
	0x09, 0x3a, 0x90, 0x74, 0xe2, 0xac, 0x4e, 0x75, 0x73, 0xa4, 0x3a, 0x2b, 0xc9, 0xa4, 0x37, 0x76,
	0x7d, 0x96, 0x44, 0x32, 0x2d, 0x1d, 0x50, 0xd5, 0x57, 0x1a, 0xfb, 0xd7, 0x15, 0xe8, 0x94, 0xf7,
	0x2e, 0x1c, 0xbe, 0xb1, 0x78, 0xf8, 0x3b, 0xa0, 0x9d, 0xbb, 0x61, 0x80, 0xe5, 0xb4, 0x9d, 0x16,
	0xca, 0x83, 0xa0, 0xd8, 0x19, 0x79, 0x93, 0xac, 0x22, 0xbd, 0xf3, 0x4b, 0x6f, 0x42, 0xc9, 0x63,
	0x30, 0x7d, 0x4e, 0x3d, 0x49, 0x5d, 0x85, 0x26, 0xab, 0x7e, 0x68, 0x1c, 0x9b, 0xa7, 0x76, 0x4f,
	0x43, 0xad, 0x97, 0x41, 0xad, 0xf7, 0x3a, 0x83, 0x9a, 0x03, 0xda, 0x5c, 0x29, 0xc8, 0x21, 0x98,
	0x01, 0x96, 0x1d, 0xe3, 0x11, 0x37, 0xd0, 0x79, 0x59, 0x45, 0x3e, 0x80, 0x4e, 0x18, 0x09, 0xe9,
	0x45, 0x3e, 0x75, 0xc3, 0x40, 0x58, 0x4d, 0x6c, 0xbe, 0x99, 0xe9, 0x06, 0x81, 0x20, 0x1f, 0x42,
	0x93, 0xb3, 0x44, 0x52, 0x8e, 0x2d, 0x35, 0x4f, 0xef, 0xe5, 0x47, 0xea, 0xa0, 0xda, 0x49, 0x97,
	0xbb, 0x3f, 0x19, 0xb0, 0xd9, 0xc7, 0xe0, 0x65, 0xb8, 0xce, 0xd7, 0x67, 0x2c, 0xd6, 0x77, 0x0d,
	0x6a, 0xb7, 0xa0, 0xa1, 0x7b, 0x50, 0xd3, 0x70, 0x42, 0x01, 0xfb, 0xe3, 0xf1, 0x11, 0x95, 0x6e,
	0x22, 0x28, 0xc7, 0x43, 0x69, 0x3b, 0xa0, 0x55, 0x6f, 0x04, 0xe5, 0xdd, 0x19, 0x90, 0x72, 0x26,
	0x77, 0x01, 0xb6, 0xe2, 0x1a, 0xd6, 0xcb, 0xd7, 0xb0, 0xfb, 0x08, 0x36, 0xcf, 0xe8, 0x98, 0xca,
	0x9b, 0xdc, 0x59, 0x95, 0x67, 0xd9, 0xf8, 0x7d, 0xe6, 0x79, 0x06, 0xeb, 0x9f, 0xb3, 0x30, 0xc2,
	0xc0, 0x3a, 0xc9, 0x2d, 0x68, 0xe0, 0x5a, 0x1a, 0x55, 0x0b, 0x64, 0x0f, 0xda, 0x19, 0x1a, 0x84,
	0xb5, 0x82, 0x2e, 0x0a, 0x45, 0x37, 0x81, 0x7b, 0xb9, 0x97, 0xbb, 0xc8, 0xfe, 0x3e, 0x34, 0x2f,
	0xd9, 0x50, 0x5d, 0x1b, 0xdd, 0xe4, 0xc6, 0x25, 0x1b, 0x0e, 0x82, 0xee, 0x33, 0xb8, 0xf7, 0x05,
	0xf5, 0xa6, 0xf4, 0x3f, 0x66, 0x3f, 0x85, 0x8d, 0xc2, 0xcd, 0x7b, 0x4c, 0x5f, 0x80, 0xfd, 0x82,
	0x05, 0xe1, 0xf9, 0x0c, 0x03, 0x3f, 0x95, 0x92, 0x87, 0xc3, 0x44, 0x52, 0x71, 0x55, 0x25, 0xf3,
	0xf7, 0x68, 0x65, 0xf1, 0x1e, 0x2d, 0x5c, 0xf5, 0xda, 0xd2, 0x55, 0xef, 0x5e, 0xc2, 0x6e, 0x65,
	0xd0, 0x3b, 0xa8, 0xbb, 0xfb, 0x87, 0x01, 0xbb, 0x73, 0x03, 0x77, 0x90, 0x9d, 0xf9, 0xbf, 0x6e,
	0x16, 0x39, 0x82, 0xb5, 0x7c, 0x54, 0xe1, 0xb0, 0xd0, 0x31, 0xf3, 0xf9, 0x85, 0xf3, 0x62, 0x1b,
	0x9a, 0x42, 0x7a, 0x32, 0x11, 0xe9, 0x81, 0xa7, 0x92, 0x0a, 0x18, 0x4e, 0x54, 0xa2, 0x7a, 0x06,
	0x6a, 0xe1, 0x96, 0x24, 0xf6, 0x73, 0x0b, 0xf6, 0xaa, 0x8b, 0xba, 0x0b, 0xe8, 0xbc, 0x29, 0x4d,
	0xe6, 0x82, 0xcf, 0x4e, 0xab, 0xf9, 0x6c, 0x21, 0x93, 0x79, 0x5e, 0xcb, 0xa7, 0xf9, 0x8d, 0xa8,
	0xed, 0xb7, 0xc6, 0x02, 0xb5, 0x95, 0xb9, 0xcb, 0x98, 0xe7, 0xae, 0x03, 0x30, 0x4b, 0xec, 0x91,
	0x82, 0x12, 0x0a, 0xf2, 0x98, 0xeb, 0x59, 0x89, 0xdf, 0xf2, 0xca, 0xaa, 0xa0, 0x5b, 0x5f, 0x66,
	0xa9, 0xa5, 0xd6, 0x37, 0x2a, 0x5a, 0x7f, 0x04, 0x6b, 0x53, 0x3f, 0x4e, 0x84, 0xeb, 0x27, 0x9c,
	0xd3, 0x28, 0xeb, 0x69, 0x07, 0x95, 0x7d, 0xad, 0x23, 0x0f, 0x61, 0x7d, 0x42, 0x27, 0x8c, 0xcf,
	0x72, 0x2b, 0xdd, 0xe2, 0x35, 0xad, 0xcd, 0xcc, 0x0a, 0x18, 0xad, 0xce, 0xc1, 0xe8, 0x11, 0x6c,
	0x4a, 0xee, 0x45, 0x22, 0x54, 0x69, 0xb9, 0xa9, 0x49, 0x1b, 0x4d, 0x36, 0x8a, 0x85, 0x57, 0xda,
	0x78, 0x81, 0xba, 0xe1, 0x56, 0xd4, 0xfd, 0x18, 0x4c, 0xed, 0x5e, 0x6f, 0x36, 0xaf, 0xdf, 0xac,
	0xcd, 0x71, 0xf3, 0x0e, 0xac, 0x22, 0xc0, 0x55, 0x53, 0x3a, 0xba, 0x65, 0x28, 0x0f, 0x02, 0x72,
	0x0e, 0x9d, 0xe0, 0xc2, 0x8f, 0x5d, 0x86, 0x27, 0x2b, 0xac, 0x35, 0x84, 0x55, 0xff, 0xf6, 0xb0,
	0xea, 0x9d, 0x5d, 0xf8, 0xf1, 0x4b, 0xed, 0xe5, 0x59, 0x24, 0xf9, 0xcc, 0x31, 0x83, 0x42, 0xa3,
	0xc6, 0x55, 0xcc, 0xc3, 0xa9, 0xaa, 0x3e, 0x8c, 0xad, 0x75, 0x3d, 0xae, 0x52, 0xcd, 0x20, 0xb6,
	0x9f, 0xc0, 0xc6, 0xe2, 0x7e, 0xb2, 0x01, 0xb5, 0xb7, 0x74, 0x96, 0x62, 0x4c, 0x7d, 0xe2, 0x98,
	0xf0, 0xc6, 0x49, 0x36, 0xee, 0xb4, 0xf0, 0xd9, 0xca, 0xa7, 0xc6, 0xe9, 0x9f, 0x75, 0xe8, 0x94,
	0xdf, 0xd2, 0xe4, 0x05, 0xac, 0xcf, 0xbf, 0xf0, 0xc8, 0xde, 0x3b, 0x9e, 0x7e, 0x38, 0x81, 0xec,
	0xfd, 0x2b, 0x1f, 0x86, 0xe4, 0x39, 0x74, 0xca, 0x0f, 0x08, 0x62, 0xe7, 0xe6, 0x4b, 0x2f, 0x1c,
	0x7b, 0xb7, 0x72, 0xad, 0x70, 0x54, 0x66, 0xf8, 0x92, 0xa3, 0xa5, 0x57, 0x42, 0xc9, 0x51, 0xc5,
	0xa3, 0xe0, 0x09, 0xb4, 0x73, 0xa6, 0x25, 0xff, 0xcf, 0x2d, 0xe7, 0x39, 0xdc, 0xb6, 0x96, 0x17,
	0xd2, 0xfd, 0x4f, 0x01, 0x0a, 0xae, 0x23, 0x85, 0xdd, 0x02, 0x8f, 0xda, 0x3b, 0x15, 0x2b, 0xa9,
	0x8b, 0x21, 0xdc, 0xaf, 0x64, 0x10, 0x72, 0x94, 0xef, 0x79, 0x37, 0xad, 0xd9, 0x0f, 0xae, 0x36,
	0x4a, 0x63, 0x50, 0xd8, 0xae, 0x86, 0x20, 0x79, 0x70, 0x0d, 0x46, 0x75, 0x94, 0x87, 0x37, 0x42,
	0xb2, 0xbd, 0xfd, 0xcb, 0xdf, 0x75, 0x42, 0xda, 0x5f, 0x87, 0xd1, 0xa8, 0xaf, 0xfe, 0xd0, 0xd9,
	0x0d, 0x34, 0x1b, 0x36, 0xf1, 0x66, 0x7d, 0xf2, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf4, 0x57,
	0xeb, 0x4a, 0x0e, 0x0e, 0x00, 0x00,
}
