// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vxnet.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/chai2010/qingcloud-go/spec.pb/qingcloud_sdk_rule"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import "github.com/chai2010/qingcloud-go/request/data"

var _ = config.Config{}
var _ = request.Request{}
var _ = data.Operation{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type VxnetServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *VxnetServiceProperties) Reset()                    { *m = VxnetServiceProperties{} }
func (m *VxnetServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*VxnetServiceProperties) ProtoMessage()               {}
func (*VxnetServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{0} }

func (m *VxnetServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type DescribeVxnetsInput struct {
}

func (m *DescribeVxnetsInput) Reset()                    { *m = DescribeVxnetsInput{} }
func (m *DescribeVxnetsInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeVxnetsInput) ProtoMessage()               {}
func (*DescribeVxnetsInput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{1} }

type DescribeVxnetsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DescribeVxnetsOutput) Reset()                    { *m = DescribeVxnetsOutput{} }
func (m *DescribeVxnetsOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeVxnetsOutput) ProtoMessage()               {}
func (*DescribeVxnetsOutput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{2} }

func (m *DescribeVxnetsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeVxnetsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeVxnetsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateVxnetsInput struct {
}

func (m *CreateVxnetsInput) Reset()                    { *m = CreateVxnetsInput{} }
func (m *CreateVxnetsInput) String() string            { return proto.CompactTextString(m) }
func (*CreateVxnetsInput) ProtoMessage()               {}
func (*CreateVxnetsInput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{3} }

type CreateVxnetsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateVxnetsOutput) Reset()                    { *m = CreateVxnetsOutput{} }
func (m *CreateVxnetsOutput) String() string            { return proto.CompactTextString(m) }
func (*CreateVxnetsOutput) ProtoMessage()               {}
func (*CreateVxnetsOutput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{4} }

func (m *CreateVxnetsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CreateVxnetsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CreateVxnetsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteVxnetsInput struct {
}

func (m *DeleteVxnetsInput) Reset()                    { *m = DeleteVxnetsInput{} }
func (m *DeleteVxnetsInput) String() string            { return proto.CompactTextString(m) }
func (*DeleteVxnetsInput) ProtoMessage()               {}
func (*DeleteVxnetsInput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{5} }

type DeleteVxnetsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteVxnetsOutput) Reset()                    { *m = DeleteVxnetsOutput{} }
func (m *DeleteVxnetsOutput) String() string            { return proto.CompactTextString(m) }
func (*DeleteVxnetsOutput) ProtoMessage()               {}
func (*DeleteVxnetsOutput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{6} }

func (m *DeleteVxnetsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DeleteVxnetsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DeleteVxnetsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type JoinVxnetInput struct {
}

func (m *JoinVxnetInput) Reset()                    { *m = JoinVxnetInput{} }
func (m *JoinVxnetInput) String() string            { return proto.CompactTextString(m) }
func (*JoinVxnetInput) ProtoMessage()               {}
func (*JoinVxnetInput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{7} }

type JoinVxnetOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *JoinVxnetOutput) Reset()                    { *m = JoinVxnetOutput{} }
func (m *JoinVxnetOutput) String() string            { return proto.CompactTextString(m) }
func (*JoinVxnetOutput) ProtoMessage()               {}
func (*JoinVxnetOutput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{8} }

func (m *JoinVxnetOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *JoinVxnetOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *JoinVxnetOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type LeaveVxnetInput struct {
}

func (m *LeaveVxnetInput) Reset()                    { *m = LeaveVxnetInput{} }
func (m *LeaveVxnetInput) String() string            { return proto.CompactTextString(m) }
func (*LeaveVxnetInput) ProtoMessage()               {}
func (*LeaveVxnetInput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{9} }

type LeaveVxnetOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *LeaveVxnetOutput) Reset()                    { *m = LeaveVxnetOutput{} }
func (m *LeaveVxnetOutput) String() string            { return proto.CompactTextString(m) }
func (*LeaveVxnetOutput) ProtoMessage()               {}
func (*LeaveVxnetOutput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{10} }

func (m *LeaveVxnetOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *LeaveVxnetOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *LeaveVxnetOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ModifyVxnetAttributesInput struct {
}

func (m *ModifyVxnetAttributesInput) Reset()                    { *m = ModifyVxnetAttributesInput{} }
func (m *ModifyVxnetAttributesInput) String() string            { return proto.CompactTextString(m) }
func (*ModifyVxnetAttributesInput) ProtoMessage()               {}
func (*ModifyVxnetAttributesInput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{11} }

type ModifyVxnetAttributesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ModifyVxnetAttributesOutput) Reset()                    { *m = ModifyVxnetAttributesOutput{} }
func (m *ModifyVxnetAttributesOutput) String() string            { return proto.CompactTextString(m) }
func (*ModifyVxnetAttributesOutput) ProtoMessage()               {}
func (*ModifyVxnetAttributesOutput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{12} }

func (m *ModifyVxnetAttributesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ModifyVxnetAttributesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ModifyVxnetAttributesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DescribeVxnetInstancesInput struct {
}

func (m *DescribeVxnetInstancesInput) Reset()                    { *m = DescribeVxnetInstancesInput{} }
func (m *DescribeVxnetInstancesInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeVxnetInstancesInput) ProtoMessage()               {}
func (*DescribeVxnetInstancesInput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{13} }

type DescribeVxnetInstancesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DescribeVxnetInstancesOutput) Reset()                    { *m = DescribeVxnetInstancesOutput{} }
func (m *DescribeVxnetInstancesOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeVxnetInstancesOutput) ProtoMessage()               {}
func (*DescribeVxnetInstancesOutput) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{14} }

func (m *DescribeVxnetInstancesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeVxnetInstancesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeVxnetInstancesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*VxnetServiceProperties)(nil), "service.VxnetServiceProperties")
	proto.RegisterType((*DescribeVxnetsInput)(nil), "service.DescribeVxnetsInput")
	proto.RegisterType((*DescribeVxnetsOutput)(nil), "service.DescribeVxnetsOutput")
	proto.RegisterType((*CreateVxnetsInput)(nil), "service.CreateVxnetsInput")
	proto.RegisterType((*CreateVxnetsOutput)(nil), "service.CreateVxnetsOutput")
	proto.RegisterType((*DeleteVxnetsInput)(nil), "service.DeleteVxnetsInput")
	proto.RegisterType((*DeleteVxnetsOutput)(nil), "service.DeleteVxnetsOutput")
	proto.RegisterType((*JoinVxnetInput)(nil), "service.JoinVxnetInput")
	proto.RegisterType((*JoinVxnetOutput)(nil), "service.JoinVxnetOutput")
	proto.RegisterType((*LeaveVxnetInput)(nil), "service.LeaveVxnetInput")
	proto.RegisterType((*LeaveVxnetOutput)(nil), "service.LeaveVxnetOutput")
	proto.RegisterType((*ModifyVxnetAttributesInput)(nil), "service.ModifyVxnetAttributesInput")
	proto.RegisterType((*ModifyVxnetAttributesOutput)(nil), "service.ModifyVxnetAttributesOutput")
	proto.RegisterType((*DescribeVxnetInstancesInput)(nil), "service.DescribeVxnetInstancesInput")
	proto.RegisterType((*DescribeVxnetInstancesOutput)(nil), "service.DescribeVxnetInstancesOutput")
}

type VxnetServiceInterface interface {
	DescribeVxnets(in *DescribeVxnetsInput) (out *DescribeVxnetsOutput, err error)
	CreateVxnets(in *CreateVxnetsInput) (out *CreateVxnetsOutput, err error)
	DeleteVxnets(in *DeleteVxnetsInput) (out *DeleteVxnetsOutput, err error)
	JoinVxnet(in *JoinVxnetInput) (out *JoinVxnetOutput, err error)
	LeaveVxnet(in *LeaveVxnetInput) (out *LeaveVxnetOutput, err error)
	ModifyVxnetAttributes(in *ModifyVxnetAttributesInput) (out *ModifyVxnetAttributesOutput, err error)
	DescribeVxnetInstances(in *DescribeVxnetInstancesInput) (out *DescribeVxnetInstancesOutput, err error)
}

type VxnetService struct {
	Config           *config.Config
	Properties       *VxnetServiceProperties
	LastResponseBody string
}

func NewVxnetService(conf *config.Config, zone string) (p *VxnetService) {
	return &VxnetService{
		Config:     conf,
		Properties: &VxnetServiceProperties{Zone: zone},
	}
}

func (s *QingCloudService) Vxnet(zone string) (*VxnetService, error) {
	properties := &VxnetServiceProperties{
		Zone: zone,
	}

	return &VxnetService{Config: s.Config, Properties: properties}, nil
}

func (p *VxnetService) DescribeVxnets(in *DescribeVxnetsInput) (out *DescribeVxnetsOutput, err error) {
	if in == nil {
		in = &DescribeVxnetsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeVxnets",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeVxnetsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DescribeVxnetsInput) Validate() error {
	return nil
}

func (p *VxnetService) CreateVxnets(in *CreateVxnetsInput) (out *CreateVxnetsOutput, err error) {
	if in == nil {
		in = &CreateVxnetsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateVxnets",
		RequestMethod: "GET", // GET or POST
	}

	x := &CreateVxnetsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *CreateVxnetsInput) Validate() error {
	return nil
}

func (p *VxnetService) DeleteVxnets(in *DeleteVxnetsInput) (out *DeleteVxnetsOutput, err error) {
	if in == nil {
		in = &DeleteVxnetsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteVxnets",
		RequestMethod: "GET", // GET or POST
	}

	x := &DeleteVxnetsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DeleteVxnetsInput) Validate() error {
	return nil
}

func (p *VxnetService) JoinVxnet(in *JoinVxnetInput) (out *JoinVxnetOutput, err error) {
	if in == nil {
		in = &JoinVxnetInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "JoinVxnet",
		RequestMethod: "GET", // GET or POST
	}

	x := &JoinVxnetOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *JoinVxnetInput) Validate() error {
	return nil
}

func (p *VxnetService) LeaveVxnet(in *LeaveVxnetInput) (out *LeaveVxnetOutput, err error) {
	if in == nil {
		in = &LeaveVxnetInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "LeaveVxnet",
		RequestMethod: "GET", // GET or POST
	}

	x := &LeaveVxnetOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *LeaveVxnetInput) Validate() error {
	return nil
}

func (p *VxnetService) ModifyVxnetAttributes(in *ModifyVxnetAttributesInput) (out *ModifyVxnetAttributesOutput, err error) {
	if in == nil {
		in = &ModifyVxnetAttributesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifyVxnetAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &ModifyVxnetAttributesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *ModifyVxnetAttributesInput) Validate() error {
	return nil
}

func (p *VxnetService) DescribeVxnetInstances(in *DescribeVxnetInstancesInput) (out *DescribeVxnetInstancesOutput, err error) {
	if in == nil {
		in = &DescribeVxnetInstancesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeVxnetInstances",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeVxnetInstancesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DescribeVxnetInstancesInput) Validate() error {
	return nil
}

func init() { proto.RegisterFile("vxnet.proto", fileDescriptor30) }

var fileDescriptor30 = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0x55, 0x20, 0x6d, 0xc8, 0x50, 0xf5, 0x32, 0xa5, 0xc1, 0xdd, 0x24, 0x52, 0x15, 0x8a, 0xd4,
	0x07, 0x14, 0x24, 0x78, 0x47, 0xaa, 0x52, 0x09, 0x15, 0x51, 0x01, 0x45, 0xe2, 0x91, 0xc8, 0x97,
	0x21, 0x5a, 0x1a, 0x76, 0xcd, 0xee, 0x3a, 0x02, 0x3e, 0x81, 0xff, 0xe3, 0x43, 0xf8, 0x03, 0x14,
	0x7b, 0x6b, 0xaf, 0xf1, 0x06, 0x9e, 0xfc, 0x62, 0x79, 0xe7, 0x9c, 0x99, 0x33, 0xb2, 0xcf, 0x59,
	0xb8, 0xbf, 0xfa, 0x26, 0xc8, 0x4c, 0x53, 0x25, 0x8d, 0xc4, 0x9e, 0x26, 0xb5, 0xe2, 0x31, 0xb1,
	0xf1, 0x57, 0x2e, 0x16, 0xf1, 0x52, 0x66, 0xc9, 0x5c, 0x27, 0x37, 0x73, 0x95, 0x2d, 0xe9, 0xe9,
	0xfa, 0x51, 0xf0, 0x26, 0x4f, 0x60, 0xf0, 0x61, 0xdd, 0xf6, 0xbe, 0xa0, 0xbf, 0x55, 0x32, 0x25,
	0x65, 0x38, 0x69, 0x44, 0xe8, 0xfe, 0x90, 0x82, 0x82, 0xce, 0x49, 0xe7, 0xac, 0x7f, 0x9d, 0xbf,
	0x4f, 0x8e, 0xe0, 0xf0, 0x82, 0x74, 0xac, 0x78, 0x44, 0x79, 0x97, 0xbe, 0x14, 0x69, 0x66, 0x26,
	0x31, 0x3c, 0xa8, 0x97, 0xdf, 0x64, 0x26, 0xcd, 0x0c, 0x0e, 0x60, 0x3b, 0x8c, 0x0d, 0x97, 0xc2,
	0x0e, 0xb1, 0x27, 0x3c, 0x86, 0x7b, 0x8a, 0xcc, 0x3c, 0x96, 0x09, 0x05, 0x77, 0x4e, 0x3a, 0x67,
	0x5b, 0xd7, 0x3d, 0x45, 0x66, 0x26, 0x13, 0xc2, 0x00, 0x7a, 0x5f, 0x48, 0xeb, 0x70, 0x41, 0xc1,
	0xdd, 0xbc, 0xe7, 0xf6, 0x38, 0x39, 0x84, 0x83, 0x99, 0xa2, 0xd0, 0xd4, 0x94, 0x43, 0x40, 0xb7,
	0xd8, 0x92, 0xee, 0x05, 0x2d, 0xa9, 0xa1, 0xeb, 0x16, 0xdb, 0xd0, 0xdd, 0x87, 0xdd, 0x57, 0x92,
	0x8b, 0x5c, 0xa0, 0x10, 0xfd, 0x08, 0x7b, 0x65, 0xa5, 0x0d, 0xc5, 0x03, 0xd8, 0x7b, 0x4d, 0xe1,
	0x8a, 0x1c, 0xc9, 0x39, 0xec, 0x57, 0xa5, 0x36, 0x34, 0x47, 0xc0, 0xae, 0x64, 0xc2, 0x3f, 0x7d,
	0xcf, 0x15, 0xce, 0x8d, 0x51, 0x3c, 0xca, 0x0c, 0xd9, 0xcf, 0xfc, 0x19, 0x86, 0x5e, 0xb4, 0x8d,
	0x4d, 0xc6, 0x30, 0xac, 0x99, 0xf8, 0x52, 0x68, 0x13, 0x8a, 0xf8, 0x76, 0x95, 0x1b, 0x18, 0xf9,
	0xe1, 0x16, 0x76, 0x79, 0xf6, 0xab, 0x0b, 0x3b, 0x6e, 0x2c, 0xf1, 0x0a, 0x76, 0xeb, 0x09, 0xc3,
	0xd1, 0xd4, 0x26, 0x7c, 0xea, 0x49, 0x24, 0x1b, 0x6f, 0x40, 0xed, 0xb2, 0x2f, 0x61, 0xc7, 0x8d,
	0x0d, 0xb2, 0x92, 0xde, 0x88, 0x18, 0x1b, 0x7a, 0xb1, 0x6a, 0x90, 0x9b, 0x03, 0x67, 0x50, 0x23,
	0x33, 0xce, 0x20, 0x4f, 0x74, 0x5e, 0x40, 0xbf, 0xf4, 0x36, 0x3e, 0x2c, 0x99, 0xf5, 0x04, 0xb0,
	0xa0, 0x09, 0xd8, 0xfe, 0x73, 0x80, 0xca, 0xa8, 0x58, 0xf1, 0xfe, 0x32, 0x34, 0x3b, 0xf6, 0x20,
	0x76, 0x44, 0x04, 0x47, 0x5e, 0xb3, 0xe1, 0xa3, 0xb2, 0x67, 0xb3, 0x55, 0xd9, 0xe9, 0xbf, 0x49,
	0x56, 0x83, 0x60, 0xe0, 0x77, 0x11, 0x9e, 0xfa, 0xff, 0x58, 0xdd, 0x85, 0xec, 0xf1, 0x7f, 0x58,
	0x85, 0x0c, 0x1b, 0xfc, 0xfc, 0xdd, 0x45, 0xe8, 0xbf, 0xe3, 0x62, 0x31, 0x5b, 0x5f, 0xfd, 0xb8,
	0x95, 0xd3, 0xa2, 0xed, 0xfc, 0xd2, 0x7f, 0xfe, 0x27, 0x00, 0x00, 0xff, 0xff, 0x34, 0x44, 0x8b,
	0xaf, 0x2b, 0x06, 0x00, 0x00,
}
