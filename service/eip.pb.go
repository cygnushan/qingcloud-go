// Code generated by protoc-gen-go. DO NOT EDIT.
// source: eip.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/chai2010/qingcloud-go/spec.pb/qingcloud_sdk_rule"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/logger"
import "github.com/chai2010/qingcloud-go/request"
import "github.com/chai2010/qingcloud-go/request/data"

var _ = config.Config{}
var _ = logger.SetLevel
var _ = request.Request{}
var _ = data.Operation{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EIPServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *EIPServiceProperties) Reset()                    { *m = EIPServiceProperties{} }
func (m *EIPServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*EIPServiceProperties) ProtoMessage()               {}
func (*EIPServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *EIPServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type DescribeEipsInput struct {
	Eips       []string `protobuf:"bytes,1,rep,name=eips" json:"eips,omitempty"`
	InstanceId string   `protobuf:"bytes,2,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	Status     string   `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	SearchWord string   `protobuf:"bytes,4,opt,name=search_word,json=searchWord" json:"search_word,omitempty"`
	Tags       []string `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	Verbose    int32    `protobuf:"varint,6,opt,name=verbose" json:"verbose,omitempty"`
	Offset     int32    `protobuf:"varint,7,opt,name=offset" json:"offset,omitempty"`
	Limit      int32    `protobuf:"varint,8,opt,name=limit" json:"limit,omitempty"`
}

func (m *DescribeEipsInput) Reset()                    { *m = DescribeEipsInput{} }
func (m *DescribeEipsInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeEipsInput) ProtoMessage()               {}
func (*DescribeEipsInput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *DescribeEipsInput) GetEips() []string {
	if m != nil {
		return m.Eips
	}
	return nil
}

func (m *DescribeEipsInput) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *DescribeEipsInput) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DescribeEipsInput) GetSearchWord() string {
	if m != nil {
		return m.SearchWord
	}
	return ""
}

func (m *DescribeEipsInput) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *DescribeEipsInput) GetVerbose() int32 {
	if m != nil {
		return m.Verbose
	}
	return 0
}

func (m *DescribeEipsInput) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeEipsInput) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type DescribeEipsOutput struct {
	Action     string                             `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode    int32                              `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message    string                             `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	EipSet     []*DescribeEipsOutput_ResponseItem `protobuf:"bytes,4,rep,name=eip_set,json=eipSet" json:"eip_set,omitempty"`
	TotalCount int32                              `protobuf:"varint,5,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *DescribeEipsOutput) Reset()                    { *m = DescribeEipsOutput{} }
func (m *DescribeEipsOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeEipsOutput) ProtoMessage()               {}
func (*DescribeEipsOutput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *DescribeEipsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeEipsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeEipsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeEipsOutput) GetEipSet() []*DescribeEipsOutput_ResponseItem {
	if m != nil {
		return m.EipSet
	}
	return nil
}

func (m *DescribeEipsOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type DescribeEipsOutput_ResponseItem struct {
	EipId            string                      `protobuf:"bytes,1,opt,name=eip_id,json=eipId" json:"eip_id,omitempty"`
	EipName          string                      `protobuf:"bytes,2,opt,name=eip_name,json=eipName" json:"eip_name,omitempty"`
	Description      string                      `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Bandwidth        int32                       `protobuf:"varint,4,opt,name=bandwidth" json:"bandwidth,omitempty"`
	BillingMode      string                      `protobuf:"bytes,5,opt,name=billing_mode,json=billingMode" json:"billing_mode,omitempty"`
	Status           string                      `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,7,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	IcpCodes         string                      `protobuf:"bytes,8,opt,name=icp_codes,json=icpCodes" json:"icp_codes,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,9,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,10,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	Resource         *Resource                   `protobuf:"bytes,11,opt,name=resource" json:"resource,omitempty"`
	EipGroup         *EIPGroup                   `protobuf:"bytes,12,opt,name=eip_group,json=eipGroup" json:"eip_group,omitempty"`
	EipAddr          string                      `protobuf:"bytes,13,opt,name=eip_addr,json=eipAddr" json:"eip_addr,omitempty"`
}

func (m *DescribeEipsOutput_ResponseItem) Reset()         { *m = DescribeEipsOutput_ResponseItem{} }
func (m *DescribeEipsOutput_ResponseItem) String() string { return proto.CompactTextString(m) }
func (*DescribeEipsOutput_ResponseItem) ProtoMessage()    {}
func (*DescribeEipsOutput_ResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{2, 0}
}

func (m *DescribeEipsOutput_ResponseItem) GetEipId() string {
	if m != nil {
		return m.EipId
	}
	return ""
}

func (m *DescribeEipsOutput_ResponseItem) GetEipName() string {
	if m != nil {
		return m.EipName
	}
	return ""
}

func (m *DescribeEipsOutput_ResponseItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DescribeEipsOutput_ResponseItem) GetBandwidth() int32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *DescribeEipsOutput_ResponseItem) GetBillingMode() string {
	if m != nil {
		return m.BillingMode
	}
	return ""
}

func (m *DescribeEipsOutput_ResponseItem) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DescribeEipsOutput_ResponseItem) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *DescribeEipsOutput_ResponseItem) GetIcpCodes() string {
	if m != nil {
		return m.IcpCodes
	}
	return ""
}

func (m *DescribeEipsOutput_ResponseItem) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *DescribeEipsOutput_ResponseItem) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *DescribeEipsOutput_ResponseItem) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *DescribeEipsOutput_ResponseItem) GetEipGroup() *EIPGroup {
	if m != nil {
		return m.EipGroup
	}
	return nil
}

func (m *DescribeEipsOutput_ResponseItem) GetEipAddr() string {
	if m != nil {
		return m.EipAddr
	}
	return ""
}

type AllocateEipsInput struct {
	Bandwidth   int32  `protobuf:"varint,1,opt,name=bandwidth" json:"bandwidth,omitempty"`
	BillingMode string `protobuf:"bytes,2,opt,name=billing_mode,json=billingMode" json:"billing_mode,omitempty"`
	EipName     string `protobuf:"bytes,3,opt,name=eip_name,json=eipName" json:"eip_name,omitempty"`
	Count       int32  `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	NeedIcp     int32  `protobuf:"varint,5,opt,name=need_icp,json=needIcp" json:"need_icp,omitempty"`
	TargetUser  string `protobuf:"bytes,6,opt,name=target_user,json=targetUser" json:"target_user,omitempty"`
}

func (m *AllocateEipsInput) Reset()                    { *m = AllocateEipsInput{} }
func (m *AllocateEipsInput) String() string            { return proto.CompactTextString(m) }
func (*AllocateEipsInput) ProtoMessage()               {}
func (*AllocateEipsInput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

func (m *AllocateEipsInput) GetBandwidth() int32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *AllocateEipsInput) GetBillingMode() string {
	if m != nil {
		return m.BillingMode
	}
	return ""
}

func (m *AllocateEipsInput) GetEipName() string {
	if m != nil {
		return m.EipName
	}
	return ""
}

func (m *AllocateEipsInput) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *AllocateEipsInput) GetNeedIcp() int32 {
	if m != nil {
		return m.NeedIcp
	}
	return 0
}

func (m *AllocateEipsInput) GetTargetUser() string {
	if m != nil {
		return m.TargetUser
	}
	return ""
}

type AllocateEipsOutput struct {
	Action  string   `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32    `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Eips    []string `protobuf:"bytes,4,rep,name=eips" json:"eips,omitempty"`
}

func (m *AllocateEipsOutput) Reset()                    { *m = AllocateEipsOutput{} }
func (m *AllocateEipsOutput) String() string            { return proto.CompactTextString(m) }
func (*AllocateEipsOutput) ProtoMessage()               {}
func (*AllocateEipsOutput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{4} }

func (m *AllocateEipsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *AllocateEipsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *AllocateEipsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AllocateEipsOutput) GetEips() []string {
	if m != nil {
		return m.Eips
	}
	return nil
}

type ReleaseEipsInput struct {
	Eips []string `protobuf:"bytes,1,rep,name=eips" json:"eips,omitempty"`
}

func (m *ReleaseEipsInput) Reset()                    { *m = ReleaseEipsInput{} }
func (m *ReleaseEipsInput) String() string            { return proto.CompactTextString(m) }
func (*ReleaseEipsInput) ProtoMessage()               {}
func (*ReleaseEipsInput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{5} }

func (m *ReleaseEipsInput) GetEips() []string {
	if m != nil {
		return m.Eips
	}
	return nil
}

type ReleaseEipsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *ReleaseEipsOutput) Reset()                    { *m = ReleaseEipsOutput{} }
func (m *ReleaseEipsOutput) String() string            { return proto.CompactTextString(m) }
func (*ReleaseEipsOutput) ProtoMessage()               {}
func (*ReleaseEipsOutput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{6} }

func (m *ReleaseEipsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ReleaseEipsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ReleaseEipsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ReleaseEipsOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type AssociateEipInput struct {
	Eip      string `protobuf:"bytes,1,opt,name=eip" json:"eip,omitempty"`
	Instance string `protobuf:"bytes,2,opt,name=instance" json:"instance,omitempty"`
}

func (m *AssociateEipInput) Reset()                    { *m = AssociateEipInput{} }
func (m *AssociateEipInput) String() string            { return proto.CompactTextString(m) }
func (*AssociateEipInput) ProtoMessage()               {}
func (*AssociateEipInput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{7} }

func (m *AssociateEipInput) GetEip() string {
	if m != nil {
		return m.Eip
	}
	return ""
}

func (m *AssociateEipInput) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

type AssociateEipOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *AssociateEipOutput) Reset()                    { *m = AssociateEipOutput{} }
func (m *AssociateEipOutput) String() string            { return proto.CompactTextString(m) }
func (*AssociateEipOutput) ProtoMessage()               {}
func (*AssociateEipOutput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{8} }

func (m *AssociateEipOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *AssociateEipOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *AssociateEipOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AssociateEipOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type DissociateEipsInput struct {
	Eips []string `protobuf:"bytes,1,rep,name=eips" json:"eips,omitempty"`
}

func (m *DissociateEipsInput) Reset()                    { *m = DissociateEipsInput{} }
func (m *DissociateEipsInput) String() string            { return proto.CompactTextString(m) }
func (*DissociateEipsInput) ProtoMessage()               {}
func (*DissociateEipsInput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{9} }

func (m *DissociateEipsInput) GetEips() []string {
	if m != nil {
		return m.Eips
	}
	return nil
}

type DissociateEipsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *DissociateEipsOutput) Reset()                    { *m = DissociateEipsOutput{} }
func (m *DissociateEipsOutput) String() string            { return proto.CompactTextString(m) }
func (*DissociateEipsOutput) ProtoMessage()               {}
func (*DissociateEipsOutput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{10} }

func (m *DissociateEipsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DissociateEipsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DissociateEipsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DissociateEipsOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type ChangeEipsBandwidthInput struct {
	Eips      []string `protobuf:"bytes,1,rep,name=eips" json:"eips,omitempty"`
	Bandwidth int32    `protobuf:"varint,2,opt,name=bandwidth" json:"bandwidth,omitempty"`
}

func (m *ChangeEipsBandwidthInput) Reset()                    { *m = ChangeEipsBandwidthInput{} }
func (m *ChangeEipsBandwidthInput) String() string            { return proto.CompactTextString(m) }
func (*ChangeEipsBandwidthInput) ProtoMessage()               {}
func (*ChangeEipsBandwidthInput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{11} }

func (m *ChangeEipsBandwidthInput) GetEips() []string {
	if m != nil {
		return m.Eips
	}
	return nil
}

func (m *ChangeEipsBandwidthInput) GetBandwidth() int32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

type ChangeEipsBandwidthOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *ChangeEipsBandwidthOutput) Reset()                    { *m = ChangeEipsBandwidthOutput{} }
func (m *ChangeEipsBandwidthOutput) String() string            { return proto.CompactTextString(m) }
func (*ChangeEipsBandwidthOutput) ProtoMessage()               {}
func (*ChangeEipsBandwidthOutput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{12} }

func (m *ChangeEipsBandwidthOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ChangeEipsBandwidthOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ChangeEipsBandwidthOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ChangeEipsBandwidthOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type ChangeEipsBillingModeInput struct {
	Eips        []string `protobuf:"bytes,1,rep,name=eips" json:"eips,omitempty"`
	BillingMode string   `protobuf:"bytes,2,opt,name=billing_mode,json=billingMode" json:"billing_mode,omitempty"`
}

func (m *ChangeEipsBillingModeInput) Reset()                    { *m = ChangeEipsBillingModeInput{} }
func (m *ChangeEipsBillingModeInput) String() string            { return proto.CompactTextString(m) }
func (*ChangeEipsBillingModeInput) ProtoMessage()               {}
func (*ChangeEipsBillingModeInput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{13} }

func (m *ChangeEipsBillingModeInput) GetEips() []string {
	if m != nil {
		return m.Eips
	}
	return nil
}

func (m *ChangeEipsBillingModeInput) GetBillingMode() string {
	if m != nil {
		return m.BillingMode
	}
	return ""
}

type ChangeEipsBillingModeOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *ChangeEipsBillingModeOutput) Reset()                    { *m = ChangeEipsBillingModeOutput{} }
func (m *ChangeEipsBillingModeOutput) String() string            { return proto.CompactTextString(m) }
func (*ChangeEipsBillingModeOutput) ProtoMessage()               {}
func (*ChangeEipsBillingModeOutput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{14} }

func (m *ChangeEipsBillingModeOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ChangeEipsBillingModeOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ChangeEipsBillingModeOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ChangeEipsBillingModeOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type ModifyEipAttributesInput struct {
	Eip         string `protobuf:"bytes,1,opt,name=eip" json:"eip,omitempty"`
	EipName     string `protobuf:"bytes,2,opt,name=eip_name,json=eipName" json:"eip_name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *ModifyEipAttributesInput) Reset()                    { *m = ModifyEipAttributesInput{} }
func (m *ModifyEipAttributesInput) String() string            { return proto.CompactTextString(m) }
func (*ModifyEipAttributesInput) ProtoMessage()               {}
func (*ModifyEipAttributesInput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{15} }

func (m *ModifyEipAttributesInput) GetEip() string {
	if m != nil {
		return m.Eip
	}
	return ""
}

func (m *ModifyEipAttributesInput) GetEipName() string {
	if m != nil {
		return m.EipName
	}
	return ""
}

func (m *ModifyEipAttributesInput) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ModifyEipAttributesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ModifyEipAttributesOutput) Reset()                    { *m = ModifyEipAttributesOutput{} }
func (m *ModifyEipAttributesOutput) String() string            { return proto.CompactTextString(m) }
func (*ModifyEipAttributesOutput) ProtoMessage()               {}
func (*ModifyEipAttributesOutput) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{16} }

func (m *ModifyEipAttributesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ModifyEipAttributesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ModifyEipAttributesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*EIPServiceProperties)(nil), "service.EIPServiceProperties")
	proto.RegisterType((*DescribeEipsInput)(nil), "service.DescribeEipsInput")
	proto.RegisterType((*DescribeEipsOutput)(nil), "service.DescribeEipsOutput")
	proto.RegisterType((*DescribeEipsOutput_ResponseItem)(nil), "service.DescribeEipsOutput.ResponseItem")
	proto.RegisterType((*AllocateEipsInput)(nil), "service.AllocateEipsInput")
	proto.RegisterType((*AllocateEipsOutput)(nil), "service.AllocateEipsOutput")
	proto.RegisterType((*ReleaseEipsInput)(nil), "service.ReleaseEipsInput")
	proto.RegisterType((*ReleaseEipsOutput)(nil), "service.ReleaseEipsOutput")
	proto.RegisterType((*AssociateEipInput)(nil), "service.AssociateEipInput")
	proto.RegisterType((*AssociateEipOutput)(nil), "service.AssociateEipOutput")
	proto.RegisterType((*DissociateEipsInput)(nil), "service.DissociateEipsInput")
	proto.RegisterType((*DissociateEipsOutput)(nil), "service.DissociateEipsOutput")
	proto.RegisterType((*ChangeEipsBandwidthInput)(nil), "service.ChangeEipsBandwidthInput")
	proto.RegisterType((*ChangeEipsBandwidthOutput)(nil), "service.ChangeEipsBandwidthOutput")
	proto.RegisterType((*ChangeEipsBillingModeInput)(nil), "service.ChangeEipsBillingModeInput")
	proto.RegisterType((*ChangeEipsBillingModeOutput)(nil), "service.ChangeEipsBillingModeOutput")
	proto.RegisterType((*ModifyEipAttributesInput)(nil), "service.ModifyEipAttributesInput")
	proto.RegisterType((*ModifyEipAttributesOutput)(nil), "service.ModifyEipAttributesOutput")
}

// See https://docs.qingcloud.com/api/eip/index.html
type EIPServiceInterface interface {
	DescribeEips(in *DescribeEipsInput) (out *DescribeEipsOutput, err error)
	AllocateEips(in *AllocateEipsInput) (out *AllocateEipsOutput, err error)
	ReleaseEips(in *ReleaseEipsInput) (out *ReleaseEipsOutput, err error)
	AssociateEip(in *AssociateEipInput) (out *AssociateEipOutput, err error)
	DissociateEips(in *DissociateEipsInput) (out *DissociateEipsOutput, err error)
	ChangeEipsBandwidth(in *ChangeEipsBandwidthInput) (out *ChangeEipsBandwidthOutput, err error)
	ChangeEipsBillingMode(in *ChangeEipsBillingModeInput) (out *ChangeEipsBillingModeOutput, err error)
	ModifyEipAttributes(in *ModifyEipAttributesInput) (out *ModifyEipAttributesOutput, err error)
}

// See https://docs.qingcloud.com/api/eip/index.html
type EIPService struct {
	Config           *config.Config
	Properties       *EIPServiceProperties
	LastResponseBody string
}

// See https://docs.qingcloud.com/api/eip/index.html
func NewEIPService(conf *config.Config, zone string) (p *EIPService) {
	return &EIPService{
		Config:     conf,
		Properties: &EIPServiceProperties{Zone: zone},
	}
}

// See https://docs.qingcloud.com/api/eip/index.html
func (s *QingCloudService) EIP(zone string) (*EIPService, error) {
	properties := &EIPServiceProperties{
		Zone: zone,
	}

	return &EIPService{Config: s.Config, Properties: properties}, nil
}

func (p *EIPService) DescribeEips(in *DescribeEipsInput) (out *DescribeEipsOutput, err error) {
	if in == nil {
		in = &DescribeEipsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeEips",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeEipsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *EIPService) AllocateEips(in *AllocateEipsInput) (out *AllocateEipsOutput, err error) {
	if in == nil {
		in = &AllocateEipsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "AllocateEips",
		RequestMethod: "GET", // GET or POST
	}

	x := &AllocateEipsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *EIPService) ReleaseEips(in *ReleaseEipsInput) (out *ReleaseEipsOutput, err error) {
	if in == nil {
		in = &ReleaseEipsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ReleaseEips",
		RequestMethod: "GET", // GET or POST
	}

	x := &ReleaseEipsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *EIPService) AssociateEip(in *AssociateEipInput) (out *AssociateEipOutput, err error) {
	if in == nil {
		in = &AssociateEipInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "AssociateEip",
		RequestMethod: "GET", // GET or POST
	}

	x := &AssociateEipOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *EIPService) DissociateEips(in *DissociateEipsInput) (out *DissociateEipsOutput, err error) {
	if in == nil {
		in = &DissociateEipsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DissociateEips",
		RequestMethod: "GET", // GET or POST
	}

	x := &DissociateEipsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *EIPService) ChangeEipsBandwidth(in *ChangeEipsBandwidthInput) (out *ChangeEipsBandwidthOutput, err error) {
	if in == nil {
		in = &ChangeEipsBandwidthInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ChangeEipsBandwidth",
		RequestMethod: "GET", // GET or POST
	}

	x := &ChangeEipsBandwidthOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *EIPService) ChangeEipsBillingMode(in *ChangeEipsBillingModeInput) (out *ChangeEipsBillingModeOutput, err error) {
	if in == nil {
		in = &ChangeEipsBillingModeInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ChangeEipsBillingMode",
		RequestMethod: "GET", // GET or POST
	}

	x := &ChangeEipsBillingModeOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *EIPService) ModifyEipAttributes(in *ModifyEipAttributesInput) (out *ModifyEipAttributesOutput, err error) {
	if in == nil {
		in = &ModifyEipAttributesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifyEipAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &ModifyEipAttributesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *EIPServiceProperties) Validate() error {
	return nil // TODO
}

func (p *DescribeEipsInput) Validate() error {
	return nil // TODO
}

func (p *DescribeEipsOutput) Validate() error {
	return nil // TODO
}

func (p *AllocateEipsInput) Validate() error {
	return nil // TODO
}

func (p *AllocateEipsOutput) Validate() error {
	return nil // TODO
}

func (p *ReleaseEipsInput) Validate() error {
	return nil // TODO
}

func (p *ReleaseEipsOutput) Validate() error {
	return nil // TODO
}

func (p *AssociateEipInput) Validate() error {
	return nil // TODO
}

func (p *AssociateEipOutput) Validate() error {
	return nil // TODO
}

func (p *DissociateEipsInput) Validate() error {
	return nil // TODO
}

func (p *DissociateEipsOutput) Validate() error {
	return nil // TODO
}

func (p *ChangeEipsBandwidthInput) Validate() error {
	return nil // TODO
}

func (p *ChangeEipsBandwidthOutput) Validate() error {
	return nil // TODO
}

func (p *ChangeEipsBillingModeInput) Validate() error {
	return nil // TODO
}

func (p *ChangeEipsBillingModeOutput) Validate() error {
	return nil // TODO
}

func (p *ModifyEipAttributesInput) Validate() error {
	return nil // TODO
}

func (p *ModifyEipAttributesOutput) Validate() error {
	return nil // TODO
}

func init() { proto.RegisterFile("eip.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 1055 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0x4f, 0x6f, 0x1b, 0x45,
	0x14, 0x97, 0xeb, 0xac, 0x1d, 0x3f, 0xa7, 0x28, 0x9e, 0x26, 0xd5, 0x66, 0xd3, 0xaa, 0xee, 0x82,
	0x50, 0x00, 0xd5, 0x96, 0xc2, 0x0d, 0x24, 0x24, 0x37, 0x89, 0x2a, 0x4b, 0x04, 0xc2, 0x06, 0xc4,
	0x05, 0x69, 0xb5, 0xde, 0x7d, 0xb1, 0xa7, 0xac, 0x77, 0x86, 0x99, 0xd9, 0xa6, 0xed, 0x05, 0x71,
	0xe5, 0x5b, 0xf5, 0x83, 0x20, 0xf1, 0x15, 0x38, 0x72, 0x43, 0x33, 0xb3, 0xb6, 0xc7, 0x89, 0x9d,
	0x1c, 0x50, 0x72, 0xb1, 0xe6, 0xfd, 0x7f, 0x6f, 0xde, 0xfb, 0xbd, 0x1d, 0x43, 0x0b, 0x29, 0xef,
	0x71, 0xc1, 0x14, 0x23, 0x4d, 0x89, 0xe2, 0x0d, 0x4d, 0x31, 0x68, 0xab, 0x77, 0x1c, 0xa5, 0xe5,
	0x06, 0x4f, 0x7f, 0xa3, 0xc5, 0x38, 0xcd, 0x59, 0x99, 0xc5, 0x32, 0xfb, 0x35, 0x16, 0x65, 0x8e,
	0x7d, 0xfd, 0x53, 0x89, 0x9f, 0x8d, 0x19, 0x1b, 0xe7, 0xd8, 0x37, 0xd4, 0xa8, 0xbc, 0xe8, 0x2b,
	0x3a, 0x45, 0xa9, 0x92, 0x69, 0xe5, 0x35, 0xfc, 0x1c, 0x76, 0x4e, 0x86, 0x67, 0xe7, 0xd6, 0xf5,
	0x99, 0x60, 0x1c, 0x85, 0xa2, 0x28, 0x09, 0x81, 0x8d, 0xf7, 0xac, 0x40, 0xbf, 0xd6, 0xad, 0x1d,
	0xb4, 0x22, 0x73, 0x0e, 0xff, 0xaa, 0x41, 0xe7, 0x18, 0x65, 0x2a, 0xe8, 0x08, 0x4f, 0x28, 0x97,
	0xc3, 0x82, 0x97, 0x4a, 0x6b, 0x22, 0xe5, 0xd2, 0xaf, 0x75, 0xeb, 0x5a, 0x53, 0x9f, 0xc9, 0x33,
	0x68, 0xd3, 0x42, 0xaa, 0xa4, 0x48, 0x31, 0xa6, 0x99, 0xff, 0xc0, 0x38, 0x81, 0x19, 0x6b, 0x98,
	0x91, 0xc7, 0xd0, 0x90, 0x2a, 0x51, 0xa5, 0xf4, 0xeb, 0x46, 0x56, 0x51, 0xda, 0x50, 0x62, 0x22,
	0xd2, 0x49, 0x7c, 0xc9, 0x44, 0xe6, 0x6f, 0x58, 0x43, 0xcb, 0xfa, 0x99, 0x89, 0x4c, 0x47, 0x53,
	0xc9, 0x58, 0xfa, 0x9e, 0x8d, 0xa6, 0xcf, 0xc4, 0x87, 0xe6, 0x1b, 0x14, 0x23, 0x26, 0xd1, 0x6f,
	0x74, 0x6b, 0x07, 0x5e, 0x34, 0x23, 0x75, 0x18, 0x76, 0x71, 0x21, 0x51, 0xf9, 0x4d, 0x23, 0xa8,
	0x28, 0xb2, 0x03, 0x5e, 0x4e, 0xa7, 0x54, 0xf9, 0x9b, 0x86, 0x6d, 0x89, 0xf0, 0x83, 0x07, 0xc4,
	0xad, 0xef, 0xfb, 0x52, 0xe9, 0x02, 0x1f, 0x43, 0x23, 0x49, 0x15, 0x65, 0x45, 0x75, 0x19, 0x15,
	0x45, 0xf6, 0x60, 0x53, 0xa0, 0x8a, 0x53, 0x96, 0xa1, 0xa9, 0xd0, 0x8b, 0x9a, 0x02, 0xd5, 0x11,
	0xcb, 0x50, 0x67, 0x34, 0x45, 0x29, 0x93, 0x31, 0x56, 0xf5, 0xcd, 0x48, 0x32, 0x80, 0x26, 0x52,
	0x1e, 0xeb, 0x94, 0x36, 0xba, 0xf5, 0x83, 0xf6, 0xe1, 0x41, 0xaf, 0xea, 0x6b, 0xef, 0x7a, 0xe8,
	0x5e, 0x84, 0x92, 0xb3, 0x42, 0xe2, 0x50, 0xe1, 0x34, 0x6a, 0x20, 0xe5, 0xe7, 0xa8, 0xf4, 0x1d,
	0x29, 0xa6, 0x92, 0x3c, 0x4e, 0x59, 0x59, 0x28, 0xdf, 0x33, 0xa1, 0xc1, 0xb0, 0x8e, 0x34, 0x27,
	0xf8, 0xb7, 0x0e, 0x5b, 0xae, 0x25, 0xd9, 0x05, 0x6d, 0xab, 0x3b, 0x61, 0x2b, 0xf0, 0x90, 0xf2,
	0x61, 0xa6, 0x0b, 0xd0, 0xec, 0x22, 0x99, 0x62, 0xd5, 0x22, 0x9d, 0xdb, 0x77, 0xc9, 0x14, 0x49,
	0x17, 0xda, 0x99, 0x49, 0x87, 0x9b, 0xc2, 0x6d, 0x11, 0x2e, 0x8b, 0x3c, 0x81, 0xd6, 0x28, 0x29,
	0xb2, 0x4b, 0x9a, 0xa9, 0x89, 0xe9, 0x93, 0x17, 0x2d, 0x18, 0xe4, 0x39, 0x6c, 0x8d, 0x68, 0x9e,
	0xd3, 0x62, 0x1c, 0x4f, 0xf5, 0xfd, 0x78, 0xd6, 0x41, 0xc5, 0x3b, 0xd5, 0x77, 0xb4, 0x18, 0x81,
	0xc6, 0xd2, 0x08, 0x7c, 0x01, 0x1d, 0x25, 0x92, 0x42, 0x52, 0x1d, 0x26, 0xae, 0x54, 0x9a, 0x46,
	0x65, 0x7b, 0x21, 0x38, 0xb7, 0xca, 0xfb, 0xd0, 0xa2, 0x29, 0x37, 0x3d, 0x90, 0xa6, 0x99, 0xad,
	0x68, 0x93, 0xa6, 0x5c, 0x37, 0x41, 0x92, 0xaf, 0xa1, 0x9d, 0x0a, 0x4c, 0x14, 0xc6, 0x7a, 0xea,
	0xfd, 0x56, 0xb7, 0x76, 0xd0, 0x3e, 0x0c, 0x7a, 0x16, 0x12, 0xbd, 0x19, 0x24, 0x7a, 0x3f, 0xce,
	0x20, 0x11, 0x81, 0x55, 0xd7, 0x0c, 0x6d, 0x6c, 0x63, 0x5b, 0x63, 0xb8, 0xdd, 0xd8, 0xaa, 0x1b,
	0xe3, 0x17, 0x7a, 0x34, 0x24, 0x2b, 0x45, 0x8a, 0x7e, 0xdb, 0x58, 0x76, 0xe6, 0x6d, 0x8e, 0x2a,
	0x41, 0x34, 0x57, 0x21, 0x3d, 0x83, 0xf3, 0x78, 0x2c, 0x58, 0xc9, 0xfd, 0xad, 0x2b, 0xfa, 0x27,
	0xc3, 0xb3, 0x57, 0x5a, 0x10, 0xe9, 0x66, 0x99, 0xd3, 0xac, 0x71, 0x49, 0x96, 0x09, 0xff, 0xe1,
	0xbc, 0x71, 0x83, 0x2c, 0x13, 0xe1, 0x87, 0x1a, 0x74, 0x06, 0x79, 0xce, 0xd2, 0x44, 0x39, 0x18,
	0x5d, 0x6a, 0x56, 0xed, 0xb6, 0x66, 0x3d, 0xb8, 0xde, 0x2c, 0x77, 0x54, 0xea, 0xcb, 0xa3, 0xb2,
	0x03, 0x9e, 0x1d, 0x44, 0x3b, 0x04, 0x96, 0xd0, 0x06, 0x05, 0x62, 0x16, 0xd3, 0x94, 0x57, 0x13,
	0xda, 0xd4, 0xf4, 0x30, 0xe5, 0x66, 0x7e, 0x13, 0x31, 0x46, 0x15, 0x97, 0x12, 0x45, 0xd5, 0x7d,
	0xb0, 0xac, 0x9f, 0x24, 0x8a, 0xb0, 0x04, 0xe2, 0x96, 0x70, 0x17, 0x30, 0x9c, 0x2d, 0xad, 0x8d,
	0xc5, 0xd2, 0x0a, 0x3f, 0x85, 0xed, 0x08, 0x73, 0x4c, 0xe4, 0xcd, 0xcb, 0x2d, 0xbc, 0x84, 0x8e,
	0xa3, 0x77, 0x17, 0xd9, 0xed, 0x42, 0xe3, 0x35, 0x1b, 0x69, 0xbc, 0xda, 0x05, 0xe8, 0xbd, 0x66,
	0xa3, 0x61, 0x16, 0x0e, 0xa0, 0x33, 0x90, 0x92, 0xa5, 0xd4, 0x5e, 0x8c, 0xcd, 0x70, 0x1b, 0xea,
	0x48, 0x79, 0x15, 0x55, 0x1f, 0x49, 0x00, 0x9b, 0xb3, 0x4d, 0x5b, 0xb5, 0x72, 0x4e, 0x87, 0x6f,
	0x81, 0xb8, 0x2e, 0xee, 0x31, 0xf9, 0xcf, 0xe0, 0xd1, 0x31, 0x75, 0x42, 0xdf, 0x70, 0xc1, 0xef,
	0x61, 0x67, 0x59, 0xf5, 0x1e, 0xd3, 0xfc, 0x16, 0xfc, 0xa3, 0x49, 0x52, 0x8c, 0x4d, 0xdc, 0x97,
	0x33, 0x88, 0xac, 0xff, 0xd2, 0x2d, 0x21, 0xeb, 0xc1, 0x15, 0x64, 0x85, 0xbf, 0xc3, 0xde, 0x0a,
	0x6f, 0xf7, 0x58, 0xce, 0x39, 0x04, 0x4e, 0x02, 0x0b, 0x40, 0xaf, 0x2f, 0xe8, 0xf6, 0x65, 0x10,
	0xfe, 0x51, 0x83, 0xfd, 0x95, 0x5e, 0xef, 0xb1, 0x30, 0x0a, 0xfe, 0x29, 0xcb, 0xe8, 0xc5, 0xbb,
	0x13, 0xca, 0x07, 0x4a, 0x09, 0x3a, 0x2a, 0x15, 0xca, 0x75, 0x90, 0xf8, 0x3f, 0x5f, 0xba, 0x70,
	0x02, 0x7b, 0x2b, 0x42, 0xdd, 0x41, 0xad, 0x87, 0x7f, 0x7b, 0x00, 0x8b, 0xd7, 0x18, 0x79, 0x05,
	0x5b, 0xee, 0x9b, 0x80, 0x04, 0x2b, 0x9f, 0x0a, 0xa6, 0xe6, 0x60, 0xff, 0x86, 0x67, 0x84, 0x76,
	0xe4, 0x2e, 0x54, 0xc7, 0xd1, 0xb5, 0x4f, 0x85, 0xe3, 0x68, 0xc5, 0x0e, 0x3e, 0x86, 0xb6, 0xb3,
	0xfa, 0xc8, 0x9e, 0xf3, 0x51, 0x5b, 0x5e, 0x9c, 0x41, 0xb0, 0x4a, 0xe4, 0xa4, 0xe3, 0xc0, 0xdb,
	0x4d, 0xe7, 0xea, 0x7a, 0x73, 0xd3, 0xb9, 0xbe, 0xb7, 0x4e, 0xe1, 0xa3, 0xe5, 0x45, 0x41, 0x9e,
	0x2c, 0xae, 0xe1, 0xfa, 0xb2, 0x09, 0x9e, 0xae, 0x91, 0x56, 0xee, 0x7e, 0x81, 0x47, 0x2b, 0xd0,
	0x4a, 0x9e, 0xcf, 0xad, 0xd6, 0x6d, 0x86, 0x20, 0xbc, 0x49, 0xa5, 0xf2, 0x3e, 0x82, 0xdd, 0x95,
	0xa0, 0x21, 0x1f, 0xaf, 0x32, 0xbe, 0x02, 0xd5, 0xe0, 0x93, 0x9b, 0x95, 0x16, 0x15, 0xac, 0x18,
	0x55, 0xa7, 0x82, 0x75, 0x98, 0x71, 0x2a, 0x58, 0x3b, 0xeb, 0xc1, 0xcb, 0x3f, 0xff, 0xd9, 0xf8,
	0x06, 0x5e, 0x4c, 0x94, 0xe2, 0xf2, 0xab, 0x7e, 0x3f, 0x63, 0xa9, 0xec, 0xcd, 0xff, 0x7e, 0xf4,
	0x52, 0x36, 0xed, 0x27, 0x9c, 0xf6, 0x91, 0xf2, 0x3e, 0x2d, 0x32, 0x7c, 0xdb, 0x9b, 0xa8, 0x69,
	0x4e, 0x1e, 0xfe, 0x40, 0x8b, 0xf1, 0x91, 0xd1, 0x38, 0x19, 0x9e, 0x8d, 0x1a, 0xe6, 0xe5, 0xf4,
	0xe5, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xff, 0x3f, 0xc5, 0xca, 0xd9, 0x0c, 0x00, 0x00,
}
