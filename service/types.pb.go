// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Tag struct {
	Color             string                      `protobuf:"bytes,1,opt,name=color" json:"color,omitempty"`
	CreateTime        *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description       string                      `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Owner             string                      `protobuf:"bytes,4,opt,name=owner" json:"owner,omitempty"`
	ResourceCount     int32                       `protobuf:"varint,5,opt,name=resource_count,json=resourceCount" json:"resource_count,omitempty"`
	ResourceTagPairs  []*Tag_ResourceTagPair      `protobuf:"bytes,6,rep,name=resource_tag_pairs,json=resourceTagPairs" json:"resource_tag_pairs,omitempty"`
	ResourceTypeCount []*Tag_ResourceTypeCount    `protobuf:"bytes,7,rep,name=resource_type_count,json=resourceTypeCount" json:"resource_type_count,omitempty"`
	TagId             string                      `protobuf:"bytes,8,opt,name=tag_id,json=tagId" json:"tag_id,omitempty"`
	TagKey            string                      `protobuf:"bytes,9,opt,name=tag_key,json=tagKey" json:"tag_key,omitempty"`
	TagName           string                      `protobuf:"bytes,10,opt,name=tag_name,json=tagName" json:"tag_name,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{0} }

func (m *Tag) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *Tag) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Tag) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Tag) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Tag) GetResourceCount() int32 {
	if m != nil {
		return m.ResourceCount
	}
	return 0
}

func (m *Tag) GetResourceTagPairs() []*Tag_ResourceTagPair {
	if m != nil {
		return m.ResourceTagPairs
	}
	return nil
}

func (m *Tag) GetResourceTypeCount() []*Tag_ResourceTypeCount {
	if m != nil {
		return m.ResourceTypeCount
	}
	return nil
}

func (m *Tag) GetTagId() string {
	if m != nil {
		return m.TagId
	}
	return ""
}

func (m *Tag) GetTagKey() string {
	if m != nil {
		return m.TagKey
	}
	return ""
}

func (m *Tag) GetTagName() string {
	if m != nil {
		return m.TagName
	}
	return ""
}

type Tag_ResourceTagPair struct {
	ResourceId   string                      `protobuf:"bytes,1,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	ResourceType string                      `protobuf:"bytes,2,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
	Status       string                      `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	StatusTime   *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	TagId        string                      `protobuf:"bytes,5,opt,name=tag_id,json=tagId" json:"tag_id,omitempty"`
}

func (m *Tag_ResourceTagPair) Reset()                    { *m = Tag_ResourceTagPair{} }
func (m *Tag_ResourceTagPair) String() string            { return proto.CompactTextString(m) }
func (*Tag_ResourceTagPair) ProtoMessage()               {}
func (*Tag_ResourceTagPair) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{0, 0} }

func (m *Tag_ResourceTagPair) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *Tag_ResourceTagPair) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *Tag_ResourceTagPair) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Tag_ResourceTagPair) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Tag_ResourceTagPair) GetTagId() string {
	if m != nil {
		return m.TagId
	}
	return ""
}

type Tag_ResourceTypeCount struct {
	Count        int32  `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	ResourceType string `protobuf:"bytes,2,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
}

func (m *Tag_ResourceTypeCount) Reset()                    { *m = Tag_ResourceTypeCount{} }
func (m *Tag_ResourceTypeCount) String() string            { return proto.CompactTextString(m) }
func (*Tag_ResourceTypeCount) ProtoMessage()               {}
func (*Tag_ResourceTypeCount) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{0, 1} }

func (m *Tag_ResourceTypeCount) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Tag_ResourceTypeCount) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

type EIP struct {
	AlarmStatus      string                      `protobuf:"bytes,1,opt,name=alarm_status,json=alarmStatus" json:"alarm_status,omitempty"`
	AssociateMode    int32                       `protobuf:"varint,2,opt,name=associate_mode,json=associateMode" json:"associate_mode,omitempty"`
	Bandwidth        int32                       `protobuf:"varint,3,opt,name=bandwidth" json:"bandwidth,omitempty"`
	BillingMode      string                      `protobuf:"bytes,4,opt,name=billing_mode,json=billingMode" json:"billing_mode,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description      string                      `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	EipAddr          string                      `protobuf:"bytes,7,opt,name=eip_addr,json=eipAddr" json:"eip_addr,omitempty"`
	EipGroup         string                      `protobuf:"bytes,8,opt,name=eip_group,json=eipGroup" json:"eip_group,omitempty"`
	EipId            string                      `protobuf:"bytes,9,opt,name=eip_id,json=eipId" json:"eip_id,omitempty"`
	EipName          string                      `protobuf:"bytes,10,opt,name=eip_name,json=eipName" json:"eip_name,omitempty"`
	IcpCodes         string                      `protobuf:"bytes,11,opt,name=icp_codes,json=icpCodes" json:"icp_codes,omitempty"`
	NeedIcp          int32                       `protobuf:"varint,12,opt,name=need_icp,json=needIcp" json:"need_icp,omitempty"`
	Resource         *EIP_Resource               `protobuf:"bytes,13,opt,name=resource" json:"resource,omitempty"`
	Status           string                      `protobuf:"bytes,14,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,15,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SubCode          int32                       `protobuf:"varint,16,opt,name=sub_code,json=subCode" json:"sub_code,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,17,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,18,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
}

func (m *EIP) Reset()                    { *m = EIP{} }
func (m *EIP) String() string            { return proto.CompactTextString(m) }
func (*EIP) ProtoMessage()               {}
func (*EIP) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{1} }

func (m *EIP) GetAlarmStatus() string {
	if m != nil {
		return m.AlarmStatus
	}
	return ""
}

func (m *EIP) GetAssociateMode() int32 {
	if m != nil {
		return m.AssociateMode
	}
	return 0
}

func (m *EIP) GetBandwidth() int32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *EIP) GetBillingMode() string {
	if m != nil {
		return m.BillingMode
	}
	return ""
}

func (m *EIP) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *EIP) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *EIP) GetEipAddr() string {
	if m != nil {
		return m.EipAddr
	}
	return ""
}

func (m *EIP) GetEipGroup() string {
	if m != nil {
		return m.EipGroup
	}
	return ""
}

func (m *EIP) GetEipId() string {
	if m != nil {
		return m.EipId
	}
	return ""
}

func (m *EIP) GetEipName() string {
	if m != nil {
		return m.EipName
	}
	return ""
}

func (m *EIP) GetIcpCodes() string {
	if m != nil {
		return m.IcpCodes
	}
	return ""
}

func (m *EIP) GetNeedIcp() int32 {
	if m != nil {
		return m.NeedIcp
	}
	return 0
}

func (m *EIP) GetResource() *EIP_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *EIP) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *EIP) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *EIP) GetSubCode() int32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *EIP) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *EIP) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

type EIP_Resource struct {
	ResourceId   string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	ResourceName string `protobuf:"bytes,2,opt,name=resource_name,json=resourceName" json:"resource_name,omitempty"`
	ResourceType string `protobuf:"bytes,3,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
}

func (m *EIP_Resource) Reset()                    { *m = EIP_Resource{} }
func (m *EIP_Resource) String() string            { return proto.CompactTextString(m) }
func (*EIP_Resource) ProtoMessage()               {}
func (*EIP_Resource) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{1, 0} }

func (m *EIP_Resource) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *EIP_Resource) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *EIP_Resource) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

type Job struct {
	CreateTime  *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	JobAction   string                      `protobuf:"bytes,2,opt,name=job_action,json=jobAction" json:"job_action,omitempty"`
	JobId       string                      `protobuf:"bytes,3,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	Owner       string                      `protobuf:"bytes,4,opt,name=owner" json:"owner,omitempty"`
	ResourceIds string                      `protobuf:"bytes,5,opt,name=resource_ids,json=resourceIds" json:"resource_ids,omitempty"`
	Status      string                      `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	StatusTime  *google_protobuf1.Timestamp `protobuf:"bytes,7,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{2} }

func (m *Job) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Job) GetJobAction() string {
	if m != nil {
		return m.JobAction
	}
	return ""
}

func (m *Job) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *Job) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Job) GetResourceIds() string {
	if m != nil {
		return m.ResourceIds
	}
	return ""
}

func (m *Job) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Job) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type Volume struct {
	CreateTime         *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description        string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Device             string                      `protobuf:"bytes,3,opt,name=device" json:"device,omitempty"`
	Instance           *Instance                   `protobuf:"bytes,4,opt,name=instance" json:"instance,omitempty"`
	Instances          []*Instance                 `protobuf:"bytes,5,rep,name=instances" json:"instances,omitempty"`
	LatestSnapshotTime *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=latest_snapshot_time,json=latestSnapshotTime" json:"latest_snapshot_time,omitempty"`
	Owner              string                      `protobuf:"bytes,7,opt,name=owner" json:"owner,omitempty"`
	PlaceGroupId       string                      `protobuf:"bytes,8,opt,name=place_group_id,json=placeGroupId" json:"place_group_id,omitempty"`
	Size               int32                       `protobuf:"varint,9,opt,name=size" json:"size,omitempty"`
	Status             string                      `protobuf:"bytes,10,opt,name=status" json:"status,omitempty"`
	StatusTime         *google_protobuf1.Timestamp `protobuf:"bytes,11,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SubCode            int32                       `protobuf:"varint,12,opt,name=sub_code,json=subCode" json:"sub_code,omitempty"`
	Tags               []*Tag                      `protobuf:"bytes,13,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus   string                      `protobuf:"bytes,14,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	VolumeId           string                      `protobuf:"bytes,15,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	VolumeName         string                      `protobuf:"bytes,16,opt,name=volume_name,json=volumeName" json:"volume_name,omitempty"`
	VolumeType         int32                       `protobuf:"varint,17,opt,name=volume_type,json=volumeType" json:"volume_type,omitempty"`
}

func (m *Volume) Reset()                    { *m = Volume{} }
func (m *Volume) String() string            { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()               {}
func (*Volume) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{3} }

func (m *Volume) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Volume) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Volume) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *Volume) GetInstance() *Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *Volume) GetInstances() []*Instance {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *Volume) GetLatestSnapshotTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.LatestSnapshotTime
	}
	return nil
}

func (m *Volume) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Volume) GetPlaceGroupId() string {
	if m != nil {
		return m.PlaceGroupId
	}
	return ""
}

func (m *Volume) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Volume) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Volume) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Volume) GetSubCode() int32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *Volume) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Volume) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Volume) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *Volume) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

func (m *Volume) GetVolumeType() int32 {
	if m != nil {
		return m.VolumeType
	}
	return 0
}

type NIC struct {
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	InstanceId       string                      `protobuf:"bytes,2,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	NicId            string                      `protobuf:"bytes,3,opt,name=nic_id,json=nicId" json:"nic_id,omitempty"`
	NicName          string                      `protobuf:"bytes,4,opt,name=nic_name,json=nicName" json:"nic_name,omitempty"`
	Owner            string                      `protobuf:"bytes,5,opt,name=owner" json:"owner,omitempty"`
	PrivateIp        string                      `protobuf:"bytes,6,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	Role             int32                       `protobuf:"varint,7,opt,name=role" json:"role,omitempty"`
	RootUserId       string                      `protobuf:"bytes,8,opt,name=root_user_id,json=rootUserId" json:"root_user_id,omitempty"`
	SecurityGroup    string                      `protobuf:"bytes,9,opt,name=security_group,json=securityGroup" json:"security_group,omitempty"`
	Sequence         int32                       `protobuf:"varint,10,opt,name=sequence" json:"sequence,omitempty"`
	Status           string                      `protobuf:"bytes,11,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,12,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,13,rep,name=tags" json:"tags,omitempty"`
	VxnetId          string                      `protobuf:"bytes,14,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
	Eip              *EIP                        `protobuf:"bytes,15,opt,name=eip" json:"eip,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,16,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	Controller       string                      `protobuf:"bytes,17,opt,name=controller" json:"controller,omitempty"`
	VxnetType        int32                       `protobuf:"varint,18,opt,name=vxnet_type,json=vxnetType" json:"vxnet_type,omitempty"`
	ConsoleId        string                      `protobuf:"bytes,19,opt,name=console_id,json=consoleId" json:"console_id,omitempty"`
	ResourceId       string                      `protobuf:"bytes,20,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
}

func (m *NIC) Reset()                    { *m = NIC{} }
func (m *NIC) String() string            { return proto.CompactTextString(m) }
func (*NIC) ProtoMessage()               {}
func (*NIC) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{4} }

func (m *NIC) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *NIC) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *NIC) GetNicId() string {
	if m != nil {
		return m.NicId
	}
	return ""
}

func (m *NIC) GetNicName() string {
	if m != nil {
		return m.NicName
	}
	return ""
}

func (m *NIC) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *NIC) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *NIC) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *NIC) GetRootUserId() string {
	if m != nil {
		return m.RootUserId
	}
	return ""
}

func (m *NIC) GetSecurityGroup() string {
	if m != nil {
		return m.SecurityGroup
	}
	return ""
}

func (m *NIC) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *NIC) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *NIC) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *NIC) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *NIC) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

func (m *NIC) GetEip() *EIP {
	if m != nil {
		return m.Eip
	}
	return nil
}

func (m *NIC) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *NIC) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *NIC) GetVxnetType() int32 {
	if m != nil {
		return m.VxnetType
	}
	return 0
}

func (m *NIC) GetConsoleId() string {
	if m != nil {
		return m.ConsoleId
	}
	return ""
}

func (m *NIC) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

type KeyPair struct {
	Description   string   `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	EncryptMethod string   `protobuf:"bytes,2,opt,name=encrypt_method,json=encryptMethod" json:"encrypt_method,omitempty"`
	InstanceIds   []string `protobuf:"bytes,3,rep,name=instance_ids,json=instanceIds" json:"instance_ids,omitempty"`
	KeypairId     string   `protobuf:"bytes,4,opt,name=keypair_id,json=keypairId" json:"keypair_id,omitempty"`
	KeypairName   string   `protobuf:"bytes,5,opt,name=keypair_name,json=keypairName" json:"keypair_name,omitempty"`
	PubKey        string   `protobuf:"bytes,6,opt,name=pub_key,json=pubKey" json:"pub_key,omitempty"`
	Tags          []*Tag   `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
}

func (m *KeyPair) Reset()                    { *m = KeyPair{} }
func (m *KeyPair) String() string            { return proto.CompactTextString(m) }
func (*KeyPair) ProtoMessage()               {}
func (*KeyPair) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{5} }

func (m *KeyPair) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *KeyPair) GetEncryptMethod() string {
	if m != nil {
		return m.EncryptMethod
	}
	return ""
}

func (m *KeyPair) GetInstanceIds() []string {
	if m != nil {
		return m.InstanceIds
	}
	return nil
}

func (m *KeyPair) GetKeypairId() string {
	if m != nil {
		return m.KeypairId
	}
	return ""
}

func (m *KeyPair) GetKeypairName() string {
	if m != nil {
		return m.KeypairName
	}
	return ""
}

func (m *KeyPair) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *KeyPair) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type VxNet struct {
	AvailableIpCount int32                       `protobuf:"varint,1,opt,name=available_ip_count,json=availableIpCount" json:"available_ip_count,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description      string                      `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	InstanceIds      []string                    `protobuf:"bytes,4,rep,name=instance_ids,json=instanceIds" json:"instance_ids,omitempty"`
	Owner            string                      `protobuf:"bytes,5,opt,name=owner" json:"owner,omitempty"`
	Router           *Router                     `protobuf:"bytes,6,opt,name=router" json:"router,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
	VpcRouterId      string                      `protobuf:"bytes,8,opt,name=vpc_router_id,json=vpcRouterId" json:"vpc_router_id,omitempty"`
	VxnetId          string                      `protobuf:"bytes,9,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
	VxnetName        string                      `protobuf:"bytes,10,opt,name=vxnet_name,json=vxnetName" json:"vxnet_name,omitempty"`
	VxnetType        int32                       `protobuf:"varint,11,opt,name=vxnet_type,json=vxnetType" json:"vxnet_type,omitempty"`
}

func (m *VxNet) Reset()                    { *m = VxNet{} }
func (m *VxNet) String() string            { return proto.CompactTextString(m) }
func (*VxNet) ProtoMessage()               {}
func (*VxNet) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{6} }

func (m *VxNet) GetAvailableIpCount() int32 {
	if m != nil {
		return m.AvailableIpCount
	}
	return 0
}

func (m *VxNet) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *VxNet) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *VxNet) GetInstanceIds() []string {
	if m != nil {
		return m.InstanceIds
	}
	return nil
}

func (m *VxNet) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *VxNet) GetRouter() *Router {
	if m != nil {
		return m.Router
	}
	return nil
}

func (m *VxNet) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *VxNet) GetVpcRouterId() string {
	if m != nil {
		return m.VpcRouterId
	}
	return ""
}

func (m *VxNet) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

func (m *VxNet) GetVxnetName() string {
	if m != nil {
		return m.VxnetName
	}
	return ""
}

func (m *VxNet) GetVxnetType() int32 {
	if m != nil {
		return m.VxnetType
	}
	return 0
}

type Router struct {
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description      string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	DynIpEnd         string                      `protobuf:"bytes,3,opt,name=dyn_ip_end,json=dynIpEnd" json:"dyn_ip_end,omitempty"`
	DynIpStart       string                      `protobuf:"bytes,4,opt,name=dyn_ip_start,json=dynIpStart" json:"dyn_ip_start,omitempty"`
	Eip              *EIP                        `protobuf:"bytes,5,opt,name=eip" json:"eip,omitempty"`
	IpNetwork        string                      `protobuf:"bytes,6,opt,name=ip_network,json=ipNetwork" json:"ip_network,omitempty"`
	IsApplied        int32                       `protobuf:"varint,7,opt,name=is_applied,json=isApplied" json:"is_applied,omitempty"`
	ManagerIp        string                      `protobuf:"bytes,8,opt,name=manager_ip,json=managerIp" json:"manager_ip,omitempty"`
	Mode             int32                       `protobuf:"varint,9,opt,name=mode" json:"mode,omitempty"`
	PrivateIp        string                      `protobuf:"bytes,10,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	RouterId         string                      `protobuf:"bytes,11,opt,name=router_id,json=routerId" json:"router_id,omitempty"`
	RouterName       string                      `protobuf:"bytes,12,opt,name=router_name,json=routerName" json:"router_name,omitempty"`
	RouterType       int32                       `protobuf:"varint,13,opt,name=router_type,json=routerType" json:"router_type,omitempty"`
	SecurityGroupId  string                      `protobuf:"bytes,14,opt,name=security_group_id,json=securityGroupId" json:"security_group_id,omitempty"`
	Status           string                      `protobuf:"bytes,15,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,16,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,17,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,18,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	Vxnets           []*VxNet                    `protobuf:"bytes,19,rep,name=vxnets" json:"vxnets,omitempty"`
}

func (m *Router) Reset()                    { *m = Router{} }
func (m *Router) String() string            { return proto.CompactTextString(m) }
func (*Router) ProtoMessage()               {}
func (*Router) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{7} }

func (m *Router) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Router) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Router) GetDynIpEnd() string {
	if m != nil {
		return m.DynIpEnd
	}
	return ""
}

func (m *Router) GetDynIpStart() string {
	if m != nil {
		return m.DynIpStart
	}
	return ""
}

func (m *Router) GetEip() *EIP {
	if m != nil {
		return m.Eip
	}
	return nil
}

func (m *Router) GetIpNetwork() string {
	if m != nil {
		return m.IpNetwork
	}
	return ""
}

func (m *Router) GetIsApplied() int32 {
	if m != nil {
		return m.IsApplied
	}
	return 0
}

func (m *Router) GetManagerIp() string {
	if m != nil {
		return m.ManagerIp
	}
	return ""
}

func (m *Router) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *Router) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *Router) GetRouterId() string {
	if m != nil {
		return m.RouterId
	}
	return ""
}

func (m *Router) GetRouterName() string {
	if m != nil {
		return m.RouterName
	}
	return ""
}

func (m *Router) GetRouterType() int32 {
	if m != nil {
		return m.RouterType
	}
	return 0
}

func (m *Router) GetSecurityGroupId() string {
	if m != nil {
		return m.SecurityGroupId
	}
	return ""
}

func (m *Router) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Router) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Router) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Router) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Router) GetVxnets() []*VxNet {
	if m != nil {
		return m.Vxnets
	}
	return nil
}

type Instance struct {
	AlarmStatus string                      `protobuf:"bytes,1,opt,name=alarm_status,json=alarmStatus" json:"alarm_status,omitempty"`
	CpuTopology string                      `protobuf:"bytes,2,opt,name=cpu_topology,json=cpuTopology" json:"cpu_topology,omitempty"`
	CreateTime  *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description string                      `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Device      string                      `protobuf:"bytes,5,opt,name=device" json:"device,omitempty"`
	// DHCPOptions      *DHCPOption    `json:"dhcp_options" name:"dhcp_options"`
	// DNSAliases       []*DNSAlias    `json:"dns_aliases" name:"dns_aliases"`
	Eip *EIP `protobuf:"bytes,8,opt,name=eip" json:"eip,omitempty"`
	// Extra            *Extra         `json:"extra" name:"extra"`
	GraphicsPasswd   string   `protobuf:"bytes,10,opt,name=graphics_passwd,json=graphicsPasswd" json:"graphics_passwd,omitempty"`
	GraphicsProtocol string   `protobuf:"bytes,11,opt,name=graphics_protocol,json=graphicsProtocol" json:"graphics_protocol,omitempty"`
	Image            *Image   `protobuf:"bytes,12,opt,name=image" json:"image,omitempty"`
	ImageId          string   `protobuf:"bytes,13,opt,name=image_id,json=imageId" json:"image_id,omitempty"`
	InstanceClass    int32    `protobuf:"varint,14,opt,name=instance_class,json=instanceClass" json:"instance_class,omitempty"`
	InstanceId       string   `protobuf:"bytes,15,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	InstanceName     string   `protobuf:"bytes,16,opt,name=instance_name,json=instanceName" json:"instance_name,omitempty"`
	InstanceType     string   `protobuf:"bytes,17,opt,name=instance_type,json=instanceType" json:"instance_type,omitempty"`
	KeypairIds       []string `protobuf:"bytes,18,rep,name=keypair_ids,json=keypairIds" json:"keypair_ids,omitempty"`
	MemoryCurrent    int32    `protobuf:"varint,19,opt,name=memory_current,json=memoryCurrent" json:"memory_current,omitempty"`
	PrivateIp        string   `protobuf:"bytes,20,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	// SecurityGroup    *SecurityGroup `json:"security_group" name:"security_group"`
	Status           string                      `protobuf:"bytes,22,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,23,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SubCode          int32                       `protobuf:"varint,24,opt,name=sub_code,json=subCode" json:"sub_code,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,25,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,26,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	VcpusCurrent     int32                       `protobuf:"varint,27,opt,name=vcpus_current,json=vcpusCurrent" json:"vcpus_current,omitempty"`
	VolumeIds        []string                    `protobuf:"bytes,28,rep,name=volume_ids,json=volumeIds" json:"volume_ids,omitempty"`
	Volumes          []*Volume                   `protobuf:"bytes,29,rep,name=volumes" json:"volumes,omitempty"`
	Vxnets           []*Instance_InstanceVxNet   `protobuf:"bytes,30,rep,name=vxnets" json:"vxnets,omitempty"`
}

func (m *Instance) Reset()                    { *m = Instance{} }
func (m *Instance) String() string            { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()               {}
func (*Instance) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{8} }

func (m *Instance) GetAlarmStatus() string {
	if m != nil {
		return m.AlarmStatus
	}
	return ""
}

func (m *Instance) GetCpuTopology() string {
	if m != nil {
		return m.CpuTopology
	}
	return ""
}

func (m *Instance) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Instance) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Instance) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *Instance) GetEip() *EIP {
	if m != nil {
		return m.Eip
	}
	return nil
}

func (m *Instance) GetGraphicsPasswd() string {
	if m != nil {
		return m.GraphicsPasswd
	}
	return ""
}

func (m *Instance) GetGraphicsProtocol() string {
	if m != nil {
		return m.GraphicsProtocol
	}
	return ""
}

func (m *Instance) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *Instance) GetImageId() string {
	if m != nil {
		return m.ImageId
	}
	return ""
}

func (m *Instance) GetInstanceClass() int32 {
	if m != nil {
		return m.InstanceClass
	}
	return 0
}

func (m *Instance) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *Instance) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *Instance) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *Instance) GetKeypairIds() []string {
	if m != nil {
		return m.KeypairIds
	}
	return nil
}

func (m *Instance) GetMemoryCurrent() int32 {
	if m != nil {
		return m.MemoryCurrent
	}
	return 0
}

func (m *Instance) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *Instance) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Instance) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Instance) GetSubCode() int32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *Instance) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Instance) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Instance) GetVcpusCurrent() int32 {
	if m != nil {
		return m.VcpusCurrent
	}
	return 0
}

func (m *Instance) GetVolumeIds() []string {
	if m != nil {
		return m.VolumeIds
	}
	return nil
}

func (m *Instance) GetVolumes() []*Volume {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *Instance) GetVxnets() []*Instance_InstanceVxNet {
	if m != nil {
		return m.Vxnets
	}
	return nil
}

type Instance_InstanceVxNet struct {
	NicId     string `protobuf:"bytes,1,opt,name=nic_id,json=nicId" json:"nic_id,omitempty"`
	PrivateIp string `protobuf:"bytes,2,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	Role      int32  `protobuf:"varint,3,opt,name=role" json:"role,omitempty"`
	VxnetId   string `protobuf:"bytes,4,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
	VxnetName string `protobuf:"bytes,5,opt,name=vxnet_name,json=vxnetName" json:"vxnet_name,omitempty"`
	VxnetType int32  `protobuf:"varint,6,opt,name=vxnet_type,json=vxnetType" json:"vxnet_type,omitempty"`
}

func (m *Instance_InstanceVxNet) Reset()                    { *m = Instance_InstanceVxNet{} }
func (m *Instance_InstanceVxNet) String() string            { return proto.CompactTextString(m) }
func (*Instance_InstanceVxNet) ProtoMessage()               {}
func (*Instance_InstanceVxNet) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{8, 0} }

func (m *Instance_InstanceVxNet) GetNicId() string {
	if m != nil {
		return m.NicId
	}
	return ""
}

func (m *Instance_InstanceVxNet) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *Instance_InstanceVxNet) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *Instance_InstanceVxNet) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

func (m *Instance_InstanceVxNet) GetVxnetName() string {
	if m != nil {
		return m.VxnetName
	}
	return ""
}

func (m *Instance_InstanceVxNet) GetVxnetType() int32 {
	if m != nil {
		return m.VxnetType
	}
	return 0
}

type Image struct {
	AppBillingId     string                      `protobuf:"bytes,1,opt,name=app_billing_id,json=appBillingId" json:"app_billing_id,omitempty"`
	Architecture     string                      `protobuf:"bytes,2,opt,name=architecture" json:"architecture,omitempty"`
	BillingId        string                      `protobuf:"bytes,3,opt,name=billing_id,json=billingId" json:"billing_id,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	DefaultPasswd    string                      `protobuf:"bytes,5,opt,name=default_passwd,json=defaultPasswd" json:"default_passwd,omitempty"`
	DefaultUser      string                      `protobuf:"bytes,6,opt,name=default_user,json=defaultUser" json:"default_user,omitempty"`
	Description      string                      `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	FResetpwd        int32                       `protobuf:"varint,8,opt,name=f_resetpwd,json=fResetpwd" json:"f_resetpwd,omitempty"`
	Feature          int32                       `protobuf:"varint,9,opt,name=feature" json:"feature,omitempty"`
	Features         int32                       `protobuf:"varint,10,opt,name=features" json:"features,omitempty"`
	Hypervisor       string                      `protobuf:"bytes,11,opt,name=hypervisor" json:"hypervisor,omitempty"`
	ImageId          string                      `protobuf:"bytes,12,opt,name=image_id,json=imageId" json:"image_id,omitempty"`
	ImageName        string                      `protobuf:"bytes,13,opt,name=image_name,json=imageName" json:"image_name,omitempty"`
	InstanceIds      []string                    `protobuf:"bytes,14,rep,name=instance_ids,json=instanceIds" json:"instance_ids,omitempty"`
	OsFamily         string                      `protobuf:"bytes,15,opt,name=os_family,json=osFamily" json:"os_family,omitempty"`
	Owner            string                      `protobuf:"bytes,16,opt,name=owner" json:"owner,omitempty"`
	Platform         string                      `protobuf:"bytes,17,opt,name=platform" json:"platform,omitempty"`
	ProcessorType    string                      `protobuf:"bytes,18,opt,name=processor_type,json=processorType" json:"processor_type,omitempty"`
	Provider         string                      `protobuf:"bytes,19,opt,name=provider" json:"provider,omitempty"`
	RecommendedType  string                      `protobuf:"bytes,20,opt,name=recommended_type,json=recommendedType" json:"recommended_type,omitempty"`
	RootId           string                      `protobuf:"bytes,21,opt,name=root_id,json=rootId" json:"root_id,omitempty"`
	Size             int32                       `protobuf:"varint,22,opt,name=size" json:"size,omitempty"`
	Status           string                      `protobuf:"bytes,23,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,24,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SubCode          int32                       `protobuf:"varint,25,opt,name=sub_code,json=subCode" json:"sub_code,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,26,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	UiType           string                      `protobuf:"bytes,27,opt,name=ui_type,json=uiType" json:"ui_type,omitempty"`
	Visibility       string                      `protobuf:"bytes,28,opt,name=visibility" json:"visibility,omitempty"`
}

func (m *Image) Reset()                    { *m = Image{} }
func (m *Image) String() string            { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()               {}
func (*Image) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{9} }

func (m *Image) GetAppBillingId() string {
	if m != nil {
		return m.AppBillingId
	}
	return ""
}

func (m *Image) GetArchitecture() string {
	if m != nil {
		return m.Architecture
	}
	return ""
}

func (m *Image) GetBillingId() string {
	if m != nil {
		return m.BillingId
	}
	return ""
}

func (m *Image) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Image) GetDefaultPasswd() string {
	if m != nil {
		return m.DefaultPasswd
	}
	return ""
}

func (m *Image) GetDefaultUser() string {
	if m != nil {
		return m.DefaultUser
	}
	return ""
}

func (m *Image) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Image) GetFResetpwd() int32 {
	if m != nil {
		return m.FResetpwd
	}
	return 0
}

func (m *Image) GetFeature() int32 {
	if m != nil {
		return m.Feature
	}
	return 0
}

func (m *Image) GetFeatures() int32 {
	if m != nil {
		return m.Features
	}
	return 0
}

func (m *Image) GetHypervisor() string {
	if m != nil {
		return m.Hypervisor
	}
	return ""
}

func (m *Image) GetImageId() string {
	if m != nil {
		return m.ImageId
	}
	return ""
}

func (m *Image) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *Image) GetInstanceIds() []string {
	if m != nil {
		return m.InstanceIds
	}
	return nil
}

func (m *Image) GetOsFamily() string {
	if m != nil {
		return m.OsFamily
	}
	return ""
}

func (m *Image) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Image) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *Image) GetProcessorType() string {
	if m != nil {
		return m.ProcessorType
	}
	return ""
}

func (m *Image) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *Image) GetRecommendedType() string {
	if m != nil {
		return m.RecommendedType
	}
	return ""
}

func (m *Image) GetRootId() string {
	if m != nil {
		return m.RootId
	}
	return ""
}

func (m *Image) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Image) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Image) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Image) GetSubCode() int32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *Image) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Image) GetUiType() string {
	if m != nil {
		return m.UiType
	}
	return ""
}

func (m *Image) GetVisibility() string {
	if m != nil {
		return m.Visibility
	}
	return ""
}

type Mongo struct {
	AlarmStatus         string                      `protobuf:"bytes,1,opt,name=alarm_status,json=alarmStatus" json:"alarm_status,omitempty"`
	AutoBackupTime      int32                       `protobuf:"varint,2,opt,name=auto_backup_time,json=autoBackupTime" json:"auto_backup_time,omitempty"`
	AutoMinorVerUpgrade int32                       `protobuf:"varint,3,opt,name=auto_minor_ver_upgrade,json=autoMinorVerUpgrade" json:"auto_minor_ver_upgrade,omitempty"`
	CreateTime          *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description         string                      `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	LatestSnapshotTime  *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=latest_snapshot_time,json=latestSnapshotTime" json:"latest_snapshot_time,omitempty"`
	MongoId             string                      `protobuf:"bytes,7,opt,name=mongo_id,json=mongoId" json:"mongo_id,omitempty"`
	MongoName           string                      `protobuf:"bytes,8,opt,name=mongo_name,json=mongoName" json:"mongo_name,omitempty"`
	MongoType           int32                       `protobuf:"varint,9,opt,name=mongo_type,json=mongoType" json:"mongo_type,omitempty"`
	MongoVersion        string                      `protobuf:"bytes,10,opt,name=mongo_version,json=mongoVersion" json:"mongo_version,omitempty"`
	Status              string                      `protobuf:"bytes,11,opt,name=status" json:"status,omitempty"`
	StatusTime          *google_protobuf1.Timestamp `protobuf:"bytes,12,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	StorageSize         int32                       `protobuf:"varint,13,opt,name=storage_size,json=storageSize" json:"storage_size,omitempty"`
	Tags                []*Tag                      `protobuf:"bytes,14,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus    string                      `protobuf:"bytes,15,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	Vxnet               *VxNet                      `protobuf:"bytes,16,opt,name=vxnet" json:"vxnet,omitempty"`
}

func (m *Mongo) Reset()                    { *m = Mongo{} }
func (m *Mongo) String() string            { return proto.CompactTextString(m) }
func (*Mongo) ProtoMessage()               {}
func (*Mongo) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{10} }

func (m *Mongo) GetAlarmStatus() string {
	if m != nil {
		return m.AlarmStatus
	}
	return ""
}

func (m *Mongo) GetAutoBackupTime() int32 {
	if m != nil {
		return m.AutoBackupTime
	}
	return 0
}

func (m *Mongo) GetAutoMinorVerUpgrade() int32 {
	if m != nil {
		return m.AutoMinorVerUpgrade
	}
	return 0
}

func (m *Mongo) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Mongo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Mongo) GetLatestSnapshotTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.LatestSnapshotTime
	}
	return nil
}

func (m *Mongo) GetMongoId() string {
	if m != nil {
		return m.MongoId
	}
	return ""
}

func (m *Mongo) GetMongoName() string {
	if m != nil {
		return m.MongoName
	}
	return ""
}

func (m *Mongo) GetMongoType() int32 {
	if m != nil {
		return m.MongoType
	}
	return 0
}

func (m *Mongo) GetMongoVersion() string {
	if m != nil {
		return m.MongoVersion
	}
	return ""
}

func (m *Mongo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Mongo) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Mongo) GetStorageSize() int32 {
	if m != nil {
		return m.StorageSize
	}
	return 0
}

func (m *Mongo) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Mongo) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Mongo) GetVxnet() *VxNet {
	if m != nil {
		return m.Vxnet
	}
	return nil
}

type MongoNode struct {
	Ip          string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	MongoId     string `protobuf:"bytes,2,opt,name=mongo_id,json=mongoId" json:"mongo_id,omitempty"`
	MongoNodeId string `protobuf:"bytes,3,opt,name=mongo_node_id,json=mongoNodeId" json:"mongo_node_id,omitempty"`
	Primary     int32  `protobuf:"varint,4,opt,name=primary" json:"primary,omitempty"`
	Status      string `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	VxnetId     string `protobuf:"bytes,6,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
}

func (m *MongoNode) Reset()                    { *m = MongoNode{} }
func (m *MongoNode) String() string            { return proto.CompactTextString(m) }
func (*MongoNode) ProtoMessage()               {}
func (*MongoNode) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{11} }

func (m *MongoNode) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *MongoNode) GetMongoId() string {
	if m != nil {
		return m.MongoId
	}
	return ""
}

func (m *MongoNode) GetMongoNodeId() string {
	if m != nil {
		return m.MongoNodeId
	}
	return ""
}

func (m *MongoNode) GetPrimary() int32 {
	if m != nil {
		return m.Primary
	}
	return 0
}

func (m *MongoNode) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MongoNode) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

func init() {
	proto.RegisterType((*Tag)(nil), "service.Tag")
	proto.RegisterType((*Tag_ResourceTagPair)(nil), "service.Tag.ResourceTagPair")
	proto.RegisterType((*Tag_ResourceTypeCount)(nil), "service.Tag.ResourceTypeCount")
	proto.RegisterType((*EIP)(nil), "service.EIP")
	proto.RegisterType((*EIP_Resource)(nil), "service.EIP.Resource")
	proto.RegisterType((*Job)(nil), "service.Job")
	proto.RegisterType((*Volume)(nil), "service.Volume")
	proto.RegisterType((*NIC)(nil), "service.NIC")
	proto.RegisterType((*KeyPair)(nil), "service.KeyPair")
	proto.RegisterType((*VxNet)(nil), "service.VxNet")
	proto.RegisterType((*Router)(nil), "service.Router")
	proto.RegisterType((*Instance)(nil), "service.Instance")
	proto.RegisterType((*Instance_InstanceVxNet)(nil), "service.Instance.InstanceVxNet")
	proto.RegisterType((*Image)(nil), "service.Image")
	proto.RegisterType((*Mongo)(nil), "service.Mongo")
	proto.RegisterType((*MongoNode)(nil), "service.MongoNode")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor26) }

var fileDescriptor26 = []byte{
	// 2357 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x4b, 0x73, 0xdc, 0xb8,
	0x11, 0xae, 0xd1, 0x88, 0xf3, 0xe8, 0x79, 0x48, 0xa2, 0x1f, 0xa2, 0x64, 0xcb, 0x96, 0xc7, 0x76,
	0xd6, 0x9b, 0x87, 0x5c, 0xd9, 0x3d, 0xe4, 0x90, 0x93, 0xd7, 0xe5, 0xa4, 0xb8, 0x1b, 0xab, 0x5c,
	0xb4, 0xd7, 0x57, 0x16, 0x86, 0x84, 0x46, 0xb0, 0x67, 0x08, 0x04, 0x20, 0xc7, 0x3b, 0xf9, 0x01,
	0xf9, 0x03, 0xa9, 0x9c, 0x72, 0xda, 0x53, 0x0e, 0xa9, 0xca, 0x21, 0x95, 0x7f, 0x90, 0x7f, 0x94,
	0x63, 0x4e, 0x29, 0x34, 0x00, 0x92, 0x43, 0x3d, 0x6c, 0xd9, 0xeb, 0x1b, 0xf1, 0x35, 0x08, 0x02,
	0xdd, 0x5f, 0x7f, 0xdd, 0x20, 0x0c, 0xf2, 0x95, 0xa0, 0xea, 0x48, 0x48, 0x9e, 0x73, 0xbf, 0xab,
	0xa8, 0x5c, 0xb2, 0x84, 0xee, 0xdf, 0x9d, 0x71, 0x3e, 0x9b, 0xd3, 0xc7, 0x08, 0x4f, 0x8b, 0x93,
	0xc7, 0x39, 0x5b, 0x50, 0x95, 0x93, 0x85, 0x30, 0x33, 0xf7, 0x0f, 0x9b, 0x13, 0x52, 0xaa, 0x12,
	0xc9, 0x44, 0xce, 0xa5, 0x99, 0x31, 0xf9, 0xb7, 0x07, 0xed, 0x57, 0x64, 0xe6, 0x5f, 0x07, 0x2f,
	0xe1, 0x73, 0x2e, 0x83, 0xd6, 0x61, 0xeb, 0x51, 0x3f, 0x32, 0x03, 0xff, 0xb7, 0x30, 0x48, 0x24,
	0x25, 0x39, 0x8d, 0xf5, 0xca, 0xc1, 0xc6, 0x61, 0xeb, 0xd1, 0xe0, 0xab, 0xfd, 0x23, 0xb3, 0xea,
	0x91, 0x5b, 0xf5, 0xe8, 0x95, 0xfb, 0x6c, 0x04, 0x66, 0xba, 0x06, 0xfc, 0x43, 0x18, 0xb8, 0xcf,
	0x31, 0x9e, 0x05, 0x6d, 0x5c, 0xb8, 0x0e, 0xe9, 0x8f, 0xf2, 0x77, 0x19, 0x95, 0xc1, 0xa6, 0xf9,
	0x28, 0x0e, 0xfc, 0x87, 0x30, 0x96, 0x54, 0xf1, 0x42, 0x26, 0x34, 0x4e, 0x78, 0x91, 0xe5, 0x81,
	0x77, 0xd8, 0x7a, 0xe4, 0x45, 0x23, 0x87, 0x3e, 0xd5, 0xa0, 0xff, 0x2d, 0xf8, 0xe5, 0xb4, 0x9c,
	0xcc, 0x62, 0x41, 0x98, 0x54, 0x41, 0xe7, 0xb0, 0xfd, 0x68, 0xf0, 0xd5, 0xed, 0x23, 0xeb, 0xa2,
	0xa3, 0x57, 0x64, 0x76, 0x14, 0xd9, 0x69, 0xaf, 0xc8, 0xec, 0x05, 0x61, 0x32, 0xda, 0x96, 0xeb,
	0x80, 0xf2, 0x8f, 0xe1, 0x5a, 0xb5, 0xd6, 0x4a, 0xb8, 0xef, 0x76, 0x71, 0xb1, 0x3b, 0xe7, 0x2f,
	0xb6, 0x12, 0x66, 0x23, 0xd1, 0x8e, 0x6c, 0x42, 0xfe, 0x0d, 0xe8, 0xe8, 0x2d, 0xb1, 0x34, 0xe8,
	0x99, 0x93, 0xe5, 0x64, 0x16, 0xa6, 0xfe, 0x2e, 0x74, 0x35, 0xfc, 0x96, 0xae, 0x82, 0x3e, 0xe2,
	0x7a, 0xd6, 0x77, 0x74, 0xe5, 0xef, 0x41, 0x4f, 0x1b, 0x32, 0xb2, 0xa0, 0x01, 0xa0, 0x45, 0x4f,
	0x3c, 0x26, 0x0b, 0xba, 0xff, 0x9f, 0x16, 0x6c, 0x35, 0x0e, 0xe0, 0xdf, 0x85, 0x41, 0xb9, 0x5d,
	0x96, 0xda, 0x90, 0x81, 0x83, 0xc2, 0xd4, 0xbf, 0x0f, 0xa3, 0xb5, 0xf3, 0x60, 0xe4, 0xfa, 0xd1,
	0xb0, 0xbe, 0x53, 0xff, 0x26, 0x74, 0x54, 0x4e, 0xf2, 0x42, 0xd9, 0xd0, 0xd8, 0x91, 0x0e, 0xba,
	0x79, 0x32, 0x41, 0xdf, 0x7c, 0x7f, 0xd0, 0xcd, 0x74, 0x0c, 0x7a, 0x75, 0x72, 0xaf, 0x76, 0xf2,
	0xfd, 0x63, 0xd8, 0x39, 0xe3, 0x38, 0xc3, 0x39, 0xed, 0xe7, 0x16, 0xc6, 0xd7, 0x0c, 0x3e, 0x68,
	0xef, 0x93, 0xff, 0x79, 0xd0, 0x7e, 0x16, 0xbe, 0xf0, 0xef, 0xc1, 0x90, 0xcc, 0x89, 0x5c, 0xc4,
	0xf6, 0x24, 0xc6, 0x15, 0x03, 0xc4, 0x5e, 0x9a, 0xe3, 0x3c, 0x84, 0x31, 0x51, 0x8a, 0x27, 0x4c,
	0xd3, 0x78, 0xc1, 0x53, 0xb3, 0xa0, 0x17, 0x8d, 0x4a, 0xf4, 0x39, 0x4f, 0xa9, 0x7f, 0x1b, 0xfa,
	0x53, 0x92, 0xa5, 0xef, 0x58, 0x9a, 0x9f, 0xa2, 0x43, 0xbc, 0xa8, 0x02, 0xf4, 0x77, 0xa6, 0x6c,
	0x3e, 0x67, 0xd9, 0xcc, 0x2c, 0x61, 0x08, 0x3b, 0xb0, 0x18, 0x2e, 0xd0, 0xc8, 0x15, 0xef, 0x53,
	0x72, 0xa5, 0x73, 0x36, 0x57, 0xf6, 0xa0, 0x47, 0x99, 0x88, 0x49, 0x9a, 0xca, 0xa0, 0x6b, 0x28,
	0x42, 0x99, 0x78, 0x92, 0xa6, 0xd2, 0xbf, 0x05, 0x7d, 0x6d, 0x9a, 0x49, 0x5e, 0x08, 0x4b, 0x38,
	0x3d, 0xf7, 0xf7, 0x7a, 0xac, 0x03, 0xa2, 0x8d, 0x2c, 0xb5, 0x94, 0xf3, 0x28, 0x13, 0x61, 0xea,
	0x96, 0xab, 0x33, 0x8e, 0x32, 0xa1, 0x19, 0xa7, 0x97, 0x63, 0x89, 0x88, 0x13, 0x9e, 0x52, 0x15,
	0x0c, 0xcc, 0x72, 0x2c, 0x11, 0x4f, 0xf5, 0x58, 0xbf, 0x97, 0x51, 0x9a, 0xc6, 0x2c, 0x11, 0xc1,
	0x10, 0xbd, 0xd4, 0xd5, 0xe3, 0x30, 0x11, 0xfe, 0xaf, 0xa1, 0xe7, 0x62, 0x14, 0x8c, 0xf0, 0xf4,
	0x37, 0xca, 0xcc, 0x79, 0x16, 0xbe, 0x28, 0x33, 0x27, 0x2a, 0xa7, 0xd5, 0x28, 0x38, 0xbe, 0x8c,
	0x82, 0x5b, 0x57, 0xa2, 0xe0, 0x1e, 0xf4, 0x54, 0x31, 0xc5, 0xfd, 0x07, 0xdb, 0x66, 0x8b, 0xaa,
	0x98, 0xea, 0xed, 0xfb, 0x87, 0xb0, 0x99, 0x93, 0x99, 0x0a, 0x76, 0x30, 0xb1, 0x87, 0xf5, 0xc4,
	0x8e, 0xd0, 0xe2, 0xff, 0x02, 0x76, 0x72, 0x49, 0x32, 0xc5, 0xb4, 0xd3, 0x1d, 0xab, 0x7c, 0xdc,
	0xdc, 0x76, 0x65, 0x30, 0xd4, 0xda, 0x2f, 0xa0, 0xe7, 0x0e, 0x75, 0xb5, 0x9c, 0x44, 0xb7, 0x37,
	0x78, 0x8d, 0xbe, 0x3f, 0x43, 0xfe, 0xf6, 0x39, 0xe4, 0xff, 0xf3, 0x06, 0xb4, 0xbf, 0xe5, 0xd3,
	0x26, 0xe3, 0x5a, 0x57, 0x62, 0xdc, 0x01, 0xc0, 0x1b, 0x3e, 0x8d, 0x49, 0x82, 0x84, 0x33, 0x7b,
	0xe9, 0xbf, 0xe1, 0xd3, 0x27, 0x08, 0x68, 0xda, 0x68, 0x33, 0x4b, 0xed, 0x0e, 0xbc, 0x37, 0x7c,
	0x1a, 0xa6, 0x17, 0x28, 0xf6, 0x3d, 0x18, 0xd6, 0xce, 0xae, 0x6c, 0xea, 0x0f, 0xaa, 0xc3, 0xab,
	0x5a, 0xa4, 0x3b, 0x97, 0x45, 0xba, 0x7b, 0x95, 0x48, 0x4f, 0xfe, 0xe6, 0x41, 0xe7, 0x35, 0x9f,
	0x17, 0x0b, 0xfa, 0x69, 0xbe, 0x68, 0x64, 0xdf, 0xc6, 0xd9, 0xec, 0xbb, 0x09, 0x9d, 0x94, 0x6a,
	0xaa, 0x38, 0xad, 0x34, 0x23, 0xff, 0x57, 0xd0, 0x63, 0x99, 0xca, 0x49, 0x96, 0x38, 0xa1, 0xdc,
	0x29, 0x49, 0x15, 0x5a, 0x43, 0x54, 0x4e, 0xf1, 0x1f, 0x43, 0xdf, 0x3d, 0x6b, 0x2f, 0xb5, 0xcf,
	0x9f, 0x5f, 0xcd, 0xf1, 0xff, 0x00, 0xd7, 0xe7, 0x24, 0xa7, 0x2a, 0x8f, 0x55, 0x46, 0x84, 0x3a,
	0xe5, 0xb9, 0x39, 0x5f, 0xe7, 0xbd, 0xe7, 0xf3, 0xcd, 0x7b, 0x2f, 0xed, 0x6b, 0x78, 0xce, 0x32,
	0x7a, 0xdd, 0x7a, 0xf4, 0x1e, 0xc0, 0x58, 0xcc, 0x49, 0x42, 0x8d, 0x80, 0x54, 0x45, 0x6b, 0x88,
	0x28, 0xaa, 0x48, 0x98, 0xfa, 0x3e, 0x6c, 0x2a, 0xf6, 0x27, 0x8a, 0x2a, 0xe2, 0x45, 0xf8, 0x5c,
	0x0b, 0x2a, 0x5c, 0x16, 0xd4, 0xc1, 0x47, 0xa7, 0xef, 0xf0, 0xfc, 0xf4, 0x1d, 0x5d, 0x2d, 0x7d,
	0xc7, 0xe7, 0xa7, 0xaf, 0x16, 0xba, 0x25, 0xb2, 0x47, 0x9f, 0x79, 0xcb, 0x08, 0x9d, 0x01, 0xc2,
	0x54, 0xe7, 0xb3, 0x35, 0x62, 0xb2, 0x6e, 0x9b, 0x7c, 0x36, 0x10, 0xa6, 0x6a, 0x35, 0x01, 0x13,
	0x75, 0x07, 0xb7, 0x6a, 0x27, 0x60, 0x9a, 0xfe, 0xe8, 0x41, 0xfb, 0x38, 0x7c, 0xfa, 0x69, 0xd4,
	0xbc, 0x0b, 0x03, 0xc7, 0x06, 0xbd, 0x4b, 0x43, 0x4d, 0x70, 0x50, 0x98, 0xea, 0x44, 0xcd, 0x58,
	0x52, 0x4b, 0xd4, 0x8c, 0x25, 0x46, 0xdf, 0x35, 0x8c, 0x7b, 0x37, 0xb9, 0xda, 0xcd, 0x58, 0x82,
	0x1b, 0x2f, 0x59, 0xe0, 0xd5, 0x59, 0x70, 0x00, 0x20, 0x24, 0x5b, 0xea, 0x6d, 0x32, 0x61, 0x93,
	0xb4, 0x6f, 0x91, 0x50, 0xe8, 0xf0, 0x4b, 0x3e, 0x37, 0x09, 0xea, 0x45, 0xf8, 0xec, 0x1f, 0xc2,
	0x50, 0x72, 0x9e, 0xc7, 0x85, 0xa2, 0xb2, 0xa2, 0x0d, 0x68, 0xec, 0x7b, 0x45, 0x65, 0x98, 0xea,
	0xda, 0xab, 0x68, 0x52, 0x48, 0x96, 0xaf, 0x6c, 0x79, 0x32, 0x45, 0x68, 0xe4, 0x50, 0x53, 0xa3,
	0xf6, 0xa1, 0xa7, 0xe8, 0x1f, 0x0b, 0xaa, 0xb3, 0x08, 0xf0, 0x03, 0xe5, 0xb8, 0xc6, 0xb1, 0xc1,
	0x65, 0x1c, 0x1b, 0x5e, 0x89, 0x63, 0xef, 0x27, 0xd2, 0x1e, 0xf4, 0x96, 0x3f, 0x64, 0x34, 0xd7,
	0xe7, 0x32, 0xfc, 0xe9, 0xe2, 0x38, 0x4c, 0xfd, 0x3b, 0xd0, 0xa6, 0x4c, 0xd8, 0xa2, 0x34, 0xac,
	0x97, 0xb8, 0x48, 0x1b, 0xce, 0xe7, 0xe0, 0xf6, 0x05, 0x1c, 0xbc, 0x03, 0x90, 0xf0, 0x2c, 0x97,
	0x7c, 0x3e, 0xa7, 0x12, 0x49, 0xd4, 0x8f, 0x6a, 0x88, 0x0e, 0x8b, 0xd9, 0x07, 0x92, 0xcc, 0x37,
	0x7d, 0x09, 0x22, 0xd8, 0xc3, 0x1d, 0xe0, 0xeb, 0x8a, 0xcf, 0x91, 0x1d, 0xd7, 0x4c, 0xd4, 0x2c,
	0x62, 0x48, 0x5c, 0x2f, 0x4a, 0xd7, 0x9b, 0x45, 0x69, 0xf2, 0xdf, 0x16, 0x74, 0xbf, 0xa3, 0x2b,
	0xec, 0x2a, 0x1b, 0x2a, 0xd8, 0x3a, 0xab, 0x82, 0x0f, 0x61, 0x4c, 0xb3, 0x44, 0xae, 0x44, 0x1e,
	0x2f, 0x68, 0x7e, 0xca, 0x1d, 0x1f, 0x47, 0x16, 0x7d, 0x8e, 0xa0, 0x2e, 0x07, 0x35, 0xce, 0xea,
	0xf6, 0xb2, 0xad, 0x57, 0xaa, 0x48, 0xab, 0xf4, 0xbe, 0xdf, 0xd2, 0x95, 0x6e, 0xd9, 0xf5, 0xbe,
	0x0c, 0x41, 0xfb, 0x16, 0x09, 0x71, 0x05, 0x67, 0x46, 0x06, 0xdb, 0x82, 0x62, 0x31, 0x64, 0xf1,
	0x2e, 0x74, 0x45, 0x31, 0xc5, 0x5e, 0xda, 0x56, 0x14, 0x51, 0x4c, 0x75, 0x2f, 0xed, 0x62, 0xdb,
	0xbd, 0x28, 0xb6, 0x93, 0xbf, 0xb6, 0xc1, 0x7b, 0xfd, 0xc3, 0x31, 0xcd, 0xfd, 0x5f, 0x82, 0x4f,
	0x96, 0x84, 0xcd, 0xc9, 0x54, 0x3b, 0x50, 0xc4, 0xf5, 0x76, 0x74, 0xbb, 0xb4, 0x84, 0xc2, 0xf4,
	0xab, 0x9f, 0xf9, 0x36, 0xd4, 0x74, 0xdb, 0xe6, 0x59, 0xb7, 0x9d, 0x9f, 0xba, 0x5f, 0x40, 0x47,
	0xf2, 0x22, 0xa7, 0xd2, 0x96, 0x85, 0xad, 0xf2, 0xcc, 0x11, 0xc2, 0x91, 0x35, 0xbf, 0xdf, 0x35,
	0xfe, 0x04, 0x46, 0x4b, 0x91, 0xc4, 0x66, 0x7e, 0x95, 0xd3, 0x83, 0xa5, 0x48, 0xcc, 0x5a, 0x46,
	0x5a, 0xca, 0xd4, 0xe8, 0xaf, 0xa7, 0x46, 0xc9, 0xd6, 0x5a, 0x5f, 0x69, 0xd8, 0x8a, 0x31, 0x5b,
	0x27, 0xf3, 0xa0, 0x41, 0xe6, 0xc9, 0x3f, 0x3d, 0xe8, 0x98, 0xaf, 0x7c, 0xee, 0x72, 0x7e, 0x1b,
	0x20, 0x5d, 0x65, 0x3a, 0xe2, 0x34, 0x73, 0xc2, 0xd9, 0x4b, 0x57, 0x59, 0x28, 0x9e, 0x65, 0xa9,
	0xd6, 0x35, 0x6b, 0x55, 0x39, 0x91, 0xb9, 0xa5, 0x27, 0xa0, 0xfd, 0xa5, 0x46, 0x9c, 0x04, 0x78,
	0x17, 0x49, 0xc0, 0x01, 0x80, 0x6e, 0xae, 0x69, 0xfe, 0x8e, 0xcb, 0xb7, 0x4e, 0x4c, 0x99, 0x38,
	0x36, 0x00, 0x9a, 0x55, 0x4c, 0x84, 0x98, 0x33, 0x9a, 0x5a, 0x49, 0xed, 0x33, 0xf5, 0xc4, 0x00,
	0xda, 0xbc, 0x20, 0x19, 0x99, 0xe9, 0x08, 0xb8, 0x86, 0xbe, 0x6f, 0x11, 0x23, 0xc5, 0x78, 0x07,
	0xb1, 0x95, 0x58, 0x3f, 0x37, 0xd4, 0x1b, 0x9a, 0xea, 0x7d, 0x0b, 0xfa, 0x55, 0x48, 0x6d, 0x4b,
	0x2f, 0x5d, 0x3c, 0xb5, 0x48, 0x18, 0x23, 0x46, 0x6d, 0xe8, 0x54, 0x5c, 0x43, 0xae, 0xd2, 0xd9,
	0x09, 0x18, 0xb7, 0x91, 0xa9, 0x74, 0x06, 0x42, 0x15, 0xfa, 0x39, 0xec, 0xac, 0xcb, 0x7c, 0xa5,
	0x9a, 0x5b, 0x6b, 0x4a, 0x1f, 0xa6, 0x35, 0x3d, 0xdf, 0xba, 0x4c, 0xcf, 0xb7, 0x3f, 0x4a, 0xcf,
	0x7f, 0x9a, 0xbe, 0xde, 0xff, 0x19, 0x74, 0x90, 0x95, 0x2a, 0xb8, 0x86, 0x0b, 0x8e, 0xcb, 0x05,
	0x51, 0x36, 0x22, 0x6b, 0x9d, 0xfc, 0xa5, 0x0f, 0x3d, 0xd7, 0xb5, 0x7d, 0xc8, 0x55, 0xf4, 0x1e,
	0x0c, 0x13, 0x51, 0xc4, 0x39, 0x17, 0x7c, 0xce, 0x67, 0x2b, 0xc7, 0xcc, 0x44, 0x14, 0xaf, 0x2c,
	0xd4, 0x24, 0x7e, 0xfb, 0x53, 0x88, 0xbf, 0x79, 0x59, 0x1f, 0xeb, 0xad, 0xf5, 0xb1, 0x96, 0xd0,
	0xbd, 0x8b, 0x08, 0xfd, 0x05, 0x6c, 0xcd, 0x24, 0x11, 0xa7, 0x2c, 0x51, 0xb1, 0x20, 0x4a, 0xbd,
	0x4b, 0x2d, 0xc9, 0xc6, 0x0e, 0x7e, 0x81, 0xa8, 0xf6, 0x73, 0x35, 0x51, 0xef, 0x36, 0xe1, 0x73,
	0xcb, 0xb8, 0xed, 0x72, 0xaa, 0xc5, 0xfd, 0x07, 0xe0, 0xb1, 0x05, 0x99, 0xb9, 0xea, 0x5d, 0xb9,
	0x39, 0xd4, 0x68, 0x64, 0x8c, 0x5a, 0x6f, 0xf0, 0x41, 0x93, 0x6a, 0x64, 0xf4, 0x06, 0xc7, 0xa6,
	0xbf, 0x28, 0x25, 0x33, 0x99, 0x13, 0x65, 0x7a, 0x3d, 0x2f, 0x1a, 0x39, 0xf4, 0xa9, 0x06, 0x9b,
	0x4d, 0xd4, 0xd6, 0x99, 0x26, 0xea, 0x3e, 0x94, 0x6f, 0xd4, 0xdb, 0xbd, 0x52, 0x8f, 0xdd, 0xdd,
	0xac, 0x9c, 0x54, 0xb6, 0x7c, 0xb5, 0x49, 0x98, 0x0a, 0x77, 0x61, 0x50, 0x15, 0x36, 0xcd, 0x30,
	0xad, 0xe1, 0x50, 0x56, 0x36, 0xfc, 0x1d, 0xb1, 0xa0, 0x0b, 0x2e, 0x57, 0x71, 0x52, 0x48, 0x49,
	0xb3, 0x1c, 0xab, 0xb6, 0x17, 0x8d, 0x0c, 0xfa, 0xd4, 0x80, 0x8d, 0x84, 0xbe, 0xde, 0x4c, 0xe8,
	0x2a, 0x8b, 0x6e, 0x5e, 0x96, 0x45, 0xbb, 0x1f, 0xdd, 0x79, 0x07, 0xe7, 0x77, 0xde, 0x7b, 0x57,
	0x4b, 0xb0, 0xfd, 0x0b, 0x12, 0xec, 0x3e, 0x8c, 0x96, 0x89, 0x28, 0x54, 0xe9, 0x83, 0x5b, 0xf8,
	0xb9, 0x21, 0x82, 0x35, 0x17, 0x94, 0xed, 0xb9, 0x0a, 0x6e, 0xa3, 0x27, 0xfb, 0xae, 0x3f, 0x57,
	0xfe, 0x97, 0xd0, 0x35, 0x03, 0x15, 0x1c, 0xe0, 0xae, 0xaa, 0xb2, 0x67, 0xee, 0x84, 0x91, 0xb3,
	0xfb, 0xbf, 0x29, 0xf3, 0xf9, 0x0e, 0xce, 0xbc, 0x7b, 0xe6, 0xce, 0x55, 0x3e, 0xac, 0x25, 0xf8,
	0xfe, 0xbf, 0x5a, 0x30, 0x5a, 0xb3, 0xd4, 0xda, 0xed, 0x56, 0xbd, 0xdd, 0x5e, 0x0f, 0xd7, 0xc6,
	0x45, 0xdd, 0x73, 0xbb, 0xd6, 0x3d, 0xd7, 0xcb, 0xe8, 0xe6, 0x65, 0x65, 0xd4, 0xbb, 0xbc, 0x8c,
	0x76, 0x9a, 0x65, 0xf4, 0x1f, 0x5d, 0xf0, 0x30, 0x81, 0xf4, 0xcd, 0x8e, 0x08, 0x11, 0xbb, 0x3f,
	0x57, 0xe5, 0xa6, 0x87, 0x44, 0x88, 0x6f, 0x0c, 0x18, 0xa6, 0xfe, 0x04, 0x86, 0x44, 0x26, 0xa7,
	0x2c, 0xa7, 0x49, 0x5e, 0xc8, 0xf2, 0xbf, 0x44, 0x1d, 0xd3, 0x9f, 0xac, 0xad, 0x62, 0x0a, 0x66,
	0x7f, 0x5a, 0x2e, 0xd1, 0x50, 0xad, 0xcd, 0x2b, 0xa9, 0xd6, 0x43, 0x18, 0xa7, 0xf4, 0x84, 0x14,
	0xf3, 0xdc, 0x49, 0x8b, 0x39, 0xf1, 0xc8, 0xa2, 0x56, 0x59, 0xee, 0xc1, 0xd0, 0x4d, 0xd3, 0x17,
	0x8e, 0xea, 0x1f, 0x19, 0x62, 0xfa, 0xc2, 0xd1, 0xd4, 0xbf, 0xee, 0x59, 0xfd, 0x3b, 0x00, 0x38,
	0x89, 0x25, 0x55, 0x34, 0x17, 0xef, 0x4c, 0x73, 0xe3, 0x45, 0xfd, 0x93, 0xc8, 0x02, 0x7e, 0x00,
	0xdd, 0x13, 0x4a, 0xd0, 0x0b, 0xa6, 0xba, 0xba, 0xa1, 0xbe, 0xa2, 0xd8, 0x47, 0xe5, 0xae, 0x28,
	0x6e, 0xac, 0x7b, 0xf8, 0xd3, 0x95, 0xd0, 0x8c, 0x52, 0x5c, 0x5a, 0xb1, 0xab, 0x21, 0x6b, 0x02,
	0x36, 0x5c, 0x17, 0x30, 0xdd, 0x09, 0xa0, 0x09, 0x23, 0x3d, 0xb2, 0x8d, 0x82, 0x46, 0x30, 0xd2,
	0xcd, 0x96, 0x70, 0x7c, 0xb6, 0x25, 0xbc, 0x05, 0x7d, 0xae, 0xe2, 0x13, 0xb2, 0x60, 0xf3, 0x95,
	0xbb, 0xc4, 0x72, 0xf5, 0x3b, 0x1c, 0x57, 0xfd, 0xe2, 0x76, 0xbd, 0x5f, 0xdc, 0x87, 0x9e, 0x98,
	0x93, 0xfc, 0x84, 0xcb, 0x85, 0xd5, 0xb0, 0x72, 0xac, 0x83, 0x21, 0x24, 0x4f, 0xa8, 0x52, 0x5c,
	0x56, 0x77, 0x8e, 0x7e, 0x34, 0x2a, 0x51, 0x94, 0x39, 0xbd, 0x84, 0xe4, 0x4b, 0x96, 0x52, 0x69,
	0x6f, 0x1d, 0xe5, 0xd8, 0xff, 0x12, 0xb6, 0x25, 0x4d, 0xf8, 0x62, 0x41, 0xb3, 0x94, 0xa6, 0x66,
	0x11, 0x23, 0x60, 0x5b, 0x35, 0x1c, 0x97, 0xd9, 0x85, 0x2e, 0xde, 0x20, 0x59, 0x1a, 0xdc, 0x30,
	0x3a, 0xa6, 0x87, 0xb5, 0xbf, 0x0d, 0x37, 0xcf, 0xfd, 0xdb, 0xb0, 0x7b, 0x99, 0xe6, 0x05, 0x1f,
	0xad, 0x79, 0x7b, 0xeb, 0x9a, 0x77, 0x25, 0x45, 0xdb, 0x85, 0x6e, 0xc1, 0xcc, 0x59, 0x6f, 0x99,
	0xdd, 0x15, 0x0c, 0x8f, 0x78, 0x07, 0x60, 0xc9, 0x14, 0x9b, 0xb2, 0x39, 0xcb, 0x57, 0xc1, 0x6d,
	0xfb, 0x1b, 0xa1, 0x44, 0x26, 0x3f, 0x7a, 0xe0, 0x3d, 0xe7, 0xd9, 0x8c, 0x7f, 0x48, 0x03, 0xf1,
	0x08, 0xb6, 0x49, 0x91, 0xf3, 0x78, 0x4a, 0x92, 0xb7, 0x85, 0xa8, 0xae, 0x21, 0x5e, 0x34, 0xd6,
	0xf8, 0x37, 0x08, 0xe3, 0xb9, 0xbe, 0x86, 0x9b, 0x38, 0x73, 0xc1, 0x32, 0x2e, 0xe3, 0x25, 0x95,
	0x71, 0x21, 0x66, 0x92, 0xa4, 0x4e, 0x83, 0xae, 0x69, 0xeb, 0x73, 0x6d, 0x7c, 0x4d, 0xe5, 0xf7,
	0xc6, 0xf4, 0x69, 0x69, 0xdc, 0x48, 0x3e, 0xef, 0x6c, 0xf2, 0xfd, 0xb4, 0x3f, 0xb3, 0xf6, 0xa0,
	0xb7, 0xd0, 0x7e, 0xd3, 0xe4, 0xb1, 0x3f, 0xc4, 0x71, 0x6c, 0xb2, 0xca, 0x98, 0x30, 0xab, 0x5c,
	0x03, 0xad, 0x11, 0xa7, 0x9f, 0xc6, 0x8c, 0xe1, 0x32, 0x89, 0x6e, 0xcc, 0x18, 0xb1, 0xfb, 0x30,
	0x32, 0xe6, 0x25, 0x95, 0x4a, 0x1f, 0xc5, 0x74, 0x3a, 0x43, 0x04, 0x5f, 0x1b, 0xec, 0xf3, 0xfc,
	0x96, 0xb8, 0x07, 0x43, 0x95, 0x73, 0xa9, 0xf5, 0x00, 0xd9, 0x6f, 0x3a, 0xed, 0x81, 0xc5, 0x5e,
	0xea, 0x24, 0x70, 0x85, 0x78, 0x7c, 0xb5, 0x42, 0xbc, 0x75, 0x01, 0x6d, 0x1f, 0x80, 0x87, 0x85,
	0xc3, 0xf6, 0xdb, 0xcd, 0x46, 0xd7, 0x18, 0x27, 0x7f, 0x6f, 0x41, 0x1f, 0x39, 0x7a, 0xac, 0xf3,
	0x62, 0x0c, 0x1b, 0x4c, 0x58, 0x76, 0x6e, 0x30, 0xb1, 0x16, 0x88, 0x8d, 0xf5, 0x40, 0x4c, 0x9c,
	0x2b, 0x33, 0x9e, 0xd2, 0xaa, 0x72, 0x0c, 0x16, 0x6e, 0xb1, 0x10, 0x35, 0x57, 0x48, 0xb6, 0x20,
	0x72, 0x85, 0x84, 0xf3, 0x22, 0x37, 0xac, 0xf9, 0xd8, 0x5b, 0xf3, 0x71, 0xbd, 0x72, 0x76, 0xd6,
	0x2a, 0xe7, 0xb4, 0x83, 0x1e, 0xfe, 0xfa, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x36, 0x05,
	0xb8, 0x30, 0x1d, 0x00, 0x00,
}
