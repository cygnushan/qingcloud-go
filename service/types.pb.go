// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Tag struct {
	Color             string                      `protobuf:"bytes,1,opt,name=color" json:"color,omitempty"`
	CreateTime        *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description       string                      `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Owner             string                      `protobuf:"bytes,4,opt,name=owner" json:"owner,omitempty"`
	ResourceCount     int32                       `protobuf:"varint,5,opt,name=resource_count,json=resourceCount" json:"resource_count,omitempty"`
	ResourceTagPairs  []*Tag_ResourceTagPair      `protobuf:"bytes,6,rep,name=resource_tag_pairs,json=resourceTagPairs" json:"resource_tag_pairs,omitempty"`
	ResourceTypeCount []*Tag_ResourceTypeCount    `protobuf:"bytes,7,rep,name=resource_type_count,json=resourceTypeCount" json:"resource_type_count,omitempty"`
	TagId             string                      `protobuf:"bytes,8,opt,name=tag_id,json=tagId" json:"tag_id,omitempty"`
	TagKey            string                      `protobuf:"bytes,9,opt,name=tag_key,json=tagKey" json:"tag_key,omitempty"`
	TagName           string                      `protobuf:"bytes,10,opt,name=tag_name,json=tagName" json:"tag_name,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{0} }

func (m *Tag) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *Tag) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Tag) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Tag) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Tag) GetResourceCount() int32 {
	if m != nil {
		return m.ResourceCount
	}
	return 0
}

func (m *Tag) GetResourceTagPairs() []*Tag_ResourceTagPair {
	if m != nil {
		return m.ResourceTagPairs
	}
	return nil
}

func (m *Tag) GetResourceTypeCount() []*Tag_ResourceTypeCount {
	if m != nil {
		return m.ResourceTypeCount
	}
	return nil
}

func (m *Tag) GetTagId() string {
	if m != nil {
		return m.TagId
	}
	return ""
}

func (m *Tag) GetTagKey() string {
	if m != nil {
		return m.TagKey
	}
	return ""
}

func (m *Tag) GetTagName() string {
	if m != nil {
		return m.TagName
	}
	return ""
}

type Tag_ResourceTagPair struct {
	ResourceId   string                      `protobuf:"bytes,1,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	ResourceType string                      `protobuf:"bytes,2,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
	Status       string                      `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	StatusTime   *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	TagId        string                      `protobuf:"bytes,5,opt,name=tag_id,json=tagId" json:"tag_id,omitempty"`
}

func (m *Tag_ResourceTagPair) Reset()                    { *m = Tag_ResourceTagPair{} }
func (m *Tag_ResourceTagPair) String() string            { return proto.CompactTextString(m) }
func (*Tag_ResourceTagPair) ProtoMessage()               {}
func (*Tag_ResourceTagPair) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{0, 0} }

func (m *Tag_ResourceTagPair) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *Tag_ResourceTagPair) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *Tag_ResourceTagPair) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Tag_ResourceTagPair) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Tag_ResourceTagPair) GetTagId() string {
	if m != nil {
		return m.TagId
	}
	return ""
}

type Tag_ResourceTypeCount struct {
	Count        int32  `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	ResourceType string `protobuf:"bytes,2,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
}

func (m *Tag_ResourceTypeCount) Reset()                    { *m = Tag_ResourceTypeCount{} }
func (m *Tag_ResourceTypeCount) String() string            { return proto.CompactTextString(m) }
func (*Tag_ResourceTypeCount) ProtoMessage()               {}
func (*Tag_ResourceTypeCount) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{0, 1} }

func (m *Tag_ResourceTypeCount) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Tag_ResourceTypeCount) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

type EIP struct {
	AlarmStatus      string                      `protobuf:"bytes,1,opt,name=alarm_status,json=alarmStatus" json:"alarm_status,omitempty"`
	AssociateMode    int32                       `protobuf:"varint,2,opt,name=associate_mode,json=associateMode" json:"associate_mode,omitempty"`
	Bandwidth        int32                       `protobuf:"varint,3,opt,name=bandwidth" json:"bandwidth,omitempty"`
	BillingMode      string                      `protobuf:"bytes,4,opt,name=billing_mode,json=billingMode" json:"billing_mode,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description      string                      `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	EipAddr          string                      `protobuf:"bytes,7,opt,name=eip_addr,json=eipAddr" json:"eip_addr,omitempty"`
	EipGroup         string                      `protobuf:"bytes,8,opt,name=eip_group,json=eipGroup" json:"eip_group,omitempty"`
	EipId            string                      `protobuf:"bytes,9,opt,name=eip_id,json=eipId" json:"eip_id,omitempty"`
	EipName          string                      `protobuf:"bytes,10,opt,name=eip_name,json=eipName" json:"eip_name,omitempty"`
	IcpCodes         string                      `protobuf:"bytes,11,opt,name=icp_codes,json=icpCodes" json:"icp_codes,omitempty"`
	NeedIcp          int32                       `protobuf:"varint,12,opt,name=need_icp,json=needIcp" json:"need_icp,omitempty"`
	Resource         *Resource                   `protobuf:"bytes,13,opt,name=resource" json:"resource,omitempty"`
	Status           string                      `protobuf:"bytes,14,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,15,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SubCode          int32                       `protobuf:"varint,16,opt,name=sub_code,json=subCode" json:"sub_code,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,17,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,18,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
}

func (m *EIP) Reset()                    { *m = EIP{} }
func (m *EIP) String() string            { return proto.CompactTextString(m) }
func (*EIP) ProtoMessage()               {}
func (*EIP) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{1} }

func (m *EIP) GetAlarmStatus() string {
	if m != nil {
		return m.AlarmStatus
	}
	return ""
}

func (m *EIP) GetAssociateMode() int32 {
	if m != nil {
		return m.AssociateMode
	}
	return 0
}

func (m *EIP) GetBandwidth() int32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *EIP) GetBillingMode() string {
	if m != nil {
		return m.BillingMode
	}
	return ""
}

func (m *EIP) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *EIP) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *EIP) GetEipAddr() string {
	if m != nil {
		return m.EipAddr
	}
	return ""
}

func (m *EIP) GetEipGroup() string {
	if m != nil {
		return m.EipGroup
	}
	return ""
}

func (m *EIP) GetEipId() string {
	if m != nil {
		return m.EipId
	}
	return ""
}

func (m *EIP) GetEipName() string {
	if m != nil {
		return m.EipName
	}
	return ""
}

func (m *EIP) GetIcpCodes() string {
	if m != nil {
		return m.IcpCodes
	}
	return ""
}

func (m *EIP) GetNeedIcp() int32 {
	if m != nil {
		return m.NeedIcp
	}
	return 0
}

func (m *EIP) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *EIP) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *EIP) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *EIP) GetSubCode() int32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *EIP) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *EIP) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

type Resource struct {
	ResourceId   string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	ResourceName string `protobuf:"bytes,2,opt,name=resource_name,json=resourceName" json:"resource_name,omitempty"`
	ResourceType string `protobuf:"bytes,3,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
}

func (m *Resource) Reset()                    { *m = Resource{} }
func (m *Resource) String() string            { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()               {}
func (*Resource) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{2} }

func (m *Resource) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *Resource) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *Resource) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

type Job struct {
	CreateTime  *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	JobAction   string                      `protobuf:"bytes,2,opt,name=job_action,json=jobAction" json:"job_action,omitempty"`
	JobId       string                      `protobuf:"bytes,3,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	Owner       string                      `protobuf:"bytes,4,opt,name=owner" json:"owner,omitempty"`
	ResourceIds string                      `protobuf:"bytes,5,opt,name=resource_ids,json=resourceIds" json:"resource_ids,omitempty"`
	Status      string                      `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	StatusTime  *google_protobuf1.Timestamp `protobuf:"bytes,7,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{3} }

func (m *Job) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Job) GetJobAction() string {
	if m != nil {
		return m.JobAction
	}
	return ""
}

func (m *Job) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *Job) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Job) GetResourceIds() string {
	if m != nil {
		return m.ResourceIds
	}
	return ""
}

func (m *Job) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Job) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type Volume struct {
	CreateTime         *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description        string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Device             string                      `protobuf:"bytes,3,opt,name=device" json:"device,omitempty"`
	Instance           *Instance                   `protobuf:"bytes,4,opt,name=instance" json:"instance,omitempty"`
	Instances          []*Instance                 `protobuf:"bytes,5,rep,name=instances" json:"instances,omitempty"`
	LatestSnapshotTime *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=latest_snapshot_time,json=latestSnapshotTime" json:"latest_snapshot_time,omitempty"`
	Owner              string                      `protobuf:"bytes,7,opt,name=owner" json:"owner,omitempty"`
	PlaceGroupId       string                      `protobuf:"bytes,8,opt,name=place_group_id,json=placeGroupId" json:"place_group_id,omitempty"`
	Size               int32                       `protobuf:"varint,9,opt,name=size" json:"size,omitempty"`
	Status             string                      `protobuf:"bytes,10,opt,name=status" json:"status,omitempty"`
	StatusTime         *google_protobuf1.Timestamp `protobuf:"bytes,11,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SubCode            int32                       `protobuf:"varint,12,opt,name=sub_code,json=subCode" json:"sub_code,omitempty"`
	Tags               []*Tag                      `protobuf:"bytes,13,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus   string                      `protobuf:"bytes,14,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	VolumeId           string                      `protobuf:"bytes,15,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	VolumeName         string                      `protobuf:"bytes,16,opt,name=volume_name,json=volumeName" json:"volume_name,omitempty"`
	VolumeType         int32                       `protobuf:"varint,17,opt,name=volume_type,json=volumeType" json:"volume_type,omitempty"`
}

func (m *Volume) Reset()                    { *m = Volume{} }
func (m *Volume) String() string            { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()               {}
func (*Volume) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{4} }

func (m *Volume) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Volume) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Volume) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *Volume) GetInstance() *Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *Volume) GetInstances() []*Instance {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *Volume) GetLatestSnapshotTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.LatestSnapshotTime
	}
	return nil
}

func (m *Volume) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Volume) GetPlaceGroupId() string {
	if m != nil {
		return m.PlaceGroupId
	}
	return ""
}

func (m *Volume) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Volume) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Volume) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Volume) GetSubCode() int32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *Volume) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Volume) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Volume) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *Volume) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

func (m *Volume) GetVolumeType() int32 {
	if m != nil {
		return m.VolumeType
	}
	return 0
}

type NIC struct {
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	InstanceId       string                      `protobuf:"bytes,2,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	NicId            string                      `protobuf:"bytes,3,opt,name=nic_id,json=nicId" json:"nic_id,omitempty"`
	NicName          string                      `protobuf:"bytes,4,opt,name=nic_name,json=nicName" json:"nic_name,omitempty"`
	Owner            string                      `protobuf:"bytes,5,opt,name=owner" json:"owner,omitempty"`
	PrivateIp        string                      `protobuf:"bytes,6,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	Role             int32                       `protobuf:"varint,7,opt,name=role" json:"role,omitempty"`
	RootUserId       string                      `protobuf:"bytes,8,opt,name=root_user_id,json=rootUserId" json:"root_user_id,omitempty"`
	SecurityGroup    string                      `protobuf:"bytes,9,opt,name=security_group,json=securityGroup" json:"security_group,omitempty"`
	Sequence         int32                       `protobuf:"varint,10,opt,name=sequence" json:"sequence,omitempty"`
	Status           string                      `protobuf:"bytes,11,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,12,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,13,rep,name=tags" json:"tags,omitempty"`
	VxnetId          string                      `protobuf:"bytes,14,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
	Eip              *EIP                        `protobuf:"bytes,15,opt,name=eip" json:"eip,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,16,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	Controller       string                      `protobuf:"bytes,17,opt,name=controller" json:"controller,omitempty"`
	VxnetType        int32                       `protobuf:"varint,18,opt,name=vxnet_type,json=vxnetType" json:"vxnet_type,omitempty"`
	ConsoleId        string                      `protobuf:"bytes,19,opt,name=console_id,json=consoleId" json:"console_id,omitempty"`
	ResourceId       string                      `protobuf:"bytes,20,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
}

func (m *NIC) Reset()                    { *m = NIC{} }
func (m *NIC) String() string            { return proto.CompactTextString(m) }
func (*NIC) ProtoMessage()               {}
func (*NIC) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{5} }

func (m *NIC) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *NIC) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *NIC) GetNicId() string {
	if m != nil {
		return m.NicId
	}
	return ""
}

func (m *NIC) GetNicName() string {
	if m != nil {
		return m.NicName
	}
	return ""
}

func (m *NIC) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *NIC) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *NIC) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *NIC) GetRootUserId() string {
	if m != nil {
		return m.RootUserId
	}
	return ""
}

func (m *NIC) GetSecurityGroup() string {
	if m != nil {
		return m.SecurityGroup
	}
	return ""
}

func (m *NIC) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *NIC) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *NIC) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *NIC) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *NIC) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

func (m *NIC) GetEip() *EIP {
	if m != nil {
		return m.Eip
	}
	return nil
}

func (m *NIC) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *NIC) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *NIC) GetVxnetType() int32 {
	if m != nil {
		return m.VxnetType
	}
	return 0
}

func (m *NIC) GetConsoleId() string {
	if m != nil {
		return m.ConsoleId
	}
	return ""
}

func (m *NIC) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

type KeyPair struct {
	Description   string   `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	EncryptMethod string   `protobuf:"bytes,2,opt,name=encrypt_method,json=encryptMethod" json:"encrypt_method,omitempty"`
	InstanceIds   []string `protobuf:"bytes,3,rep,name=instance_ids,json=instanceIds" json:"instance_ids,omitempty"`
	KeypairId     string   `protobuf:"bytes,4,opt,name=keypair_id,json=keypairId" json:"keypair_id,omitempty"`
	KeypairName   string   `protobuf:"bytes,5,opt,name=keypair_name,json=keypairName" json:"keypair_name,omitempty"`
	PubKey        string   `protobuf:"bytes,6,opt,name=pub_key,json=pubKey" json:"pub_key,omitempty"`
	Tags          []*Tag   `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
}

func (m *KeyPair) Reset()                    { *m = KeyPair{} }
func (m *KeyPair) String() string            { return proto.CompactTextString(m) }
func (*KeyPair) ProtoMessage()               {}
func (*KeyPair) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{6} }

func (m *KeyPair) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *KeyPair) GetEncryptMethod() string {
	if m != nil {
		return m.EncryptMethod
	}
	return ""
}

func (m *KeyPair) GetInstanceIds() []string {
	if m != nil {
		return m.InstanceIds
	}
	return nil
}

func (m *KeyPair) GetKeypairId() string {
	if m != nil {
		return m.KeypairId
	}
	return ""
}

func (m *KeyPair) GetKeypairName() string {
	if m != nil {
		return m.KeypairName
	}
	return ""
}

func (m *KeyPair) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *KeyPair) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type VxNet struct {
	AvailableIpCount int32                       `protobuf:"varint,1,opt,name=available_ip_count,json=availableIpCount" json:"available_ip_count,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description      string                      `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	InstanceIds      []string                    `protobuf:"bytes,4,rep,name=instance_ids,json=instanceIds" json:"instance_ids,omitempty"`
	Owner            string                      `protobuf:"bytes,5,opt,name=owner" json:"owner,omitempty"`
	Router           *Router                     `protobuf:"bytes,6,opt,name=router" json:"router,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
	VpcRouterId      string                      `protobuf:"bytes,8,opt,name=vpc_router_id,json=vpcRouterId" json:"vpc_router_id,omitempty"`
	VxnetId          string                      `protobuf:"bytes,9,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
	VxnetName        string                      `protobuf:"bytes,10,opt,name=vxnet_name,json=vxnetName" json:"vxnet_name,omitempty"`
	VxnetType        int32                       `protobuf:"varint,11,opt,name=vxnet_type,json=vxnetType" json:"vxnet_type,omitempty"`
}

func (m *VxNet) Reset()                    { *m = VxNet{} }
func (m *VxNet) String() string            { return proto.CompactTextString(m) }
func (*VxNet) ProtoMessage()               {}
func (*VxNet) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{7} }

func (m *VxNet) GetAvailableIpCount() int32 {
	if m != nil {
		return m.AvailableIpCount
	}
	return 0
}

func (m *VxNet) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *VxNet) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *VxNet) GetInstanceIds() []string {
	if m != nil {
		return m.InstanceIds
	}
	return nil
}

func (m *VxNet) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *VxNet) GetRouter() *Router {
	if m != nil {
		return m.Router
	}
	return nil
}

func (m *VxNet) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *VxNet) GetVpcRouterId() string {
	if m != nil {
		return m.VpcRouterId
	}
	return ""
}

func (m *VxNet) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

func (m *VxNet) GetVxnetName() string {
	if m != nil {
		return m.VxnetName
	}
	return ""
}

func (m *VxNet) GetVxnetType() int32 {
	if m != nil {
		return m.VxnetType
	}
	return 0
}

type Router struct {
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description      string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	DynIpEnd         string                      `protobuf:"bytes,3,opt,name=dyn_ip_end,json=dynIpEnd" json:"dyn_ip_end,omitempty"`
	DynIpStart       string                      `protobuf:"bytes,4,opt,name=dyn_ip_start,json=dynIpStart" json:"dyn_ip_start,omitempty"`
	Eip              *EIP                        `protobuf:"bytes,5,opt,name=eip" json:"eip,omitempty"`
	IpNetwork        string                      `protobuf:"bytes,6,opt,name=ip_network,json=ipNetwork" json:"ip_network,omitempty"`
	IsApplied        int32                       `protobuf:"varint,7,opt,name=is_applied,json=isApplied" json:"is_applied,omitempty"`
	ManagerIp        string                      `protobuf:"bytes,8,opt,name=manager_ip,json=managerIp" json:"manager_ip,omitempty"`
	Mode             int32                       `protobuf:"varint,9,opt,name=mode" json:"mode,omitempty"`
	PrivateIp        string                      `protobuf:"bytes,10,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	RouterId         string                      `protobuf:"bytes,11,opt,name=router_id,json=routerId" json:"router_id,omitempty"`
	RouterName       string                      `protobuf:"bytes,12,opt,name=router_name,json=routerName" json:"router_name,omitempty"`
	RouterType       int32                       `protobuf:"varint,13,opt,name=router_type,json=routerType" json:"router_type,omitempty"`
	SecurityGroupId  string                      `protobuf:"bytes,14,opt,name=security_group_id,json=securityGroupId" json:"security_group_id,omitempty"`
	Status           string                      `protobuf:"bytes,15,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,16,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,17,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,18,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	Vxnets           []*VxNet                    `protobuf:"bytes,19,rep,name=vxnets" json:"vxnets,omitempty"`
}

func (m *Router) Reset()                    { *m = Router{} }
func (m *Router) String() string            { return proto.CompactTextString(m) }
func (*Router) ProtoMessage()               {}
func (*Router) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{8} }

func (m *Router) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Router) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Router) GetDynIpEnd() string {
	if m != nil {
		return m.DynIpEnd
	}
	return ""
}

func (m *Router) GetDynIpStart() string {
	if m != nil {
		return m.DynIpStart
	}
	return ""
}

func (m *Router) GetEip() *EIP {
	if m != nil {
		return m.Eip
	}
	return nil
}

func (m *Router) GetIpNetwork() string {
	if m != nil {
		return m.IpNetwork
	}
	return ""
}

func (m *Router) GetIsApplied() int32 {
	if m != nil {
		return m.IsApplied
	}
	return 0
}

func (m *Router) GetManagerIp() string {
	if m != nil {
		return m.ManagerIp
	}
	return ""
}

func (m *Router) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *Router) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *Router) GetRouterId() string {
	if m != nil {
		return m.RouterId
	}
	return ""
}

func (m *Router) GetRouterName() string {
	if m != nil {
		return m.RouterName
	}
	return ""
}

func (m *Router) GetRouterType() int32 {
	if m != nil {
		return m.RouterType
	}
	return 0
}

func (m *Router) GetSecurityGroupId() string {
	if m != nil {
		return m.SecurityGroupId
	}
	return ""
}

func (m *Router) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Router) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Router) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Router) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Router) GetVxnets() []*VxNet {
	if m != nil {
		return m.Vxnets
	}
	return nil
}

type Instance struct {
	AlarmStatus string                      `protobuf:"bytes,1,opt,name=alarm_status,json=alarmStatus" json:"alarm_status,omitempty"`
	CpuTopology string                      `protobuf:"bytes,2,opt,name=cpu_topology,json=cpuTopology" json:"cpu_topology,omitempty"`
	CreateTime  *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description string                      `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Device      string                      `protobuf:"bytes,5,opt,name=device" json:"device,omitempty"`
	// DHCPOptions      *DHCPOption    `json:"dhcp_options" name:"dhcp_options"`
	// DNSAliases       []*DNSAlias    `json:"dns_aliases" name:"dns_aliases"`
	Eip *EIP `protobuf:"bytes,8,opt,name=eip" json:"eip,omitempty"`
	// Extra            *Extra         `json:"extra" name:"extra"`
	GraphicsPasswd   string   `protobuf:"bytes,10,opt,name=graphics_passwd,json=graphicsPasswd" json:"graphics_passwd,omitempty"`
	GraphicsProtocol string   `protobuf:"bytes,11,opt,name=graphics_protocol,json=graphicsProtocol" json:"graphics_protocol,omitempty"`
	Image            *Image   `protobuf:"bytes,12,opt,name=image" json:"image,omitempty"`
	ImageId          string   `protobuf:"bytes,13,opt,name=image_id,json=imageId" json:"image_id,omitempty"`
	InstanceClass    int32    `protobuf:"varint,14,opt,name=instance_class,json=instanceClass" json:"instance_class,omitempty"`
	InstanceId       string   `protobuf:"bytes,15,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	InstanceName     string   `protobuf:"bytes,16,opt,name=instance_name,json=instanceName" json:"instance_name,omitempty"`
	InstanceType     string   `protobuf:"bytes,17,opt,name=instance_type,json=instanceType" json:"instance_type,omitempty"`
	KeypairIds       []string `protobuf:"bytes,18,rep,name=keypair_ids,json=keypairIds" json:"keypair_ids,omitempty"`
	MemoryCurrent    int32    `protobuf:"varint,19,opt,name=memory_current,json=memoryCurrent" json:"memory_current,omitempty"`
	PrivateIp        string   `protobuf:"bytes,20,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	// SecurityGroup    *SecurityGroup `json:"security_group" name:"security_group"`
	Status           string                      `protobuf:"bytes,22,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,23,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SubCode          int32                       `protobuf:"varint,24,opt,name=sub_code,json=subCode" json:"sub_code,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,25,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,26,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	VcpusCurrent     int32                       `protobuf:"varint,27,opt,name=vcpus_current,json=vcpusCurrent" json:"vcpus_current,omitempty"`
	VolumeIds        []string                    `protobuf:"bytes,28,rep,name=volume_ids,json=volumeIds" json:"volume_ids,omitempty"`
	Volumes          []*Volume                   `protobuf:"bytes,29,rep,name=volumes" json:"volumes,omitempty"`
	Vxnets           []*Instance_InstanceVxNet   `protobuf:"bytes,30,rep,name=vxnets" json:"vxnets,omitempty"`
}

func (m *Instance) Reset()                    { *m = Instance{} }
func (m *Instance) String() string            { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()               {}
func (*Instance) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{9} }

func (m *Instance) GetAlarmStatus() string {
	if m != nil {
		return m.AlarmStatus
	}
	return ""
}

func (m *Instance) GetCpuTopology() string {
	if m != nil {
		return m.CpuTopology
	}
	return ""
}

func (m *Instance) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Instance) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Instance) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *Instance) GetEip() *EIP {
	if m != nil {
		return m.Eip
	}
	return nil
}

func (m *Instance) GetGraphicsPasswd() string {
	if m != nil {
		return m.GraphicsPasswd
	}
	return ""
}

func (m *Instance) GetGraphicsProtocol() string {
	if m != nil {
		return m.GraphicsProtocol
	}
	return ""
}

func (m *Instance) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *Instance) GetImageId() string {
	if m != nil {
		return m.ImageId
	}
	return ""
}

func (m *Instance) GetInstanceClass() int32 {
	if m != nil {
		return m.InstanceClass
	}
	return 0
}

func (m *Instance) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *Instance) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *Instance) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *Instance) GetKeypairIds() []string {
	if m != nil {
		return m.KeypairIds
	}
	return nil
}

func (m *Instance) GetMemoryCurrent() int32 {
	if m != nil {
		return m.MemoryCurrent
	}
	return 0
}

func (m *Instance) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *Instance) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Instance) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Instance) GetSubCode() int32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *Instance) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Instance) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Instance) GetVcpusCurrent() int32 {
	if m != nil {
		return m.VcpusCurrent
	}
	return 0
}

func (m *Instance) GetVolumeIds() []string {
	if m != nil {
		return m.VolumeIds
	}
	return nil
}

func (m *Instance) GetVolumes() []*Volume {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *Instance) GetVxnets() []*Instance_InstanceVxNet {
	if m != nil {
		return m.Vxnets
	}
	return nil
}

type Instance_InstanceVxNet struct {
	NicId     string `protobuf:"bytes,1,opt,name=nic_id,json=nicId" json:"nic_id,omitempty"`
	PrivateIp string `protobuf:"bytes,2,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	Role      int32  `protobuf:"varint,3,opt,name=role" json:"role,omitempty"`
	VxnetId   string `protobuf:"bytes,4,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
	VxnetName string `protobuf:"bytes,5,opt,name=vxnet_name,json=vxnetName" json:"vxnet_name,omitempty"`
	VxnetType int32  `protobuf:"varint,6,opt,name=vxnet_type,json=vxnetType" json:"vxnet_type,omitempty"`
}

func (m *Instance_InstanceVxNet) Reset()                    { *m = Instance_InstanceVxNet{} }
func (m *Instance_InstanceVxNet) String() string            { return proto.CompactTextString(m) }
func (*Instance_InstanceVxNet) ProtoMessage()               {}
func (*Instance_InstanceVxNet) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{9, 0} }

func (m *Instance_InstanceVxNet) GetNicId() string {
	if m != nil {
		return m.NicId
	}
	return ""
}

func (m *Instance_InstanceVxNet) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *Instance_InstanceVxNet) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *Instance_InstanceVxNet) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

func (m *Instance_InstanceVxNet) GetVxnetName() string {
	if m != nil {
		return m.VxnetName
	}
	return ""
}

func (m *Instance_InstanceVxNet) GetVxnetType() int32 {
	if m != nil {
		return m.VxnetType
	}
	return 0
}

type Image struct {
	AppBillingId     string                      `protobuf:"bytes,1,opt,name=app_billing_id,json=appBillingId" json:"app_billing_id,omitempty"`
	Architecture     string                      `protobuf:"bytes,2,opt,name=architecture" json:"architecture,omitempty"`
	BillingId        string                      `protobuf:"bytes,3,opt,name=billing_id,json=billingId" json:"billing_id,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	DefaultPasswd    string                      `protobuf:"bytes,5,opt,name=default_passwd,json=defaultPasswd" json:"default_passwd,omitempty"`
	DefaultUser      string                      `protobuf:"bytes,6,opt,name=default_user,json=defaultUser" json:"default_user,omitempty"`
	Description      string                      `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	FResetpwd        int32                       `protobuf:"varint,8,opt,name=f_resetpwd,json=fResetpwd" json:"f_resetpwd,omitempty"`
	Feature          int32                       `protobuf:"varint,9,opt,name=feature" json:"feature,omitempty"`
	Features         int32                       `protobuf:"varint,10,opt,name=features" json:"features,omitempty"`
	Hypervisor       string                      `protobuf:"bytes,11,opt,name=hypervisor" json:"hypervisor,omitempty"`
	ImageId          string                      `protobuf:"bytes,12,opt,name=image_id,json=imageId" json:"image_id,omitempty"`
	ImageName        string                      `protobuf:"bytes,13,opt,name=image_name,json=imageName" json:"image_name,omitempty"`
	InstanceIds      []string                    `protobuf:"bytes,14,rep,name=instance_ids,json=instanceIds" json:"instance_ids,omitempty"`
	OsFamily         string                      `protobuf:"bytes,15,opt,name=os_family,json=osFamily" json:"os_family,omitempty"`
	Owner            string                      `protobuf:"bytes,16,opt,name=owner" json:"owner,omitempty"`
	Platform         string                      `protobuf:"bytes,17,opt,name=platform" json:"platform,omitempty"`
	ProcessorType    string                      `protobuf:"bytes,18,opt,name=processor_type,json=processorType" json:"processor_type,omitempty"`
	Provider         string                      `protobuf:"bytes,19,opt,name=provider" json:"provider,omitempty"`
	RecommendedType  string                      `protobuf:"bytes,20,opt,name=recommended_type,json=recommendedType" json:"recommended_type,omitempty"`
	RootId           string                      `protobuf:"bytes,21,opt,name=root_id,json=rootId" json:"root_id,omitempty"`
	Size             int32                       `protobuf:"varint,22,opt,name=size" json:"size,omitempty"`
	Status           string                      `protobuf:"bytes,23,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,24,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SubCode          int32                       `protobuf:"varint,25,opt,name=sub_code,json=subCode" json:"sub_code,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,26,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	UiType           string                      `protobuf:"bytes,27,opt,name=ui_type,json=uiType" json:"ui_type,omitempty"`
	Visibility       string                      `protobuf:"bytes,28,opt,name=visibility" json:"visibility,omitempty"`
}

func (m *Image) Reset()                    { *m = Image{} }
func (m *Image) String() string            { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()               {}
func (*Image) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{10} }

func (m *Image) GetAppBillingId() string {
	if m != nil {
		return m.AppBillingId
	}
	return ""
}

func (m *Image) GetArchitecture() string {
	if m != nil {
		return m.Architecture
	}
	return ""
}

func (m *Image) GetBillingId() string {
	if m != nil {
		return m.BillingId
	}
	return ""
}

func (m *Image) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Image) GetDefaultPasswd() string {
	if m != nil {
		return m.DefaultPasswd
	}
	return ""
}

func (m *Image) GetDefaultUser() string {
	if m != nil {
		return m.DefaultUser
	}
	return ""
}

func (m *Image) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Image) GetFResetpwd() int32 {
	if m != nil {
		return m.FResetpwd
	}
	return 0
}

func (m *Image) GetFeature() int32 {
	if m != nil {
		return m.Feature
	}
	return 0
}

func (m *Image) GetFeatures() int32 {
	if m != nil {
		return m.Features
	}
	return 0
}

func (m *Image) GetHypervisor() string {
	if m != nil {
		return m.Hypervisor
	}
	return ""
}

func (m *Image) GetImageId() string {
	if m != nil {
		return m.ImageId
	}
	return ""
}

func (m *Image) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *Image) GetInstanceIds() []string {
	if m != nil {
		return m.InstanceIds
	}
	return nil
}

func (m *Image) GetOsFamily() string {
	if m != nil {
		return m.OsFamily
	}
	return ""
}

func (m *Image) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Image) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *Image) GetProcessorType() string {
	if m != nil {
		return m.ProcessorType
	}
	return ""
}

func (m *Image) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *Image) GetRecommendedType() string {
	if m != nil {
		return m.RecommendedType
	}
	return ""
}

func (m *Image) GetRootId() string {
	if m != nil {
		return m.RootId
	}
	return ""
}

func (m *Image) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Image) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Image) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Image) GetSubCode() int32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *Image) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Image) GetUiType() string {
	if m != nil {
		return m.UiType
	}
	return ""
}

func (m *Image) GetVisibility() string {
	if m != nil {
		return m.Visibility
	}
	return ""
}

type Mongo struct {
	AlarmStatus         string                      `protobuf:"bytes,1,opt,name=alarm_status,json=alarmStatus" json:"alarm_status,omitempty"`
	AutoBackupTime      int32                       `protobuf:"varint,2,opt,name=auto_backup_time,json=autoBackupTime" json:"auto_backup_time,omitempty"`
	AutoMinorVerUpgrade int32                       `protobuf:"varint,3,opt,name=auto_minor_ver_upgrade,json=autoMinorVerUpgrade" json:"auto_minor_ver_upgrade,omitempty"`
	CreateTime          *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description         string                      `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	LatestSnapshotTime  *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=latest_snapshot_time,json=latestSnapshotTime" json:"latest_snapshot_time,omitempty"`
	MongoId             string                      `protobuf:"bytes,7,opt,name=mongo_id,json=mongoId" json:"mongo_id,omitempty"`
	MongoName           string                      `protobuf:"bytes,8,opt,name=mongo_name,json=mongoName" json:"mongo_name,omitempty"`
	MongoType           int32                       `protobuf:"varint,9,opt,name=mongo_type,json=mongoType" json:"mongo_type,omitempty"`
	MongoVersion        string                      `protobuf:"bytes,10,opt,name=mongo_version,json=mongoVersion" json:"mongo_version,omitempty"`
	Status              string                      `protobuf:"bytes,11,opt,name=status" json:"status,omitempty"`
	StatusTime          *google_protobuf1.Timestamp `protobuf:"bytes,12,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	StorageSize         int32                       `protobuf:"varint,13,opt,name=storage_size,json=storageSize" json:"storage_size,omitempty"`
	Tags                []*Tag                      `protobuf:"bytes,14,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus    string                      `protobuf:"bytes,15,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	Vxnet               *VxNet                      `protobuf:"bytes,16,opt,name=vxnet" json:"vxnet,omitempty"`
}

func (m *Mongo) Reset()                    { *m = Mongo{} }
func (m *Mongo) String() string            { return proto.CompactTextString(m) }
func (*Mongo) ProtoMessage()               {}
func (*Mongo) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{11} }

func (m *Mongo) GetAlarmStatus() string {
	if m != nil {
		return m.AlarmStatus
	}
	return ""
}

func (m *Mongo) GetAutoBackupTime() int32 {
	if m != nil {
		return m.AutoBackupTime
	}
	return 0
}

func (m *Mongo) GetAutoMinorVerUpgrade() int32 {
	if m != nil {
		return m.AutoMinorVerUpgrade
	}
	return 0
}

func (m *Mongo) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Mongo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Mongo) GetLatestSnapshotTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.LatestSnapshotTime
	}
	return nil
}

func (m *Mongo) GetMongoId() string {
	if m != nil {
		return m.MongoId
	}
	return ""
}

func (m *Mongo) GetMongoName() string {
	if m != nil {
		return m.MongoName
	}
	return ""
}

func (m *Mongo) GetMongoType() int32 {
	if m != nil {
		return m.MongoType
	}
	return 0
}

func (m *Mongo) GetMongoVersion() string {
	if m != nil {
		return m.MongoVersion
	}
	return ""
}

func (m *Mongo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Mongo) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Mongo) GetStorageSize() int32 {
	if m != nil {
		return m.StorageSize
	}
	return 0
}

func (m *Mongo) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Mongo) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Mongo) GetVxnet() *VxNet {
	if m != nil {
		return m.Vxnet
	}
	return nil
}

type MongoNode struct {
	Ip          string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	MongoId     string `protobuf:"bytes,2,opt,name=mongo_id,json=mongoId" json:"mongo_id,omitempty"`
	MongoNodeId string `protobuf:"bytes,3,opt,name=mongo_node_id,json=mongoNodeId" json:"mongo_node_id,omitempty"`
	Primary     int32  `protobuf:"varint,4,opt,name=primary" json:"primary,omitempty"`
	Status      string `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	VxnetId     string `protobuf:"bytes,6,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
}

func (m *MongoNode) Reset()                    { *m = MongoNode{} }
func (m *MongoNode) String() string            { return proto.CompactTextString(m) }
func (*MongoNode) ProtoMessage()               {}
func (*MongoNode) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{12} }

func (m *MongoNode) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *MongoNode) GetMongoId() string {
	if m != nil {
		return m.MongoId
	}
	return ""
}

func (m *MongoNode) GetMongoNodeId() string {
	if m != nil {
		return m.MongoNodeId
	}
	return ""
}

func (m *MongoNode) GetPrimary() int32 {
	if m != nil {
		return m.Primary
	}
	return 0
}

func (m *MongoNode) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MongoNode) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

type LoadBalancer struct {
	Cluster          []*EIP                      `protobuf:"bytes,1,rep,name=cluster" json:"cluster,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description      string                      `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	IsApplied        int32                       `protobuf:"varint,4,opt,name=is_applied,json=isApplied" json:"is_applied,omitempty"`
	Listeners        []*LoadBalancerListener     `protobuf:"bytes,5,rep,name=listeners" json:"listeners,omitempty"`
	LoadbalancerId   string                      `protobuf:"bytes,6,opt,name=loadbalancer_id,json=loadbalancerId" json:"loadbalancer_id,omitempty"`
	LoadbalancerName string                      `protobuf:"bytes,7,opt,name=loadbalancer_name,json=loadbalancerName" json:"loadbalancer_name,omitempty"`
	LoadbalancerType int32                       `protobuf:"varint,8,opt,name=loadbalancer_type,json=loadbalancerType" json:"loadbalancer_type,omitempty"`
	PrivateIps       []string                    `protobuf:"bytes,9,rep,name=private_ips,json=privateIps" json:"private_ips,omitempty"`
	SecurityGroupId  string                      `protobuf:"bytes,10,opt,name=security_group_id,json=securityGroupId" json:"security_group_id,omitempty"`
	Status           string                      `protobuf:"bytes,11,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,12,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,13,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,14,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	VxnetId          string                      `protobuf:"bytes,15,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
}

func (m *LoadBalancer) Reset()                    { *m = LoadBalancer{} }
func (m *LoadBalancer) String() string            { return proto.CompactTextString(m) }
func (*LoadBalancer) ProtoMessage()               {}
func (*LoadBalancer) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{13} }

func (m *LoadBalancer) GetCluster() []*EIP {
	if m != nil {
		return m.Cluster
	}
	return nil
}

func (m *LoadBalancer) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *LoadBalancer) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *LoadBalancer) GetIsApplied() int32 {
	if m != nil {
		return m.IsApplied
	}
	return 0
}

func (m *LoadBalancer) GetListeners() []*LoadBalancerListener {
	if m != nil {
		return m.Listeners
	}
	return nil
}

func (m *LoadBalancer) GetLoadbalancerId() string {
	if m != nil {
		return m.LoadbalancerId
	}
	return ""
}

func (m *LoadBalancer) GetLoadbalancerName() string {
	if m != nil {
		return m.LoadbalancerName
	}
	return ""
}

func (m *LoadBalancer) GetLoadbalancerType() int32 {
	if m != nil {
		return m.LoadbalancerType
	}
	return 0
}

func (m *LoadBalancer) GetPrivateIps() []string {
	if m != nil {
		return m.PrivateIps
	}
	return nil
}

func (m *LoadBalancer) GetSecurityGroupId() string {
	if m != nil {
		return m.SecurityGroupId
	}
	return ""
}

func (m *LoadBalancer) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *LoadBalancer) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *LoadBalancer) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *LoadBalancer) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *LoadBalancer) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

type LoadBalancerListener struct {
	BackendProtocol          string                      `protobuf:"bytes,1,opt,name=backend_protocol,json=backendProtocol" json:"backend_protocol,omitempty"`
	Backends                 []*LoadBalancerBackend      `protobuf:"bytes,2,rep,name=backends" json:"backends,omitempty"`
	BalanceMode              string                      `protobuf:"bytes,3,opt,name=balance_mode,json=balanceMode" json:"balance_mode,omitempty"`
	CreateTime               *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Forwardfor               int32                       `protobuf:"varint,5,opt,name=forwardfor" json:"forwardfor,omitempty"`
	HealthyCheckMethod       string                      `protobuf:"bytes,6,opt,name=healthy_check_method,json=healthyCheckMethod" json:"healthy_check_method,omitempty"`
	HealthyCheckOption       string                      `protobuf:"bytes,7,opt,name=healthy_check_option,json=healthyCheckOption" json:"healthy_check_option,omitempty"`
	ListenerOption           int32                       `protobuf:"varint,8,opt,name=listener_option,json=listenerOption" json:"listener_option,omitempty"`
	ListenerPort             int32                       `protobuf:"varint,9,opt,name=listener_port,json=listenerPort" json:"listener_port,omitempty"`
	ListenerProtocol         string                      `protobuf:"bytes,10,opt,name=listener_protocol,json=listenerProtocol" json:"listener_protocol,omitempty"`
	LoadbalancerId           string                      `protobuf:"bytes,11,opt,name=loadbalancer_id,json=loadbalancerId" json:"loadbalancer_id,omitempty"`
	LoadbalancerListenerId   string                      `protobuf:"bytes,12,opt,name=loadbalancer_listener_id,json=loadbalancerListenerId" json:"loadbalancer_listener_id,omitempty"`
	LoadbalancerListenerName string                      `protobuf:"bytes,13,opt,name=loadbalancer_listener_name,json=loadbalancerListenerName" json:"loadbalancer_listener_name,omitempty"`
	ServerCertificateId      string                      `protobuf:"bytes,14,opt,name=server_certificate_id,json=serverCertificateId" json:"server_certificate_id,omitempty"`
	SessionSticky            string                      `protobuf:"bytes,15,opt,name=session_sticky,json=sessionSticky" json:"session_sticky,omitempty"`
}

func (m *LoadBalancerListener) Reset()                    { *m = LoadBalancerListener{} }
func (m *LoadBalancerListener) String() string            { return proto.CompactTextString(m) }
func (*LoadBalancerListener) ProtoMessage()               {}
func (*LoadBalancerListener) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{14} }

func (m *LoadBalancerListener) GetBackendProtocol() string {
	if m != nil {
		return m.BackendProtocol
	}
	return ""
}

func (m *LoadBalancerListener) GetBackends() []*LoadBalancerBackend {
	if m != nil {
		return m.Backends
	}
	return nil
}

func (m *LoadBalancerListener) GetBalanceMode() string {
	if m != nil {
		return m.BalanceMode
	}
	return ""
}

func (m *LoadBalancerListener) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *LoadBalancerListener) GetForwardfor() int32 {
	if m != nil {
		return m.Forwardfor
	}
	return 0
}

func (m *LoadBalancerListener) GetHealthyCheckMethod() string {
	if m != nil {
		return m.HealthyCheckMethod
	}
	return ""
}

func (m *LoadBalancerListener) GetHealthyCheckOption() string {
	if m != nil {
		return m.HealthyCheckOption
	}
	return ""
}

func (m *LoadBalancerListener) GetListenerOption() int32 {
	if m != nil {
		return m.ListenerOption
	}
	return 0
}

func (m *LoadBalancerListener) GetListenerPort() int32 {
	if m != nil {
		return m.ListenerPort
	}
	return 0
}

func (m *LoadBalancerListener) GetListenerProtocol() string {
	if m != nil {
		return m.ListenerProtocol
	}
	return ""
}

func (m *LoadBalancerListener) GetLoadbalancerId() string {
	if m != nil {
		return m.LoadbalancerId
	}
	return ""
}

func (m *LoadBalancerListener) GetLoadbalancerListenerId() string {
	if m != nil {
		return m.LoadbalancerListenerId
	}
	return ""
}

func (m *LoadBalancerListener) GetLoadbalancerListenerName() string {
	if m != nil {
		return m.LoadbalancerListenerName
	}
	return ""
}

func (m *LoadBalancerListener) GetServerCertificateId() string {
	if m != nil {
		return m.ServerCertificateId
	}
	return ""
}

func (m *LoadBalancerListener) GetSessionSticky() string {
	if m != nil {
		return m.SessionSticky
	}
	return ""
}

type LoadBalancerBackend struct {
	CreateTime              *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	LoadbalancerBackendId   string                      `protobuf:"bytes,2,opt,name=loadbalancer_backend_id,json=loadbalancerBackendId" json:"loadbalancer_backend_id,omitempty"`
	LoadbalancerBackendName string                      `protobuf:"bytes,3,opt,name=loadbalancer_backend_name,json=loadbalancerBackendName" json:"loadbalancer_backend_name,omitempty"`
	LoadbalancerId          string                      `protobuf:"bytes,4,opt,name=loadbalancer_id,json=loadbalancerId" json:"loadbalancer_id,omitempty"`
	LoadbalancerListenerId  string                      `protobuf:"bytes,5,opt,name=loadbalancer_listener_id,json=loadbalancerListenerId" json:"loadbalancer_listener_id,omitempty"`
	LoadbalancerPolicyId    string                      `protobuf:"bytes,6,opt,name=loadbalancer_policy_id,json=loadbalancerPolicyId" json:"loadbalancer_policy_id,omitempty"`
	Port                    int32                       `protobuf:"varint,7,opt,name=port" json:"port,omitempty"`
	ResourceId              string                      `protobuf:"bytes,8,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	Status                  string                      `protobuf:"bytes,9,opt,name=status" json:"status,omitempty"`
	Weight                  int32                       `protobuf:"varint,10,opt,name=weight" json:"weight,omitempty"`
}

func (m *LoadBalancerBackend) Reset()                    { *m = LoadBalancerBackend{} }
func (m *LoadBalancerBackend) String() string            { return proto.CompactTextString(m) }
func (*LoadBalancerBackend) ProtoMessage()               {}
func (*LoadBalancerBackend) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{15} }

func (m *LoadBalancerBackend) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *LoadBalancerBackend) GetLoadbalancerBackendId() string {
	if m != nil {
		return m.LoadbalancerBackendId
	}
	return ""
}

func (m *LoadBalancerBackend) GetLoadbalancerBackendName() string {
	if m != nil {
		return m.LoadbalancerBackendName
	}
	return ""
}

func (m *LoadBalancerBackend) GetLoadbalancerId() string {
	if m != nil {
		return m.LoadbalancerId
	}
	return ""
}

func (m *LoadBalancerBackend) GetLoadbalancerListenerId() string {
	if m != nil {
		return m.LoadbalancerListenerId
	}
	return ""
}

func (m *LoadBalancerBackend) GetLoadbalancerPolicyId() string {
	if m != nil {
		return m.LoadbalancerPolicyId
	}
	return ""
}

func (m *LoadBalancerBackend) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *LoadBalancerBackend) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *LoadBalancerBackend) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *LoadBalancerBackend) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type Cache struct {
	CacheClass            int32                       `protobuf:"varint,1,opt,name=cache_class,json=cacheClass" json:"cache_class,omitempty"`
	CacheId               string                      `protobuf:"bytes,2,opt,name=cache_id,json=cacheId" json:"cache_id,omitempty"`
	CacheName             string                      `protobuf:"bytes,3,opt,name=cache_name,json=cacheName" json:"cache_name,omitempty"`
	CacheParameterGroupId string                      `protobuf:"bytes,4,opt,name=cache_parameter_group_id,json=cacheParameterGroupId" json:"cache_parameter_group_id,omitempty"`
	CachePort             int32                       `protobuf:"varint,5,opt,name=cache_port,json=cachePort" json:"cache_port,omitempty"`
	CacheSize             int32                       `protobuf:"varint,6,opt,name=cache_size,json=cacheSize" json:"cache_size,omitempty"`
	CacheType             string                      `protobuf:"bytes,7,opt,name=cache_type,json=cacheType" json:"cache_type,omitempty"`
	CacheVersion          string                      `protobuf:"bytes,8,opt,name=cache_version,json=cacheVersion" json:"cache_version,omitempty"`
	CreateTime            *google_protobuf1.Timestamp `protobuf:"bytes,9,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description           string                      `protobuf:"bytes,10,opt,name=description" json:"description,omitempty"`
	IsApplied             int32                       `protobuf:"varint,11,opt,name=is_applied,json=isApplied" json:"is_applied,omitempty"`
	MasterCount           int32                       `protobuf:"varint,12,opt,name=master_count,json=masterCount" json:"master_count,omitempty"`
	MaxMemory             int32                       `protobuf:"varint,13,opt,name=max_memory,json=maxMemory" json:"max_memory,omitempty"`
	NodeCount             int32                       `protobuf:"varint,14,opt,name=node_count,json=nodeCount" json:"node_count,omitempty"`
	Nodes                 []*CacheNode                `protobuf:"bytes,15,rep,name=nodes" json:"nodes,omitempty"`
	ReplicateCount        int32                       `protobuf:"varint,16,opt,name=replicate_count,json=replicateCount" json:"replicate_count,omitempty"`
	SecurityGroupId       string                      `protobuf:"bytes,17,opt,name=security_group_id,json=securityGroupId" json:"security_group_id,omitempty"`
	Status                string                      `protobuf:"bytes,18,opt,name=status" json:"status,omitempty"`
	StatusTime            *google_protobuf1.Timestamp `protobuf:"bytes,19,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SubCode               int32                       `protobuf:"varint,20,opt,name=sub_code,json=subCode" json:"sub_code,omitempty"`
	Tags                  []*Tag                      `protobuf:"bytes,21,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus      string                      `protobuf:"bytes,22,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	Vxnet                 *VxNet                      `protobuf:"bytes,23,opt,name=vxnet" json:"vxnet,omitempty"`
}

func (m *Cache) Reset()                    { *m = Cache{} }
func (m *Cache) String() string            { return proto.CompactTextString(m) }
func (*Cache) ProtoMessage()               {}
func (*Cache) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{16} }

func (m *Cache) GetCacheClass() int32 {
	if m != nil {
		return m.CacheClass
	}
	return 0
}

func (m *Cache) GetCacheId() string {
	if m != nil {
		return m.CacheId
	}
	return ""
}

func (m *Cache) GetCacheName() string {
	if m != nil {
		return m.CacheName
	}
	return ""
}

func (m *Cache) GetCacheParameterGroupId() string {
	if m != nil {
		return m.CacheParameterGroupId
	}
	return ""
}

func (m *Cache) GetCachePort() int32 {
	if m != nil {
		return m.CachePort
	}
	return 0
}

func (m *Cache) GetCacheSize() int32 {
	if m != nil {
		return m.CacheSize
	}
	return 0
}

func (m *Cache) GetCacheType() string {
	if m != nil {
		return m.CacheType
	}
	return ""
}

func (m *Cache) GetCacheVersion() string {
	if m != nil {
		return m.CacheVersion
	}
	return ""
}

func (m *Cache) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Cache) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Cache) GetIsApplied() int32 {
	if m != nil {
		return m.IsApplied
	}
	return 0
}

func (m *Cache) GetMasterCount() int32 {
	if m != nil {
		return m.MasterCount
	}
	return 0
}

func (m *Cache) GetMaxMemory() int32 {
	if m != nil {
		return m.MaxMemory
	}
	return 0
}

func (m *Cache) GetNodeCount() int32 {
	if m != nil {
		return m.NodeCount
	}
	return 0
}

func (m *Cache) GetNodes() []*CacheNode {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *Cache) GetReplicateCount() int32 {
	if m != nil {
		return m.ReplicateCount
	}
	return 0
}

func (m *Cache) GetSecurityGroupId() string {
	if m != nil {
		return m.SecurityGroupId
	}
	return ""
}

func (m *Cache) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Cache) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Cache) GetSubCode() int32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *Cache) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Cache) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Cache) GetVxnet() *VxNet {
	if m != nil {
		return m.Vxnet
	}
	return nil
}

type CacheNode struct {
	AlarmStatus      string                      `protobuf:"bytes,1,opt,name=alarm_status,json=alarmStatus" json:"alarm_status,omitempty"`
	CacheId          string                      `protobuf:"bytes,2,opt,name=cache_id,json=cacheId" json:"cache_id,omitempty"`
	CacheNodeId      string                      `protobuf:"bytes,3,opt,name=cache_node_id,json=cacheNodeId" json:"cache_node_id,omitempty"`
	CacheNodeName    string                      `protobuf:"bytes,4,opt,name=cache_node_name,json=cacheNodeName" json:"cache_node_name,omitempty"`
	CacheRole        string                      `protobuf:"bytes,5,opt,name=cache_role,json=cacheRole" json:"cache_role,omitempty"`
	CacheType        string                      `protobuf:"bytes,6,opt,name=cache_type,json=cacheType" json:"cache_type,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	PrivateIp        string                      `protobuf:"bytes,8,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	Slaveof          string                      `protobuf:"bytes,9,opt,name=slaveof" json:"slaveof,omitempty"`
	Status           string                      `protobuf:"bytes,10,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,11,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,12,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
}

func (m *CacheNode) Reset()                    { *m = CacheNode{} }
func (m *CacheNode) String() string            { return proto.CompactTextString(m) }
func (*CacheNode) ProtoMessage()               {}
func (*CacheNode) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{17} }

func (m *CacheNode) GetAlarmStatus() string {
	if m != nil {
		return m.AlarmStatus
	}
	return ""
}

func (m *CacheNode) GetCacheId() string {
	if m != nil {
		return m.CacheId
	}
	return ""
}

func (m *CacheNode) GetCacheNodeId() string {
	if m != nil {
		return m.CacheNodeId
	}
	return ""
}

func (m *CacheNode) GetCacheNodeName() string {
	if m != nil {
		return m.CacheNodeName
	}
	return ""
}

func (m *CacheNode) GetCacheRole() string {
	if m != nil {
		return m.CacheRole
	}
	return ""
}

func (m *CacheNode) GetCacheType() string {
	if m != nil {
		return m.CacheType
	}
	return ""
}

func (m *CacheNode) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *CacheNode) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *CacheNode) GetSlaveof() string {
	if m != nil {
		return m.Slaveof
	}
	return ""
}

func (m *CacheNode) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *CacheNode) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *CacheNode) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

type CacheParameter struct {
	CacheParameterName  string `protobuf:"bytes,1,opt,name=cache_parameter_name,json=cacheParameterName" json:"cache_parameter_name,omitempty"`
	CacheParameterType  string `protobuf:"bytes,2,opt,name=cache_parameter_type,json=cacheParameterType" json:"cache_parameter_type,omitempty"`
	CacheParameterValue string `protobuf:"bytes,3,opt,name=cache_parameter_value,json=cacheParameterValue" json:"cache_parameter_value,omitempty"`
	CacheType           string `protobuf:"bytes,4,opt,name=cache_type,json=cacheType" json:"cache_type,omitempty"`
	IsReadonly          int32  `protobuf:"varint,5,opt,name=is_readonly,json=isReadonly" json:"is_readonly,omitempty"`
	IsStatic            int32  `protobuf:"varint,6,opt,name=is_static,json=isStatic" json:"is_static,omitempty"`
	OptName             string `protobuf:"bytes,7,opt,name=opt_name,json=optName" json:"opt_name,omitempty"`
	ParameterType       string `protobuf:"bytes,8,opt,name=parameter_type,json=parameterType" json:"parameter_type,omitempty"`
	ResourceVersion     string `protobuf:"bytes,9,opt,name=resource_version,json=resourceVersion" json:"resource_version,omitempty"`
	ValueRange          string `protobuf:"bytes,10,opt,name=value_range,json=valueRange" json:"value_range,omitempty"`
}

func (m *CacheParameter) Reset()                    { *m = CacheParameter{} }
func (m *CacheParameter) String() string            { return proto.CompactTextString(m) }
func (*CacheParameter) ProtoMessage()               {}
func (*CacheParameter) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{18} }

func (m *CacheParameter) GetCacheParameterName() string {
	if m != nil {
		return m.CacheParameterName
	}
	return ""
}

func (m *CacheParameter) GetCacheParameterType() string {
	if m != nil {
		return m.CacheParameterType
	}
	return ""
}

func (m *CacheParameter) GetCacheParameterValue() string {
	if m != nil {
		return m.CacheParameterValue
	}
	return ""
}

func (m *CacheParameter) GetCacheType() string {
	if m != nil {
		return m.CacheType
	}
	return ""
}

func (m *CacheParameter) GetIsReadonly() int32 {
	if m != nil {
		return m.IsReadonly
	}
	return 0
}

func (m *CacheParameter) GetIsStatic() int32 {
	if m != nil {
		return m.IsStatic
	}
	return 0
}

func (m *CacheParameter) GetOptName() string {
	if m != nil {
		return m.OptName
	}
	return ""
}

func (m *CacheParameter) GetParameterType() string {
	if m != nil {
		return m.ParameterType
	}
	return ""
}

func (m *CacheParameter) GetResourceVersion() string {
	if m != nil {
		return m.ResourceVersion
	}
	return ""
}

func (m *CacheParameter) GetValueRange() string {
	if m != nil {
		return m.ValueRange
	}
	return ""
}

type CacheParameterGroup struct {
	CacheParameterGroupId   string                      `protobuf:"bytes,1,opt,name=cache_parameter_group_id,json=cacheParameterGroupId" json:"cache_parameter_group_id,omitempty"`
	CacheParameterGroupName string                      `protobuf:"bytes,2,opt,name=cache_parameter_group_name,json=cacheParameterGroupName" json:"cache_parameter_group_name,omitempty"`
	CacheType               string                      `protobuf:"bytes,3,opt,name=cache_type,json=cacheType" json:"cache_type,omitempty"`
	CreateTime              *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description             string                      `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	IsApplied               int32                       `protobuf:"varint,6,opt,name=is_applied,json=isApplied" json:"is_applied,omitempty"`
	IsDefault               int32                       `protobuf:"varint,7,opt,name=is_default,json=isDefault" json:"is_default,omitempty"`
	Resources               []*Resource                 `protobuf:"bytes,8,rep,name=resources" json:"resources,omitempty"`
}

func (m *CacheParameterGroup) Reset()                    { *m = CacheParameterGroup{} }
func (m *CacheParameterGroup) String() string            { return proto.CompactTextString(m) }
func (*CacheParameterGroup) ProtoMessage()               {}
func (*CacheParameterGroup) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{19} }

func (m *CacheParameterGroup) GetCacheParameterGroupId() string {
	if m != nil {
		return m.CacheParameterGroupId
	}
	return ""
}

func (m *CacheParameterGroup) GetCacheParameterGroupName() string {
	if m != nil {
		return m.CacheParameterGroupName
	}
	return ""
}

func (m *CacheParameterGroup) GetCacheType() string {
	if m != nil {
		return m.CacheType
	}
	return ""
}

func (m *CacheParameterGroup) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *CacheParameterGroup) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CacheParameterGroup) GetIsApplied() int32 {
	if m != nil {
		return m.IsApplied
	}
	return 0
}

func (m *CacheParameterGroup) GetIsDefault() int32 {
	if m != nil {
		return m.IsDefault
	}
	return 0
}

func (m *CacheParameterGroup) GetResources() []*Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

func init() {
	proto.RegisterType((*Tag)(nil), "service.Tag")
	proto.RegisterType((*Tag_ResourceTagPair)(nil), "service.Tag.ResourceTagPair")
	proto.RegisterType((*Tag_ResourceTypeCount)(nil), "service.Tag.ResourceTypeCount")
	proto.RegisterType((*EIP)(nil), "service.EIP")
	proto.RegisterType((*Resource)(nil), "service.Resource")
	proto.RegisterType((*Job)(nil), "service.Job")
	proto.RegisterType((*Volume)(nil), "service.Volume")
	proto.RegisterType((*NIC)(nil), "service.NIC")
	proto.RegisterType((*KeyPair)(nil), "service.KeyPair")
	proto.RegisterType((*VxNet)(nil), "service.VxNet")
	proto.RegisterType((*Router)(nil), "service.Router")
	proto.RegisterType((*Instance)(nil), "service.Instance")
	proto.RegisterType((*Instance_InstanceVxNet)(nil), "service.Instance.InstanceVxNet")
	proto.RegisterType((*Image)(nil), "service.Image")
	proto.RegisterType((*Mongo)(nil), "service.Mongo")
	proto.RegisterType((*MongoNode)(nil), "service.MongoNode")
	proto.RegisterType((*LoadBalancer)(nil), "service.LoadBalancer")
	proto.RegisterType((*LoadBalancerListener)(nil), "service.LoadBalancerListener")
	proto.RegisterType((*LoadBalancerBackend)(nil), "service.LoadBalancerBackend")
	proto.RegisterType((*Cache)(nil), "service.Cache")
	proto.RegisterType((*CacheNode)(nil), "service.CacheNode")
	proto.RegisterType((*CacheParameter)(nil), "service.CacheParameter")
	proto.RegisterType((*CacheParameterGroup)(nil), "service.CacheParameterGroup")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor27) }

var fileDescriptor27 = []byte{
	// 3332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x5a, 0x4b, 0x73, 0x1c, 0x47,
	0x72, 0x0e, 0x60, 0xd0, 0x33, 0xd3, 0x39, 0x0f, 0x00, 0x0d, 0x10, 0x18, 0x80, 0x2f, 0x70, 0x28,
	0x4a, 0x94, 0x1f, 0xa4, 0x83, 0x72, 0x58, 0x0a, 0xcb, 0x17, 0x11, 0x96, 0x1d, 0x23, 0x89, 0x34,
	0xa3, 0x49, 0xf1, 0x3a, 0xd1, 0xd3, 0x5d, 0x18, 0x94, 0xd8, 0xd3, 0xd5, 0xae, 0xea, 0x01, 0x39,
	0x3e, 0xf9, 0xe4, 0x3f, 0xa0, 0xf0, 0xc9, 0x27, 0x9d, 0x7c, 0xd8, 0x88, 0x3d, 0x6c, 0xec, 0x3f,
	0xd8, 0xbd, 0xed, 0x7d, 0xcf, 0xfb, 0x1b, 0xf6, 0xb4, 0xb7, 0xdd, 0xa8, 0xcc, 0xaa, 0x7e, 0x61,
	0x30, 0x20, 0x48, 0x71, 0x6f, 0x5d, 0x5f, 0x66, 0x55, 0x57, 0x55, 0x7e, 0xf9, 0xa8, 0xea, 0x86,
	0x4e, 0xb6, 0x48, 0x99, 0x7a, 0x90, 0x4a, 0x91, 0x09, 0xaf, 0xa5, 0x98, 0x3c, 0xe3, 0x21, 0x3b,
	0xbc, 0x3d, 0x15, 0x62, 0x1a, 0xb3, 0x87, 0x08, 0x4f, 0xe6, 0x27, 0x0f, 0x33, 0x3e, 0x63, 0x2a,
	0x0b, 0x66, 0x29, 0x69, 0x1e, 0x1e, 0xd5, 0x15, 0x22, 0xa6, 0x42, 0xc9, 0xd3, 0x4c, 0x48, 0xd2,
	0x18, 0xfe, 0xda, 0x81, 0xc6, 0x8b, 0x60, 0xea, 0xed, 0x82, 0x13, 0x8a, 0x58, 0xc8, 0xc1, 0xda,
	0xd1, 0xda, 0x7d, 0xd7, 0xa7, 0x86, 0xf7, 0x25, 0x74, 0x42, 0xc9, 0x82, 0x8c, 0x8d, 0xf5, 0xc8,
	0x83, 0xf5, 0xa3, 0xb5, 0xfb, 0x9d, 0x47, 0x87, 0x0f, 0x68, 0xd4, 0x07, 0x76, 0xd4, 0x07, 0x2f,
	0xec, 0x6b, 0x7d, 0x20, 0x75, 0x0d, 0x78, 0x47, 0xd0, 0xb1, 0xaf, 0xe3, 0x22, 0x19, 0x34, 0x70,
	0xe0, 0x32, 0xa4, 0x5f, 0x2a, 0x5e, 0x27, 0x4c, 0x0e, 0x36, 0xe8, 0xa5, 0xd8, 0xf0, 0xee, 0x41,
	0x5f, 0x32, 0x25, 0xe6, 0x32, 0x64, 0xe3, 0x50, 0xcc, 0x93, 0x6c, 0xe0, 0x1c, 0xad, 0xdd, 0x77,
	0xfc, 0x9e, 0x45, 0x8f, 0x35, 0xe8, 0x7d, 0x03, 0x5e, 0xae, 0x96, 0x05, 0xd3, 0x71, 0x1a, 0x70,
	0xa9, 0x06, 0xcd, 0xa3, 0xc6, 0xfd, 0xce, 0xa3, 0x1b, 0x0f, 0xcc, 0x16, 0x3d, 0x78, 0x11, 0x4c,
	0x1f, 0xf8, 0x46, 0xed, 0x45, 0x30, 0x7d, 0x16, 0x70, 0xe9, 0x6f, 0xc9, 0x2a, 0xa0, 0xbc, 0xa7,
	0xb0, 0x53, 0x8c, 0xb5, 0x48, 0xed, 0x7b, 0x5b, 0x38, 0xd8, 0xad, 0xe5, 0x83, 0x2d, 0x52, 0x9a,
	0x88, 0xbf, 0x2d, 0xeb, 0x90, 0x77, 0x0d, 0x9a, 0x7a, 0x4a, 0x3c, 0x1a, 0xb4, 0x69, 0x65, 0x59,
	0x30, 0x1d, 0x45, 0xde, 0x3e, 0xb4, 0x34, 0xfc, 0x8a, 0x2d, 0x06, 0x2e, 0xe2, 0x5a, 0xeb, 0x5b,
	0xb6, 0xf0, 0x0e, 0xa0, 0xad, 0x05, 0x49, 0x30, 0x63, 0x03, 0x40, 0x89, 0x56, 0x7c, 0x1a, 0xcc,
	0xd8, 0xe1, 0x6f, 0xd6, 0x60, 0xb3, 0xb6, 0x00, 0xef, 0x36, 0x74, 0xf2, 0xe9, 0xf2, 0xc8, 0x98,
	0x0c, 0x2c, 0x34, 0x8a, 0xbc, 0xbb, 0xd0, 0xab, 0xac, 0x07, 0x2d, 0xe7, 0xfa, 0xdd, 0xf2, 0x4c,
	0xbd, 0x3d, 0x68, 0xaa, 0x2c, 0xc8, 0xe6, 0xca, 0x98, 0xc6, 0xb4, 0xb4, 0xd1, 0xe9, 0x89, 0x8c,
	0xbe, 0x71, 0xb9, 0xd1, 0x49, 0x1d, 0x8d, 0x5e, 0xac, 0xdc, 0x29, 0xad, 0xfc, 0xf0, 0x29, 0x6c,
	0x9f, 0xdb, 0x38, 0xe2, 0x9c, 0xde, 0xe7, 0x35, 0xb4, 0x2f, 0x35, 0xde, 0x6a, 0xee, 0xc3, 0x3f,
	0x6f, 0x40, 0xe3, 0xeb, 0xd1, 0x33, 0xef, 0x0e, 0x74, 0x83, 0x38, 0x90, 0xb3, 0xb1, 0x59, 0x09,
	0x6d, 0x45, 0x07, 0xb1, 0xe7, 0xb4, 0x9c, 0x7b, 0xd0, 0x0f, 0x94, 0x12, 0x21, 0xd7, 0x34, 0x9e,
	0x89, 0x88, 0x06, 0x74, 0xfc, 0x5e, 0x8e, 0x3e, 0x11, 0x11, 0xf3, 0x6e, 0x80, 0x3b, 0x09, 0x92,
	0xe8, 0x35, 0x8f, 0xb2, 0x53, 0xdc, 0x10, 0xc7, 0x2f, 0x00, 0xfd, 0x9e, 0x09, 0x8f, 0x63, 0x9e,
	0x4c, 0x69, 0x08, 0x22, 0x6c, 0xc7, 0x60, 0x38, 0x40, 0xcd, 0x57, 0x9c, 0xf7, 0xf1, 0x95, 0xe6,
	0x79, 0x5f, 0x39, 0x80, 0x36, 0xe3, 0xe9, 0x38, 0x88, 0x22, 0x39, 0x68, 0x11, 0x45, 0x18, 0x4f,
	0xbf, 0x8a, 0x22, 0xe9, 0x5d, 0x07, 0x57, 0x8b, 0xa6, 0x52, 0xcc, 0x53, 0x43, 0x38, 0xad, 0xfb,
	0xef, 0xba, 0xad, 0x0d, 0xa2, 0x85, 0x3c, 0x32, 0x94, 0x73, 0x18, 0x4f, 0x47, 0x91, 0x1d, 0xae,
	0xcc, 0x38, 0xc6, 0x53, 0xcd, 0x38, 0x3d, 0x1c, 0x0f, 0xd3, 0x71, 0x28, 0x22, 0xa6, 0x06, 0x1d,
	0x1a, 0x8e, 0x87, 0xe9, 0xb1, 0x6e, 0xeb, 0x7e, 0x09, 0x63, 0xd1, 0x98, 0x87, 0xe9, 0xa0, 0x8b,
	0xbb, 0xd4, 0xd2, 0xed, 0x51, 0x98, 0x7a, 0x7f, 0x0f, 0x6d, 0x6b, 0xa3, 0x41, 0x0f, 0x57, 0xbf,
	0x9d, 0x7b, 0x8e, 0x35, 0xbe, 0x9f, 0xab, 0x94, 0xe8, 0xd7, 0x5f, 0x45, 0xbf, 0xcd, 0x2b, 0xd1,
	0xef, 0x00, 0xda, 0x6a, 0x3e, 0xc1, 0xb9, 0x0f, 0xb6, 0x68, 0x7a, 0x6a, 0x3e, 0xd1, 0x53, 0xf7,
	0x8e, 0x60, 0x23, 0x0b, 0xa6, 0x6a, 0xb0, 0x8d, 0x4e, 0xdd, 0x2d, 0x3b, 0xb5, 0x8f, 0x12, 0xef,
	0x6f, 0x61, 0x3b, 0x93, 0x41, 0xa2, 0xb8, 0xde, 0x70, 0xcb, 0x28, 0x0f, 0x27, 0xb7, 0x55, 0x08,
	0x88, 0x56, 0xc3, 0x39, 0xb4, 0xed, 0xa2, 0xae, 0xe6, 0x8f, 0xb8, 0xe5, 0x35, 0x4e, 0xe3, 0xbe,
	0x9f, 0x23, 0x7e, 0x63, 0x09, 0xf1, 0xff, 0x67, 0x1d, 0x1a, 0xdf, 0x88, 0x49, 0x9d, 0x6d, 0x6b,
	0x57, 0x62, 0xdb, 0x4d, 0x80, 0x1f, 0xc4, 0x64, 0x1c, 0x84, 0x48, 0x36, 0x9a, 0x8b, 0xfb, 0x83,
	0x98, 0x7c, 0x85, 0x80, 0xa6, 0x8c, 0x16, 0xf3, 0xc8, 0xcc, 0xc0, 0xf9, 0x41, 0x4c, 0x46, 0xd1,
	0x05, 0xd1, 0xfa, 0x0e, 0x74, 0x4b, 0x6b, 0x57, 0xc6, 0xed, 0x3b, 0xc5, 0xe2, 0x55, 0xc9, 0xd2,
	0xcd, 0x55, 0x96, 0x6e, 0x5d, 0xc5, 0xd2, 0xc3, 0xff, 0x73, 0xa0, 0xf9, 0x52, 0xc4, 0xf3, 0x19,
	0x7b, 0xbf, 0xbd, 0xa8, 0x79, 0xde, 0xfa, 0x79, 0xcf, 0xdb, 0x83, 0x66, 0xc4, 0x34, 0x55, 0x6c,
	0x9c, 0xa4, 0x96, 0xe6, 0x3b, 0x4f, 0x54, 0x16, 0x24, 0xa1, 0x0d, 0x92, 0x05, 0xdf, 0x47, 0x46,
	0xe0, 0xe7, 0x2a, 0xde, 0x43, 0x70, 0xed, 0xb3, 0xde, 0xa5, 0xc6, 0x72, 0xfd, 0x42, 0xc7, 0xfb,
	0x0e, 0x76, 0xe3, 0x20, 0x63, 0x2a, 0x1b, 0xab, 0x24, 0x48, 0xd5, 0xa9, 0xc8, 0x68, 0x7d, 0xcd,
	0x4b, 0xd7, 0xe7, 0x51, 0xbf, 0xe7, 0xa6, 0x1b, 0xae, 0x33, 0xb7, 0x5e, 0xab, 0x6c, 0xbd, 0x8f,
	0xa0, 0x9f, 0xc6, 0x41, 0xc8, 0x28, 0x78, 0x14, 0x09, 0xab, 0x8b, 0x28, 0x46, 0x90, 0x51, 0xe4,
	0x79, 0xb0, 0xa1, 0xf8, 0x7f, 0x31, 0x8c, 0x20, 0x8e, 0x8f, 0xcf, 0x25, 0xa3, 0xc2, 0x2a, 0xa3,
	0x76, 0xde, 0xd9, 0x7d, 0xbb, 0xcb, 0xdd, 0xb7, 0x77, 0x35, 0xf7, 0xed, 0x2f, 0x77, 0x5f, 0x1d,
	0xe4, 0xce, 0x90, 0x3d, 0x7a, 0xcd, 0x9b, 0x14, 0xe4, 0x08, 0x18, 0x45, 0xda, 0x9f, 0x8d, 0x10,
	0x9d, 0x75, 0x8b, 0xfc, 0x99, 0x20, 0x74, 0xd5, 0x42, 0x01, 0x1d, 0x75, 0x1b, 0xa7, 0x6a, 0x14,
	0xd0, 0x4d, 0x7f, 0x72, 0xa0, 0xf1, 0x74, 0x74, 0xfc, 0x7e, 0xd4, 0xbc, 0x0d, 0x1d, 0xcb, 0x06,
	0x3d, 0x4b, 0xa2, 0x26, 0x58, 0x68, 0x14, 0x69, 0x47, 0x4d, 0x78, 0x58, 0x72, 0xd4, 0x84, 0x87,
	0x14, 0xdb, 0x35, 0x8c, 0x73, 0x27, 0x5f, 0x6d, 0x25, 0x3c, 0xc4, 0x89, 0xe7, 0x2c, 0x70, 0xca,
	0x2c, 0xb8, 0x09, 0x90, 0x4a, 0x7e, 0xa6, 0xa7, 0xc9, 0x53, 0xe3, 0xa4, 0xae, 0x41, 0x46, 0xa9,
	0x36, 0xbf, 0x14, 0x31, 0x39, 0xa8, 0xe3, 0xe3, 0xb3, 0x77, 0x04, 0x5d, 0x29, 0x44, 0x36, 0x9e,
	0x2b, 0x26, 0x0b, 0xda, 0x80, 0xc6, 0xbe, 0x57, 0x4c, 0x8e, 0x22, 0x9d, 0x77, 0x15, 0x0b, 0xe7,
	0x92, 0x67, 0x0b, 0x93, 0x9a, 0x28, 0x01, 0xf5, 0x2c, 0x4a, 0xf9, 0xe9, 0x10, 0xda, 0x8a, 0xfd,
	0xe7, 0x9c, 0x69, 0x2f, 0x02, 0x7c, 0x41, 0xde, 0x2e, 0x71, 0xac, 0xb3, 0x8a, 0x63, 0xdd, 0x2b,
	0x71, 0xec, 0x72, 0x22, 0x1d, 0x40, 0xfb, 0xec, 0x4d, 0xc2, 0x32, 0xbd, 0x2e, 0xe2, 0x4f, 0x0b,
	0xdb, 0xa3, 0xc8, 0xbb, 0x05, 0x0d, 0xc6, 0x53, 0x93, 0x94, 0x8a, 0xbe, 0x5f, 0x8f, 0x9e, 0xf9,
	0x5a, 0xb0, 0x9c, 0x83, 0x5b, 0x17, 0x70, 0xf0, 0x16, 0x40, 0x28, 0x92, 0x4c, 0x8a, 0x38, 0x66,
	0x12, 0x49, 0xe4, 0xfa, 0x25, 0x44, 0x9b, 0x85, 0xe6, 0x81, 0x24, 0xf3, 0xa8, 0x26, 0x41, 0x04,
	0xeb, 0xb7, 0x9b, 0xd8, 0x5d, 0x89, 0x18, 0xd9, 0xb1, 0x43, 0x56, 0x33, 0x08, 0x91, 0xb8, 0x9c,
	0x94, 0x76, 0xeb, 0x49, 0x69, 0xf8, 0xc7, 0x35, 0x68, 0x7d, 0xcb, 0x16, 0x58, 0x51, 0xd6, 0xa2,
	0xe0, 0xda, 0xf9, 0x28, 0x78, 0x0f, 0xfa, 0x2c, 0x09, 0xe5, 0x22, 0xcd, 0xc6, 0x33, 0x96, 0x9d,
	0x0a, 0xcb, 0xc7, 0x9e, 0x41, 0x9f, 0x20, 0xa8, 0xd3, 0x41, 0x89, 0xb3, 0xba, 0xb4, 0x6c, 0xe8,
	0x91, 0x0a, 0xd2, 0x2a, 0x3d, 0xef, 0x57, 0x6c, 0xa1, 0xcb, 0x75, 0x3d, 0x2f, 0x22, 0xa8, 0x6b,
	0x90, 0x11, 0x8e, 0x60, 0xc5, 0xc8, 0x60, 0x93, 0x50, 0x0c, 0x86, 0x2c, 0xde, 0x87, 0x56, 0x3a,
	0x9f, 0x60, 0x1d, 0x6d, 0x32, 0x4a, 0x3a, 0x9f, 0xe8, 0x3a, 0xda, 0xda, 0xb6, 0x75, 0x91, 0x6d,
	0x87, 0xff, 0xdb, 0x00, 0xe7, 0xe5, 0x9b, 0xa7, 0x2c, 0xf3, 0xfe, 0x0e, 0xbc, 0xe0, 0x2c, 0xe0,
	0x71, 0x30, 0xd1, 0x1b, 0x98, 0x8e, 0xcb, 0xa5, 0xe8, 0x56, 0x2e, 0x19, 0xa5, 0x54, 0xab, 0x7e,
	0xe0, 0x93, 0x50, 0x7d, 0xdb, 0x36, 0xce, 0x6f, 0xdb, 0x72, 0xd7, 0xfd, 0x04, 0x9a, 0x52, 0xcc,
	0x33, 0x26, 0x4d, 0x5a, 0xd8, 0x2c, 0x4a, 0x2e, 0x84, 0x7d, 0x23, 0xbe, 0x7c, 0x6b, 0xbc, 0x21,
	0xf4, 0xce, 0xd2, 0x70, 0x4c, 0xfa, 0x85, 0x4f, 0x77, 0xce, 0xd2, 0x90, 0xc6, 0xa2, 0xd0, 0x92,
	0xbb, 0x86, 0x5b, 0x75, 0x8d, 0x9c, 0xad, 0xa5, 0x9a, 0x92, 0xd8, 0x8a, 0x36, 0xab, 0x92, 0xb9,
	0x53, 0x23, 0xf3, 0xf0, 0x97, 0x0e, 0x34, 0xe9, 0x2d, 0x1f, 0x3a, 0x9d, 0xdf, 0x00, 0x88, 0x16,
	0x89, 0xb6, 0x38, 0x4b, 0x6c, 0xe0, 0x6c, 0x47, 0x8b, 0x64, 0x94, 0x7e, 0x9d, 0x44, 0x3a, 0xae,
	0x19, 0xa9, 0xca, 0x02, 0x99, 0x19, 0x7a, 0x02, 0xca, 0x9f, 0x6b, 0xc4, 0x86, 0x00, 0xe7, 0xa2,
	0x10, 0x70, 0x13, 0x40, 0x17, 0xd6, 0x2c, 0x7b, 0x2d, 0xe4, 0x2b, 0x1b, 0x4c, 0x79, 0xfa, 0x94,
	0x00, 0x14, 0xab, 0x71, 0x90, 0xa6, 0x31, 0x67, 0x91, 0x09, 0xa9, 0x2e, 0x57, 0x5f, 0x11, 0xa0,
	0xc5, 0xb3, 0x20, 0x09, 0xa6, 0xda, 0x02, 0xb6, 0x98, 0x77, 0x0d, 0x42, 0xa1, 0x18, 0xcf, 0x1f,
	0x26, 0x13, 0xeb, 0xe7, 0x5a, 0xf4, 0x86, 0x7a, 0xf4, 0xbe, 0x0e, 0x6e, 0x61, 0x52, 0x53, 0xce,
	0x4b, 0x6b, 0x4f, 0x1d, 0x24, 0x48, 0x88, 0x56, 0xeb, 0xda, 0x28, 0xae, 0x21, 0x9b, 0xe9, 0x8c,
	0x02, 0xda, 0xad, 0x47, 0x99, 0x8e, 0x20, 0x8c, 0x42, 0x7f, 0x03, 0xdb, 0xd5, 0x30, 0x5f, 0x44,
	0xcd, 0xcd, 0x4a, 0xa4, 0x1f, 0x45, 0xa5, 0x78, 0xbe, 0xb9, 0x2a, 0x9e, 0x6f, 0xbd, 0x53, 0x3c,
	0xff, 0x79, 0xea, 0x7a, 0xef, 0x63, 0x68, 0x22, 0x2b, 0xd5, 0x60, 0x07, 0x07, 0xec, 0xe7, 0x03,
	0x62, 0xd8, 0xf0, 0x8d, 0x74, 0xf8, 0xa3, 0x0b, 0x6d, 0x5b, 0xb5, 0xbd, 0xcd, 0x31, 0xf4, 0x0e,
	0x74, 0xc3, 0x74, 0x3e, 0xce, 0x44, 0x2a, 0x62, 0x31, 0x5d, 0x58, 0x66, 0x86, 0xe9, 0xfc, 0x85,
	0x81, 0xea, 0xc4, 0x6f, 0xbc, 0x0f, 0xf1, 0x37, 0x56, 0xd5, 0xb1, 0x4e, 0xa5, 0x8e, 0x35, 0x84,
	0x6e, 0x5f, 0x44, 0xe8, 0x4f, 0x60, 0x73, 0x2a, 0x83, 0xf4, 0x94, 0x87, 0x6a, 0x9c, 0x06, 0x4a,
	0xbd, 0x8e, 0x0c, 0xc9, 0xfa, 0x16, 0x7e, 0x86, 0xa8, 0xde, 0xe7, 0x42, 0x51, 0xcf, 0x36, 0x14,
	0xb1, 0x61, 0xdc, 0x56, 0xae, 0x6a, 0x70, 0xef, 0x23, 0x70, 0xf8, 0x2c, 0x98, 0xda, 0xec, 0x5d,
	0x6c, 0xf3, 0x48, 0xa3, 0x3e, 0x09, 0x75, 0xbc, 0xc1, 0x07, 0x4d, 0xaa, 0x1e, 0xc5, 0x1b, 0x6c,
	0x53, 0x7d, 0x91, 0x87, 0xcc, 0x30, 0x0e, 0x14, 0xd5, 0x7a, 0x8e, 0xdf, 0xb3, 0xe8, 0xb1, 0x06,
	0xeb, 0x45, 0xd4, 0xe6, 0xb9, 0x22, 0xea, 0x2e, 0xe4, 0x3d, 0xca, 0xe5, 0x5e, 0x1e, 0x8f, 0xed,
	0xd9, 0x2c, 0x57, 0xca, 0x4b, 0xbe, 0x92, 0x12, 0xba, 0xc2, 0x6d, 0xe8, 0x14, 0x89, 0x4d, 0x33,
	0x4c, 0xc7, 0x70, 0xc8, 0x33, 0x1b, 0x5e, 0x45, 0xcc, 0xd8, 0x4c, 0xc8, 0xc5, 0x38, 0x9c, 0x4b,
	0xc9, 0x92, 0x0c, 0xb3, 0xb6, 0xe3, 0xf7, 0x08, 0x3d, 0x26, 0xb0, 0xe6, 0xd0, 0xbb, 0x75, 0x87,
	0x2e, 0xbc, 0x68, 0x6f, 0x95, 0x17, 0xed, 0xbf, 0x73, 0xe5, 0x3d, 0x58, 0x5e, 0x79, 0x1f, 0x5c,
	0xcd, 0xc1, 0x0e, 0x2f, 0x70, 0xb0, 0xbb, 0xd0, 0x3b, 0x0b, 0xd3, 0xb9, 0xca, 0xf7, 0xe0, 0x3a,
	0xbe, 0xae, 0x8b, 0x60, 0x69, 0x0b, 0xf2, 0xf2, 0x5c, 0x0d, 0x6e, 0xe0, 0x4e, 0xba, 0xb6, 0x3e,
	0x57, 0xde, 0xa7, 0xd0, 0xa2, 0x86, 0x1a, 0xdc, 0xc4, 0x59, 0x15, 0x69, 0x8f, 0xce, 0x84, 0xbe,
	0x95, 0x7b, 0x9f, 0xe7, 0xfe, 0x7c, 0x0b, 0x35, 0x6f, 0x9f, 0x3b, 0x73, 0xe5, 0x0f, 0x15, 0x07,
	0x3f, 0xfc, 0xd5, 0x1a, 0xf4, 0x2a, 0x92, 0x52, 0xb9, 0xbd, 0x56, 0x2e, 0xb7, 0xab, 0xe6, 0x5a,
	0xbf, 0xa8, 0x7a, 0x6e, 0x94, 0xaa, 0xe7, 0x72, 0x1a, 0xdd, 0x58, 0x95, 0x46, 0x9d, 0xd5, 0x69,
	0xb4, 0x59, 0x4f, 0xa3, 0xbf, 0x68, 0x81, 0x83, 0x0e, 0xa4, 0x4f, 0x76, 0x41, 0x9a, 0x8e, 0xed,
	0xad, 0x55, 0x3e, 0xe9, 0x6e, 0x90, 0xa6, 0x8f, 0x09, 0x1c, 0x45, 0xde, 0x10, 0xba, 0x81, 0x0c,
	0x4f, 0x79, 0xc6, 0xc2, 0x6c, 0x2e, 0xf3, 0x7b, 0x89, 0x32, 0xa6, 0x5f, 0x59, 0x1a, 0x85, 0x12,
	0xa6, 0x3b, 0xc9, 0x87, 0xa8, 0x45, 0xad, 0x8d, 0x2b, 0x45, 0xad, 0x7b, 0xd0, 0x8f, 0xd8, 0x49,
	0x30, 0x8f, 0x33, 0x1b, 0x5a, 0x68, 0xc5, 0x3d, 0x83, 0x9a, 0xc8, 0x72, 0x07, 0xba, 0x56, 0x4d,
	0x1f, 0x38, 0x8a, 0xfb, 0x31, 0xc4, 0xf4, 0x81, 0xa3, 0x1e, 0xff, 0x5a, 0xe7, 0xe3, 0xdf, 0x4d,
	0x80, 0x93, 0xb1, 0x64, 0x8a, 0x65, 0xe9, 0x6b, 0x2a, 0x6e, 0x1c, 0xdf, 0x3d, 0xf1, 0x0d, 0xe0,
	0x0d, 0xa0, 0x75, 0xc2, 0x02, 0xdc, 0x05, 0xca, 0xae, 0xb6, 0xa9, 0x8f, 0x28, 0xe6, 0x51, 0xd9,
	0x23, 0x8a, 0x6d, 0xeb, 0x1a, 0xfe, 0x74, 0x91, 0x6a, 0x46, 0x29, 0x21, 0x4d, 0xb0, 0x2b, 0x21,
	0x95, 0x00, 0xd6, 0xad, 0x06, 0x30, 0x5d, 0x09, 0xa0, 0x08, 0x2d, 0xdd, 0x33, 0x85, 0x82, 0x46,
	0xd0, 0xd2, 0xf5, 0x92, 0xb0, 0x7f, 0xbe, 0x24, 0xbc, 0x0e, 0xae, 0x50, 0xe3, 0x93, 0x60, 0xc6,
	0xe3, 0x85, 0x3d, 0xc4, 0x0a, 0xf5, 0x6f, 0xd8, 0x2e, 0xea, 0xc5, 0xad, 0x72, 0xbd, 0x78, 0x08,
	0xed, 0x34, 0x0e, 0xb2, 0x13, 0x21, 0x67, 0x26, 0x86, 0xe5, 0x6d, 0x6d, 0x8c, 0x54, 0x8a, 0x90,
	0x29, 0x25, 0x64, 0x71, 0xe6, 0x70, 0xfd, 0x5e, 0x8e, 0x62, 0x98, 0xd3, 0x43, 0x48, 0x71, 0xc6,
	0x23, 0x26, 0xcd, 0xa9, 0x23, 0x6f, 0x7b, 0x9f, 0xc2, 0x96, 0x64, 0xa1, 0x98, 0xcd, 0x58, 0x12,
	0xb1, 0x88, 0x06, 0xa1, 0x00, 0xb6, 0x59, 0xc2, 0x71, 0x98, 0x7d, 0x68, 0xe1, 0x09, 0x92, 0x47,
	0x83, 0x6b, 0x14, 0xc7, 0x74, 0xb3, 0x74, 0xdb, 0xb0, 0xb7, 0xf4, 0xb6, 0x61, 0x7f, 0x55, 0xcc,
	0x1b, 0xbc, 0x73, 0xcc, 0x3b, 0xa8, 0xc6, 0xbc, 0x2b, 0x45, 0xb4, 0x7d, 0x68, 0xcd, 0x39, 0xad,
	0xf5, 0x3a, 0xcd, 0x6e, 0xce, 0x71, 0x89, 0xb7, 0x00, 0xce, 0xb8, 0xe2, 0x13, 0x1e, 0xf3, 0x6c,
	0x31, 0xb8, 0x61, 0xae, 0x11, 0x72, 0x64, 0xf8, 0x93, 0x03, 0xce, 0x13, 0x91, 0x4c, 0xc5, 0xdb,
	0x14, 0x10, 0xf7, 0x61, 0x2b, 0x98, 0x67, 0x62, 0x3c, 0x09, 0xc2, 0x57, 0xf3, 0xb4, 0x38, 0x86,
	0x38, 0x7e, 0x5f, 0xe3, 0x8f, 0x11, 0xc6, 0x75, 0x7d, 0x06, 0x7b, 0xa8, 0x39, 0xe3, 0x89, 0x90,
	0xe3, 0x33, 0x26, 0xc7, 0xf3, 0x74, 0x2a, 0x83, 0xc8, 0xc6, 0xa0, 0x1d, 0x2d, 0x7d, 0xa2, 0x85,
	0x2f, 0x99, 0xfc, 0x9e, 0x44, 0xef, 0xe7, 0xc6, 0x35, 0xe7, 0x73, 0xce, 0x3b, 0xdf, 0xcf, 0x7b,
	0x99, 0x75, 0x00, 0xed, 0x99, 0xde, 0x37, 0x4d, 0x1e, 0x73, 0x19, 0x8e, 0x6d, 0xf2, 0x2a, 0x12,
	0xa1, 0x57, 0xd9, 0x02, 0x5a, 0x23, 0x36, 0x7e, 0x92, 0x18, 0xcd, 0x45, 0x8e, 0x4e, 0x62, 0xb4,
	0xd8, 0x5d, 0xe8, 0x91, 0xf8, 0x8c, 0x49, 0xa5, 0x97, 0x42, 0x95, 0x4e, 0x17, 0xc1, 0x97, 0x84,
	0x7d, 0x98, 0x6b, 0x89, 0x3b, 0xd0, 0x55, 0x99, 0x90, 0x3a, 0x1e, 0x20, 0xfb, 0xa9, 0xd2, 0xee,
	0x18, 0xec, 0xb9, 0x76, 0x02, 0x9b, 0x88, 0xfb, 0x57, 0x4b, 0xc4, 0x9b, 0x17, 0xd0, 0xf6, 0x23,
	0x70, 0x30, 0x71, 0x98, 0x7a, 0xbb, 0x5e, 0xe8, 0x92, 0x70, 0xf8, 0xff, 0x6b, 0xe0, 0x22, 0x47,
	0x9f, 0x6a, 0xbf, 0xe8, 0xc3, 0x3a, 0x4f, 0x0d, 0x3b, 0xd7, 0x79, 0x5a, 0x31, 0xc4, 0x7a, 0xd5,
	0x10, 0x43, 0xbb, 0x95, 0x89, 0x88, 0x58, 0x91, 0x39, 0x3a, 0x33, 0x3b, 0xd8, 0x08, 0x63, 0x6e,
	0x2a, 0xf9, 0x2c, 0x90, 0x0b, 0x24, 0x9c, 0xe3, 0xdb, 0x66, 0x69, 0x8f, 0x9d, 0xca, 0x1e, 0x97,
	0x33, 0x67, 0xb3, 0x92, 0x39, 0x87, 0xff, 0xed, 0x40, 0xf7, 0x3b, 0x11, 0x44, 0x8f, 0x83, 0x58,
	0x07, 0x48, 0xe9, 0x7d, 0x0c, 0xad, 0x30, 0x9e, 0x2b, 0x7d, 0x38, 0x5e, 0xab, 0x6d, 0x99, 0x2e,
	0x6e, 0xad, 0xf0, 0x43, 0x9f, 0xed, 0xab, 0x27, 0xbe, 0x8d, 0xfa, 0x89, 0xef, 0x4b, 0x70, 0x63,
	0xae, 0x32, 0x96, 0x30, 0x69, 0xef, 0x85, 0x6f, 0xe6, 0xf3, 0x2c, 0xaf, 0xe7, 0x3b, 0xa3, 0xe5,
	0x17, 0xfa, 0xba, 0x36, 0x8f, 0x45, 0x10, 0x4d, 0x8c, 0x4a, 0xb1, 0x2b, 0xfd, 0x32, 0x3c, 0xc2,
	0xda, 0xbc, 0xa2, 0x88, 0xde, 0x41, 0xae, 0xb3, 0x55, 0x16, 0xa0, 0x93, 0xd4, 0x95, 0xd1, 0x57,
	0x28, 0x61, 0x56, 0x94, 0x6d, 0xd5, 0x5b, 0x94, 0x3f, 0x6a, 0xe0, 0x52, 0xd5, 0x9b, 0xd7, 0x3f,
	0x6a, 0xf9, 0x09, 0x11, 0x2e, 0x3b, 0x21, 0xfe, 0x55, 0x6f, 0xfc, 0xae, 0x74, 0x75, 0x5c, 0xa6,
	0xe0, 0x66, 0x95, 0x82, 0xbf, 0x77, 0x60, 0x77, 0x99, 0xc9, 0x74, 0x5e, 0xd4, 0x71, 0x9b, 0x25,
	0x51, 0x71, 0x32, 0x22, 0x2f, 0xda, 0x34, 0x78, 0x7e, 0x30, 0xfa, 0x02, 0xda, 0x06, 0x52, 0x83,
	0xf5, 0xda, 0xd7, 0xec, 0xf2, 0xd8, 0x8f, 0x49, 0xc9, 0xcf, 0xb5, 0xf1, 0x23, 0x25, 0x09, 0xe9,
	0x23, 0xa5, 0xe1, 0xa2, 0xc1, 0x96, 0x7d, 0xa4, 0xbc, 0x5a, 0x94, 0xbf, 0x05, 0x70, 0x22, 0xe4,
	0xeb, 0x40, 0x46, 0x27, 0x42, 0x9a, 0x8f, 0xf2, 0x25, 0xc4, 0xfb, 0x07, 0xd8, 0x3d, 0x65, 0x41,
	0x9c, 0x9d, 0x2e, 0xc6, 0xe1, 0x29, 0x0b, 0x5f, 0xd9, 0x8b, 0x42, 0x62, 0xa4, 0x67, 0x64, 0xc7,
	0x5a, 0x64, 0x6e, 0x0b, 0xcf, 0xf5, 0x10, 0xe5, 0xea, 0xad, 0xd2, 0xe3, 0x3f, 0xc8, 0x99, 0x34,
	0xe1, 0xcd, 0xa6, 0x5a, 0x65, 0x22, 0x66, 0xdf, 0xc2, 0x46, 0xf1, 0x2e, 0xf4, 0x72, 0xc5, 0x54,
	0xc8, 0xcc, 0xc4, 0xfa, 0xae, 0x05, 0x9f, 0x09, 0x99, 0x21, 0xd1, 0x73, 0x25, 0x6b, 0x17, 0x30,
	0x5e, 0x61, 0x15, 0xad, 0x61, 0x96, 0xf8, 0x5a, 0x67, 0xa9, 0xaf, 0x7d, 0x01, 0x83, 0x8a, 0x62,
	0xfe, 0x8a, 0xbc, 0x06, 0xdc, 0x2b, 0xcb, 0x2d, 0x49, 0x46, 0x91, 0xf7, 0x2f, 0x70, 0xb8, 0xbc,
	0x67, 0xa9, 0x44, 0x1c, 0x2c, 0xeb, 0x8b, 0x6e, 0xfb, 0x08, 0xae, 0x69, 0xa2, 0x30, 0x39, 0x0e,
	0x99, 0xcc, 0xf8, 0x09, 0x0f, 0xd1, 0x29, 0xed, 0x75, 0xcc, 0x0e, 0x09, 0x8f, 0x0b, 0x99, 0xbd,
	0xa5, 0x57, 0x8a, 0x68, 0xcf, 0xc3, 0x57, 0xb6, 0x8e, 0xec, 0x19, 0xf4, 0x39, 0x82, 0xc3, 0xdf,
	0x36, 0x60, 0x67, 0x09, 0xf9, 0xde, 0xef, 0xae, 0xee, 0x9f, 0x60, 0xbf, 0xb2, 0x5a, 0xeb, 0x21,
	0x79, 0x2e, 0xb9, 0x56, 0x16, 0x9b, 0x57, 0x8e, 0x22, 0xef, 0x9f, 0xe1, 0x60, 0x69, 0x3f, 0xdc,
	0x24, 0x22, 0xfd, 0xfe, 0x92, 0x9e, 0xb8, 0x47, 0x4b, 0x8c, 0xb8, 0x71, 0x65, 0x23, 0x3a, 0x2b,
	0x8d, 0xf8, 0x8f, 0x50, 0x91, 0x8c, 0x53, 0x11, 0xf3, 0x70, 0x51, 0x84, 0xe6, 0xdd, 0xb2, 0xf4,
	0x19, 0x0a, 0xa9, 0xea, 0x45, 0x9a, 0x9a, 0x8f, 0x2c, 0xfa, 0xb9, 0x7e, 0x85, 0xdf, 0x3e, 0xf7,
	0x5d, 0xb9, 0x08, 0x97, 0x6e, 0x25, 0x5c, 0xee, 0x41, 0xf3, 0x35, 0xe3, 0xd3, 0xd3, 0xcc, 0x9c,
	0x57, 0x4c, 0x6b, 0xf8, 0x87, 0x26, 0x38, 0xc7, 0x41, 0x78, 0x8a, 0x51, 0x3b, 0xd4, 0x0f, 0xe6,
	0xea, 0x84, 0xae, 0xbd, 0x01, 0x21, 0xba, 0x37, 0x39, 0x80, 0x36, 0x29, 0x14, 0x99, 0x1d, 0xdb,
	0x54, 0x62, 0x91, 0xa8, 0xb4, 0xe1, 0x2e, 0x22, 0xb8, 0xc5, 0x9f, 0xc3, 0x80, 0xc4, 0x69, 0x20,
	0x83, 0x19, 0xcb, 0x98, 0x2c, 0xc2, 0x3e, 0xed, 0xf5, 0x35, 0x94, 0x3f, 0xb3, 0x62, 0x1b, 0xfc,
	0xf3, 0x71, 0x71, 0x23, 0x28, 0xbe, 0xd0, 0xb8, 0xe8, 0xac, 0xb9, 0x18, 0xeb, 0xa3, 0x66, 0x49,
	0x8c, 0xd5, 0x51, 0x2e, 0xc6, 0x6c, 0xd5, 0x2a, 0xcd, 0xca, 0x56, 0x76, 0x24, 0xb6, 0x95, 0x9d,
	0xf9, 0xd0, 0x89, 0xa0, 0xad, 0xec, 0x6a, 0x74, 0x76, 0xdf, 0xa7, 0x12, 0x80, 0xcb, 0x2a, 0x81,
	0x4e, 0xbd, 0x12, 0xb8, 0x03, 0xdd, 0x59, 0xa0, 0x2b, 0x12, 0xf3, 0x2d, 0x82, 0xbe, 0x80, 0x76,
	0x08, 0xa3, 0xcf, 0x10, 0x78, 0x3d, 0xfc, 0x66, 0x4c, 0xf7, 0x45, 0xa6, 0x46, 0x74, 0x67, 0xc1,
	0x9b, 0x27, 0x08, 0x68, 0x31, 0x56, 0x5b, 0xd4, 0x9f, 0xee, 0xc3, 0x5c, 0x8d, 0x50, 0xef, 0xfb,
	0xe0, 0x24, 0xf8, 0x57, 0xc7, 0x26, 0xe6, 0x15, 0x2f, 0xcf, 0x2b, 0xc8, 0x09, 0x5d, 0x93, 0xf9,
	0xa4, 0xa0, 0xdd, 0x44, 0xb2, 0x34, 0xa6, 0x08, 0x42, 0xa3, 0xd1, 0xef, 0x14, 0xfd, 0x1c, 0xa6,
	0x21, 0x97, 0x26, 0xf7, 0xed, 0xcb, 0x92, 0xbb, 0xb7, 0x2a, 0xb9, 0xef, 0xbc, 0xf3, 0x21, 0x6e,
	0x77, 0xf9, 0xc5, 0xd5, 0xb5, 0xab, 0xe5, 0xfd, 0xbd, 0xcb, 0xea, 0xe5, 0xfd, 0x55, 0xf5, 0xf2,
	0xef, 0x1a, 0xe0, 0xe6, 0xdb, 0xf9, 0x36, 0xe7, 0xba, 0x15, 0x8e, 0x36, 0xb4, 0x9c, 0xad, 0x95,
	0xd0, 0xa1, 0x1d, 0x7f, 0x14, 0x79, 0x1f, 0xc3, 0x66, 0x49, 0xa7, 0xf4, 0xcd, 0xb7, 0x97, 0x6b,
	0xd9, 0x83, 0x0f, 0xe9, 0xe1, 0x65, 0x94, 0x53, 0x72, 0x0f, 0x5f, 0xc4, 0x75, 0xef, 0x69, 0xd6,
	0xbd, 0xa7, 0xe6, 0x18, 0xad, 0xab, 0xfe, 0x6e, 0x52, 0xba, 0x20, 0x6b, 0xd7, 0x2f, 0xc8, 0x06,
	0xd0, 0x52, 0x71, 0x70, 0xc6, 0xc4, 0x89, 0xfd, 0xa4, 0x64, 0x9a, 0x1f, 0xe6, 0x1f, 0x83, 0xa5,
	0x36, 0xef, 0x5e, 0xf0, 0x97, 0xcf, 0x8f, 0x0d, 0xe8, 0x1f, 0x57, 0x82, 0x95, 0xae, 0x59, 0xea,
	0xe1, 0x0d, 0x77, 0x9d, 0x4c, 0xeb, 0x55, 0x43, 0x1b, 0x6e, 0xfd, 0x92, 0x1e, 0xa5, 0x1f, 0xdb,
	0x6a, 0x3d, 0x70, 0xbb, 0x1f, 0xc1, 0xb5, 0x7a, 0x8f, 0xb3, 0x20, 0x9e, 0xdb, 0x60, 0xbb, 0x53,
	0xed, 0xf2, 0x52, 0x8b, 0x6a, 0x16, 0xdc, 0xa8, 0x5b, 0xf0, 0x36, 0x74, 0xb8, 0x1a, 0x4b, 0x16,
	0x44, 0x22, 0x89, 0x17, 0xb6, 0x7a, 0xe3, 0xca, 0x37, 0x08, 0xfe, 0xf6, 0xa5, 0x70, 0x3f, 0x78,
	0x68, 0xa2, 0x6b, 0x9b, 0xab, 0xe7, 0xd8, 0xd6, 0x24, 0x15, 0x69, 0x56, 0x3e, 0x35, 0xb4, 0x44,
	0x4a, 0x37, 0x92, 0xf7, 0xa0, 0x5f, 0x5b, 0x57, 0xdb, 0xdc, 0x1a, 0x55, 0x96, 0x84, 0x37, 0x43,
	0x26, 0x97, 0xd9, 0x10, 0xec, 0xda, 0x9b, 0x21, 0xc2, 0x6d, 0x14, 0xbe, 0x0d, 0x1d, 0x5c, 0xed,
	0x58, 0x06, 0xc9, 0xd4, 0x7e, 0x4a, 0x04, 0x84, 0x7c, 0x8d, 0x0c, 0xff, 0xb4, 0x0e, 0x3b, 0xc7,
	0xe7, 0x53, 0xc8, 0xca, 0xcc, 0xb3, 0xb6, 0x2a, 0xf3, 0x7c, 0x09, 0x87, 0xcb, 0x3b, 0x96, 0x7e,
	0xd6, 0xda, 0x5f, 0xd2, 0xb5, 0xea, 0x59, 0xa5, 0x9f, 0xb6, 0x2e, 0x76, 0x9d, 0x9f, 0xfb, 0x62,
	0xa5, 0x9a, 0x53, 0x9a, 0x4b, 0xbe, 0x27, 0x72, 0x35, 0x36, 0x17, 0xa5, 0xc5, 0xe7, 0xc6, 0x7f,
	0x25, 0xc0, 0x7b, 0x08, 0xae, 0xdd, 0x7d, 0x35, 0x68, 0xd7, 0x7e, 0x4a, 0xca, 0x7f, 0xda, 0x2b,
	0x74, 0x26, 0x4d, 0x9c, 0xf0, 0x67, 0x7f, 0x09, 0x00, 0x00, 0xff, 0xff, 0x53, 0xd6, 0xd7, 0x2e,
	0x91, 0x2c, 0x00, 0x00,
}
