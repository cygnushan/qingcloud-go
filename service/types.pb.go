// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Tag struct {
	Color             string                      `protobuf:"bytes,1,opt,name=color" json:"color,omitempty"`
	CreateTime        *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description       string                      `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Owner             string                      `protobuf:"bytes,4,opt,name=owner" json:"owner,omitempty"`
	ResourceCount     int32                       `protobuf:"varint,5,opt,name=resource_count,json=resourceCount" json:"resource_count,omitempty"`
	ResourceTagPairs  []*ResourceTagPair          `protobuf:"bytes,6,rep,name=resource_tag_pairs,json=resourceTagPairs" json:"resource_tag_pairs,omitempty"`
	ResourceTypeCount []*ResourceTypeCount        `protobuf:"bytes,7,rep,name=resource_type_count,json=resourceTypeCount" json:"resource_type_count,omitempty"`
	TagId             string                      `protobuf:"bytes,8,opt,name=tag_id,json=tagId" json:"tag_id,omitempty"`
	TagKey            string                      `protobuf:"bytes,9,opt,name=tag_key,json=tagKey" json:"tag_key,omitempty"`
	TagName           string                      `protobuf:"bytes,10,opt,name=tag_name,json=tagName" json:"tag_name,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{0} }

func (m *Tag) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *Tag) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Tag) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Tag) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Tag) GetResourceCount() int32 {
	if m != nil {
		return m.ResourceCount
	}
	return 0
}

func (m *Tag) GetResourceTagPairs() []*ResourceTagPair {
	if m != nil {
		return m.ResourceTagPairs
	}
	return nil
}

func (m *Tag) GetResourceTypeCount() []*ResourceTypeCount {
	if m != nil {
		return m.ResourceTypeCount
	}
	return nil
}

func (m *Tag) GetTagId() string {
	if m != nil {
		return m.TagId
	}
	return ""
}

func (m *Tag) GetTagKey() string {
	if m != nil {
		return m.TagKey
	}
	return ""
}

func (m *Tag) GetTagName() string {
	if m != nil {
		return m.TagName
	}
	return ""
}

type ResourceTagPair struct {
	ResourceId   string                      `protobuf:"bytes,1,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	ResourceType string                      `protobuf:"bytes,2,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
	Status       string                      `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	StatusTime   *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	TagId        string                      `protobuf:"bytes,5,opt,name=tag_id,json=tagId" json:"tag_id,omitempty"`
}

func (m *ResourceTagPair) Reset()                    { *m = ResourceTagPair{} }
func (m *ResourceTagPair) String() string            { return proto.CompactTextString(m) }
func (*ResourceTagPair) ProtoMessage()               {}
func (*ResourceTagPair) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{1} }

func (m *ResourceTagPair) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *ResourceTagPair) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *ResourceTagPair) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ResourceTagPair) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *ResourceTagPair) GetTagId() string {
	if m != nil {
		return m.TagId
	}
	return ""
}

type ResourceTypeCount struct {
	Count        int32  `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	ResourceType string `protobuf:"bytes,2,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
}

func (m *ResourceTypeCount) Reset()                    { *m = ResourceTypeCount{} }
func (m *ResourceTypeCount) String() string            { return proto.CompactTextString(m) }
func (*ResourceTypeCount) ProtoMessage()               {}
func (*ResourceTypeCount) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{2} }

func (m *ResourceTypeCount) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ResourceTypeCount) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

type EIP struct {
	AlarmStatus      string                      `protobuf:"bytes,1,opt,name=alarm_status,json=alarmStatus" json:"alarm_status,omitempty"`
	AssociateMode    int32                       `protobuf:"varint,2,opt,name=associate_mode,json=associateMode" json:"associate_mode,omitempty"`
	Bandwidth        int32                       `protobuf:"varint,3,opt,name=bandwidth" json:"bandwidth,omitempty"`
	BillingMode      string                      `protobuf:"bytes,4,opt,name=billing_mode,json=billingMode" json:"billing_mode,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description      string                      `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	EipAddr          string                      `protobuf:"bytes,7,opt,name=eip_addr,json=eipAddr" json:"eip_addr,omitempty"`
	EipGroup         string                      `protobuf:"bytes,8,opt,name=eip_group,json=eipGroup" json:"eip_group,omitempty"`
	EipId            string                      `protobuf:"bytes,9,opt,name=eip_id,json=eipId" json:"eip_id,omitempty"`
	EipName          string                      `protobuf:"bytes,10,opt,name=eip_name,json=eipName" json:"eip_name,omitempty"`
	IcpCodes         string                      `protobuf:"bytes,11,opt,name=icp_codes,json=icpCodes" json:"icp_codes,omitempty"`
	NeedIcp          int32                       `protobuf:"varint,12,opt,name=need_icp,json=needIcp" json:"need_icp,omitempty"`
	Resource         *Resource                   `protobuf:"bytes,13,opt,name=resource" json:"resource,omitempty"`
	Status           string                      `protobuf:"bytes,14,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,15,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SubCode          int32                       `protobuf:"varint,16,opt,name=sub_code,json=subCode" json:"sub_code,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,17,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,18,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
}

func (m *EIP) Reset()                    { *m = EIP{} }
func (m *EIP) String() string            { return proto.CompactTextString(m) }
func (*EIP) ProtoMessage()               {}
func (*EIP) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{3} }

func (m *EIP) GetAlarmStatus() string {
	if m != nil {
		return m.AlarmStatus
	}
	return ""
}

func (m *EIP) GetAssociateMode() int32 {
	if m != nil {
		return m.AssociateMode
	}
	return 0
}

func (m *EIP) GetBandwidth() int32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *EIP) GetBillingMode() string {
	if m != nil {
		return m.BillingMode
	}
	return ""
}

func (m *EIP) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *EIP) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *EIP) GetEipAddr() string {
	if m != nil {
		return m.EipAddr
	}
	return ""
}

func (m *EIP) GetEipGroup() string {
	if m != nil {
		return m.EipGroup
	}
	return ""
}

func (m *EIP) GetEipId() string {
	if m != nil {
		return m.EipId
	}
	return ""
}

func (m *EIP) GetEipName() string {
	if m != nil {
		return m.EipName
	}
	return ""
}

func (m *EIP) GetIcpCodes() string {
	if m != nil {
		return m.IcpCodes
	}
	return ""
}

func (m *EIP) GetNeedIcp() int32 {
	if m != nil {
		return m.NeedIcp
	}
	return 0
}

func (m *EIP) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *EIP) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *EIP) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *EIP) GetSubCode() int32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *EIP) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *EIP) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

type Resource struct {
	ResourceId   string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	ResourceName string `protobuf:"bytes,2,opt,name=resource_name,json=resourceName" json:"resource_name,omitempty"`
	ResourceType string `protobuf:"bytes,3,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
}

func (m *Resource) Reset()                    { *m = Resource{} }
func (m *Resource) String() string            { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()               {}
func (*Resource) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{4} }

func (m *Resource) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *Resource) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *Resource) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

type Job struct {
	CreateTime  *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	JobAction   string                      `protobuf:"bytes,2,opt,name=job_action,json=jobAction" json:"job_action,omitempty"`
	JobId       string                      `protobuf:"bytes,3,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	Owner       string                      `protobuf:"bytes,4,opt,name=owner" json:"owner,omitempty"`
	ResourceIds string                      `protobuf:"bytes,5,opt,name=resource_ids,json=resourceIds" json:"resource_ids,omitempty"`
	Status      string                      `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	StatusTime  *google_protobuf1.Timestamp `protobuf:"bytes,7,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{5} }

func (m *Job) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Job) GetJobAction() string {
	if m != nil {
		return m.JobAction
	}
	return ""
}

func (m *Job) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *Job) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Job) GetResourceIds() string {
	if m != nil {
		return m.ResourceIds
	}
	return ""
}

func (m *Job) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Job) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type Volume struct {
	CreateTime         *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description        string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Device             string                      `protobuf:"bytes,3,opt,name=device" json:"device,omitempty"`
	Instance           *Instance                   `protobuf:"bytes,4,opt,name=instance" json:"instance,omitempty"`
	Instances          []*Instance                 `protobuf:"bytes,5,rep,name=instances" json:"instances,omitempty"`
	LatestSnapshotTime *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=latest_snapshot_time,json=latestSnapshotTime" json:"latest_snapshot_time,omitempty"`
	Owner              string                      `protobuf:"bytes,7,opt,name=owner" json:"owner,omitempty"`
	PlaceGroupId       string                      `protobuf:"bytes,8,opt,name=place_group_id,json=placeGroupId" json:"place_group_id,omitempty"`
	Size               int32                       `protobuf:"varint,9,opt,name=size" json:"size,omitempty"`
	Status             string                      `protobuf:"bytes,10,opt,name=status" json:"status,omitempty"`
	StatusTime         *google_protobuf1.Timestamp `protobuf:"bytes,11,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SubCode            int32                       `protobuf:"varint,12,opt,name=sub_code,json=subCode" json:"sub_code,omitempty"`
	Tags               []*Tag                      `protobuf:"bytes,13,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus   string                      `protobuf:"bytes,14,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	VolumeId           string                      `protobuf:"bytes,15,opt,name=volume_id,json=volumeId" json:"volume_id,omitempty"`
	VolumeName         string                      `protobuf:"bytes,16,opt,name=volume_name,json=volumeName" json:"volume_name,omitempty"`
	VolumeType         int32                       `protobuf:"varint,17,opt,name=volume_type,json=volumeType" json:"volume_type,omitempty"`
}

func (m *Volume) Reset()                    { *m = Volume{} }
func (m *Volume) String() string            { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()               {}
func (*Volume) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{6} }

func (m *Volume) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Volume) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Volume) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *Volume) GetInstance() *Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *Volume) GetInstances() []*Instance {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *Volume) GetLatestSnapshotTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.LatestSnapshotTime
	}
	return nil
}

func (m *Volume) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Volume) GetPlaceGroupId() string {
	if m != nil {
		return m.PlaceGroupId
	}
	return ""
}

func (m *Volume) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Volume) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Volume) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Volume) GetSubCode() int32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *Volume) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Volume) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Volume) GetVolumeId() string {
	if m != nil {
		return m.VolumeId
	}
	return ""
}

func (m *Volume) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

func (m *Volume) GetVolumeType() int32 {
	if m != nil {
		return m.VolumeType
	}
	return 0
}

type NIC struct {
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	InstanceId       string                      `protobuf:"bytes,2,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	NicId            string                      `protobuf:"bytes,3,opt,name=nic_id,json=nicId" json:"nic_id,omitempty"`
	NicName          string                      `protobuf:"bytes,4,opt,name=nic_name,json=nicName" json:"nic_name,omitempty"`
	Owner            string                      `protobuf:"bytes,5,opt,name=owner" json:"owner,omitempty"`
	PrivateIp        string                      `protobuf:"bytes,6,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	Role             int32                       `protobuf:"varint,7,opt,name=role" json:"role,omitempty"`
	RootUserId       string                      `protobuf:"bytes,8,opt,name=root_user_id,json=rootUserId" json:"root_user_id,omitempty"`
	SecurityGroup    string                      `protobuf:"bytes,9,opt,name=security_group,json=securityGroup" json:"security_group,omitempty"`
	Sequence         int32                       `protobuf:"varint,10,opt,name=sequence" json:"sequence,omitempty"`
	Status           string                      `protobuf:"bytes,11,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,12,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,13,rep,name=tags" json:"tags,omitempty"`
	VxnetId          string                      `protobuf:"bytes,14,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
	Eip              *EIP                        `protobuf:"bytes,15,opt,name=eip" json:"eip,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,16,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	Controller       string                      `protobuf:"bytes,17,opt,name=controller" json:"controller,omitempty"`
	VxnetType        int32                       `protobuf:"varint,18,opt,name=vxnet_type,json=vxnetType" json:"vxnet_type,omitempty"`
	ConsoleId        string                      `protobuf:"bytes,19,opt,name=console_id,json=consoleId" json:"console_id,omitempty"`
	ResourceId       string                      `protobuf:"bytes,20,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
}

func (m *NIC) Reset()                    { *m = NIC{} }
func (m *NIC) String() string            { return proto.CompactTextString(m) }
func (*NIC) ProtoMessage()               {}
func (*NIC) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{7} }

func (m *NIC) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *NIC) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *NIC) GetNicId() string {
	if m != nil {
		return m.NicId
	}
	return ""
}

func (m *NIC) GetNicName() string {
	if m != nil {
		return m.NicName
	}
	return ""
}

func (m *NIC) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *NIC) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *NIC) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *NIC) GetRootUserId() string {
	if m != nil {
		return m.RootUserId
	}
	return ""
}

func (m *NIC) GetSecurityGroup() string {
	if m != nil {
		return m.SecurityGroup
	}
	return ""
}

func (m *NIC) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *NIC) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *NIC) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *NIC) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *NIC) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

func (m *NIC) GetEip() *EIP {
	if m != nil {
		return m.Eip
	}
	return nil
}

func (m *NIC) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *NIC) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *NIC) GetVxnetType() int32 {
	if m != nil {
		return m.VxnetType
	}
	return 0
}

func (m *NIC) GetConsoleId() string {
	if m != nil {
		return m.ConsoleId
	}
	return ""
}

func (m *NIC) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

type KeyPair struct {
	Description   string   `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	EncryptMethod string   `protobuf:"bytes,2,opt,name=encrypt_method,json=encryptMethod" json:"encrypt_method,omitempty"`
	InstanceIds   []string `protobuf:"bytes,3,rep,name=instance_ids,json=instanceIds" json:"instance_ids,omitempty"`
	KeypairId     string   `protobuf:"bytes,4,opt,name=keypair_id,json=keypairId" json:"keypair_id,omitempty"`
	KeypairName   string   `protobuf:"bytes,5,opt,name=keypair_name,json=keypairName" json:"keypair_name,omitempty"`
	PubKey        string   `protobuf:"bytes,6,opt,name=pub_key,json=pubKey" json:"pub_key,omitempty"`
	Tags          []*Tag   `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
}

func (m *KeyPair) Reset()                    { *m = KeyPair{} }
func (m *KeyPair) String() string            { return proto.CompactTextString(m) }
func (*KeyPair) ProtoMessage()               {}
func (*KeyPair) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{8} }

func (m *KeyPair) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *KeyPair) GetEncryptMethod() string {
	if m != nil {
		return m.EncryptMethod
	}
	return ""
}

func (m *KeyPair) GetInstanceIds() []string {
	if m != nil {
		return m.InstanceIds
	}
	return nil
}

func (m *KeyPair) GetKeypairId() string {
	if m != nil {
		return m.KeypairId
	}
	return ""
}

func (m *KeyPair) GetKeypairName() string {
	if m != nil {
		return m.KeypairName
	}
	return ""
}

func (m *KeyPair) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

func (m *KeyPair) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type VxNet struct {
	AvailableIpCount int32                       `protobuf:"varint,1,opt,name=available_ip_count,json=availableIpCount" json:"available_ip_count,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description      string                      `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	InstanceIds      []string                    `protobuf:"bytes,4,rep,name=instance_ids,json=instanceIds" json:"instance_ids,omitempty"`
	Owner            string                      `protobuf:"bytes,5,opt,name=owner" json:"owner,omitempty"`
	Router           *Router                     `protobuf:"bytes,6,opt,name=router" json:"router,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
	VpcRouterId      string                      `protobuf:"bytes,8,opt,name=vpc_router_id,json=vpcRouterId" json:"vpc_router_id,omitempty"`
	VxnetId          string                      `protobuf:"bytes,9,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
	VxnetName        string                      `protobuf:"bytes,10,opt,name=vxnet_name,json=vxnetName" json:"vxnet_name,omitempty"`
	VxnetType        int32                       `protobuf:"varint,11,opt,name=vxnet_type,json=vxnetType" json:"vxnet_type,omitempty"`
}

func (m *VxNet) Reset()                    { *m = VxNet{} }
func (m *VxNet) String() string            { return proto.CompactTextString(m) }
func (*VxNet) ProtoMessage()               {}
func (*VxNet) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{9} }

func (m *VxNet) GetAvailableIpCount() int32 {
	if m != nil {
		return m.AvailableIpCount
	}
	return 0
}

func (m *VxNet) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *VxNet) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *VxNet) GetInstanceIds() []string {
	if m != nil {
		return m.InstanceIds
	}
	return nil
}

func (m *VxNet) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *VxNet) GetRouter() *Router {
	if m != nil {
		return m.Router
	}
	return nil
}

func (m *VxNet) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *VxNet) GetVpcRouterId() string {
	if m != nil {
		return m.VpcRouterId
	}
	return ""
}

func (m *VxNet) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

func (m *VxNet) GetVxnetName() string {
	if m != nil {
		return m.VxnetName
	}
	return ""
}

func (m *VxNet) GetVxnetType() int32 {
	if m != nil {
		return m.VxnetType
	}
	return 0
}

type Router struct {
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description      string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	DynIpEnd         string                      `protobuf:"bytes,3,opt,name=dyn_ip_end,json=dynIpEnd" json:"dyn_ip_end,omitempty"`
	DynIpStart       string                      `protobuf:"bytes,4,opt,name=dyn_ip_start,json=dynIpStart" json:"dyn_ip_start,omitempty"`
	Eip              *EIP                        `protobuf:"bytes,5,opt,name=eip" json:"eip,omitempty"`
	IpNetwork        string                      `protobuf:"bytes,6,opt,name=ip_network,json=ipNetwork" json:"ip_network,omitempty"`
	IsApplied        int32                       `protobuf:"varint,7,opt,name=is_applied,json=isApplied" json:"is_applied,omitempty"`
	ManagerIp        string                      `protobuf:"bytes,8,opt,name=manager_ip,json=managerIp" json:"manager_ip,omitempty"`
	Mode             int32                       `protobuf:"varint,9,opt,name=mode" json:"mode,omitempty"`
	PrivateIp        string                      `protobuf:"bytes,10,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	RouterId         string                      `protobuf:"bytes,11,opt,name=router_id,json=routerId" json:"router_id,omitempty"`
	RouterName       string                      `protobuf:"bytes,12,opt,name=router_name,json=routerName" json:"router_name,omitempty"`
	RouterType       int32                       `protobuf:"varint,13,opt,name=router_type,json=routerType" json:"router_type,omitempty"`
	SecurityGroupId  string                      `protobuf:"bytes,14,opt,name=security_group_id,json=securityGroupId" json:"security_group_id,omitempty"`
	Status           string                      `protobuf:"bytes,15,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,16,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,17,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,18,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	Vxnets           []*VxNet                    `protobuf:"bytes,19,rep,name=vxnets" json:"vxnets,omitempty"`
}

func (m *Router) Reset()                    { *m = Router{} }
func (m *Router) String() string            { return proto.CompactTextString(m) }
func (*Router) ProtoMessage()               {}
func (*Router) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{10} }

func (m *Router) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Router) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Router) GetDynIpEnd() string {
	if m != nil {
		return m.DynIpEnd
	}
	return ""
}

func (m *Router) GetDynIpStart() string {
	if m != nil {
		return m.DynIpStart
	}
	return ""
}

func (m *Router) GetEip() *EIP {
	if m != nil {
		return m.Eip
	}
	return nil
}

func (m *Router) GetIpNetwork() string {
	if m != nil {
		return m.IpNetwork
	}
	return ""
}

func (m *Router) GetIsApplied() int32 {
	if m != nil {
		return m.IsApplied
	}
	return 0
}

func (m *Router) GetManagerIp() string {
	if m != nil {
		return m.ManagerIp
	}
	return ""
}

func (m *Router) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *Router) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *Router) GetRouterId() string {
	if m != nil {
		return m.RouterId
	}
	return ""
}

func (m *Router) GetRouterName() string {
	if m != nil {
		return m.RouterName
	}
	return ""
}

func (m *Router) GetRouterType() int32 {
	if m != nil {
		return m.RouterType
	}
	return 0
}

func (m *Router) GetSecurityGroupId() string {
	if m != nil {
		return m.SecurityGroupId
	}
	return ""
}

func (m *Router) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Router) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Router) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Router) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Router) GetVxnets() []*VxNet {
	if m != nil {
		return m.Vxnets
	}
	return nil
}

type Instance struct {
	AlarmStatus string                      `protobuf:"bytes,1,opt,name=alarm_status,json=alarmStatus" json:"alarm_status,omitempty"`
	CpuTopology string                      `protobuf:"bytes,2,opt,name=cpu_topology,json=cpuTopology" json:"cpu_topology,omitempty"`
	CreateTime  *google_protobuf1.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description string                      `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Device      string                      `protobuf:"bytes,5,opt,name=device" json:"device,omitempty"`
	// DHCPOptions      *DHCPOption    `json:"dhcp_options" name:"dhcp_options"`
	// DNSAliases       []*DNSAlias    `json:"dns_aliases" name:"dns_aliases"`
	Eip *EIP `protobuf:"bytes,8,opt,name=eip" json:"eip,omitempty"`
	// Extra            *Extra         `json:"extra" name:"extra"`
	GraphicsPasswd   string   `protobuf:"bytes,10,opt,name=graphics_passwd,json=graphicsPasswd" json:"graphics_passwd,omitempty"`
	GraphicsProtocol string   `protobuf:"bytes,11,opt,name=graphics_protocol,json=graphicsProtocol" json:"graphics_protocol,omitempty"`
	Image            *Image   `protobuf:"bytes,12,opt,name=image" json:"image,omitempty"`
	ImageId          string   `protobuf:"bytes,13,opt,name=image_id,json=imageId" json:"image_id,omitempty"`
	InstanceClass    int32    `protobuf:"varint,14,opt,name=instance_class,json=instanceClass" json:"instance_class,omitempty"`
	InstanceId       string   `protobuf:"bytes,15,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	InstanceName     string   `protobuf:"bytes,16,opt,name=instance_name,json=instanceName" json:"instance_name,omitempty"`
	InstanceType     string   `protobuf:"bytes,17,opt,name=instance_type,json=instanceType" json:"instance_type,omitempty"`
	KeypairIds       []string `protobuf:"bytes,18,rep,name=keypair_ids,json=keypairIds" json:"keypair_ids,omitempty"`
	MemoryCurrent    int32    `protobuf:"varint,19,opt,name=memory_current,json=memoryCurrent" json:"memory_current,omitempty"`
	PrivateIp        string   `protobuf:"bytes,20,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	// SecurityGroup    *SecurityGroup `json:"security_group" name:"security_group"`
	Status           string                      `protobuf:"bytes,22,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,23,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SubCode          int32                       `protobuf:"varint,24,opt,name=sub_code,json=subCode" json:"sub_code,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,25,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,26,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	VcpusCurrent     int32                       `protobuf:"varint,27,opt,name=vcpus_current,json=vcpusCurrent" json:"vcpus_current,omitempty"`
	VolumeIds        []string                    `protobuf:"bytes,28,rep,name=volume_ids,json=volumeIds" json:"volume_ids,omitempty"`
	Volumes          []*Volume                   `protobuf:"bytes,29,rep,name=volumes" json:"volumes,omitempty"`
	Vxnets           []*InstanceVxNet            `protobuf:"bytes,30,rep,name=vxnets" json:"vxnets,omitempty"`
}

func (m *Instance) Reset()                    { *m = Instance{} }
func (m *Instance) String() string            { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()               {}
func (*Instance) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{11} }

func (m *Instance) GetAlarmStatus() string {
	if m != nil {
		return m.AlarmStatus
	}
	return ""
}

func (m *Instance) GetCpuTopology() string {
	if m != nil {
		return m.CpuTopology
	}
	return ""
}

func (m *Instance) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Instance) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Instance) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *Instance) GetEip() *EIP {
	if m != nil {
		return m.Eip
	}
	return nil
}

func (m *Instance) GetGraphicsPasswd() string {
	if m != nil {
		return m.GraphicsPasswd
	}
	return ""
}

func (m *Instance) GetGraphicsProtocol() string {
	if m != nil {
		return m.GraphicsProtocol
	}
	return ""
}

func (m *Instance) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *Instance) GetImageId() string {
	if m != nil {
		return m.ImageId
	}
	return ""
}

func (m *Instance) GetInstanceClass() int32 {
	if m != nil {
		return m.InstanceClass
	}
	return 0
}

func (m *Instance) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *Instance) GetInstanceName() string {
	if m != nil {
		return m.InstanceName
	}
	return ""
}

func (m *Instance) GetInstanceType() string {
	if m != nil {
		return m.InstanceType
	}
	return ""
}

func (m *Instance) GetKeypairIds() []string {
	if m != nil {
		return m.KeypairIds
	}
	return nil
}

func (m *Instance) GetMemoryCurrent() int32 {
	if m != nil {
		return m.MemoryCurrent
	}
	return 0
}

func (m *Instance) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *Instance) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Instance) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Instance) GetSubCode() int32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *Instance) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Instance) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Instance) GetVcpusCurrent() int32 {
	if m != nil {
		return m.VcpusCurrent
	}
	return 0
}

func (m *Instance) GetVolumeIds() []string {
	if m != nil {
		return m.VolumeIds
	}
	return nil
}

func (m *Instance) GetVolumes() []*Volume {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *Instance) GetVxnets() []*InstanceVxNet {
	if m != nil {
		return m.Vxnets
	}
	return nil
}

type InstanceVxNet struct {
	NicId     string `protobuf:"bytes,1,opt,name=nic_id,json=nicId" json:"nic_id,omitempty"`
	PrivateIp string `protobuf:"bytes,2,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	Role      int32  `protobuf:"varint,3,opt,name=role" json:"role,omitempty"`
	VxnetId   string `protobuf:"bytes,4,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
	VxnetName string `protobuf:"bytes,5,opt,name=vxnet_name,json=vxnetName" json:"vxnet_name,omitempty"`
	VxnetType int32  `protobuf:"varint,6,opt,name=vxnet_type,json=vxnetType" json:"vxnet_type,omitempty"`
}

func (m *InstanceVxNet) Reset()                    { *m = InstanceVxNet{} }
func (m *InstanceVxNet) String() string            { return proto.CompactTextString(m) }
func (*InstanceVxNet) ProtoMessage()               {}
func (*InstanceVxNet) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{12} }

func (m *InstanceVxNet) GetNicId() string {
	if m != nil {
		return m.NicId
	}
	return ""
}

func (m *InstanceVxNet) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *InstanceVxNet) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *InstanceVxNet) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

func (m *InstanceVxNet) GetVxnetName() string {
	if m != nil {
		return m.VxnetName
	}
	return ""
}

func (m *InstanceVxNet) GetVxnetType() int32 {
	if m != nil {
		return m.VxnetType
	}
	return 0
}

type Image struct {
	AppBillingId     string                      `protobuf:"bytes,1,opt,name=app_billing_id,json=appBillingId" json:"app_billing_id,omitempty"`
	Architecture     string                      `protobuf:"bytes,2,opt,name=architecture" json:"architecture,omitempty"`
	BillingId        string                      `protobuf:"bytes,3,opt,name=billing_id,json=billingId" json:"billing_id,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	DefaultPasswd    string                      `protobuf:"bytes,5,opt,name=default_passwd,json=defaultPasswd" json:"default_passwd,omitempty"`
	DefaultUser      string                      `protobuf:"bytes,6,opt,name=default_user,json=defaultUser" json:"default_user,omitempty"`
	Description      string                      `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	FResetpwd        int32                       `protobuf:"varint,8,opt,name=f_resetpwd,json=fResetpwd" json:"f_resetpwd,omitempty"`
	Feature          int32                       `protobuf:"varint,9,opt,name=feature" json:"feature,omitempty"`
	Features         int32                       `protobuf:"varint,10,opt,name=features" json:"features,omitempty"`
	Hypervisor       string                      `protobuf:"bytes,11,opt,name=hypervisor" json:"hypervisor,omitempty"`
	ImageId          string                      `protobuf:"bytes,12,opt,name=image_id,json=imageId" json:"image_id,omitempty"`
	ImageName        string                      `protobuf:"bytes,13,opt,name=image_name,json=imageName" json:"image_name,omitempty"`
	InstanceIds      []string                    `protobuf:"bytes,14,rep,name=instance_ids,json=instanceIds" json:"instance_ids,omitempty"`
	OsFamily         string                      `protobuf:"bytes,15,opt,name=os_family,json=osFamily" json:"os_family,omitempty"`
	Owner            string                      `protobuf:"bytes,16,opt,name=owner" json:"owner,omitempty"`
	Platform         string                      `protobuf:"bytes,17,opt,name=platform" json:"platform,omitempty"`
	ProcessorType    string                      `protobuf:"bytes,18,opt,name=processor_type,json=processorType" json:"processor_type,omitempty"`
	Provider         string                      `protobuf:"bytes,19,opt,name=provider" json:"provider,omitempty"`
	RecommendedType  string                      `protobuf:"bytes,20,opt,name=recommended_type,json=recommendedType" json:"recommended_type,omitempty"`
	RootId           string                      `protobuf:"bytes,21,opt,name=root_id,json=rootId" json:"root_id,omitempty"`
	Size             int32                       `protobuf:"varint,22,opt,name=size" json:"size,omitempty"`
	Status           string                      `protobuf:"bytes,23,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,24,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SubCode          int32                       `protobuf:"varint,25,opt,name=sub_code,json=subCode" json:"sub_code,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,26,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	UiType           string                      `protobuf:"bytes,27,opt,name=ui_type,json=uiType" json:"ui_type,omitempty"`
	Visibility       string                      `protobuf:"bytes,28,opt,name=visibility" json:"visibility,omitempty"`
}

func (m *Image) Reset()                    { *m = Image{} }
func (m *Image) String() string            { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()               {}
func (*Image) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{13} }

func (m *Image) GetAppBillingId() string {
	if m != nil {
		return m.AppBillingId
	}
	return ""
}

func (m *Image) GetArchitecture() string {
	if m != nil {
		return m.Architecture
	}
	return ""
}

func (m *Image) GetBillingId() string {
	if m != nil {
		return m.BillingId
	}
	return ""
}

func (m *Image) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Image) GetDefaultPasswd() string {
	if m != nil {
		return m.DefaultPasswd
	}
	return ""
}

func (m *Image) GetDefaultUser() string {
	if m != nil {
		return m.DefaultUser
	}
	return ""
}

func (m *Image) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Image) GetFResetpwd() int32 {
	if m != nil {
		return m.FResetpwd
	}
	return 0
}

func (m *Image) GetFeature() int32 {
	if m != nil {
		return m.Feature
	}
	return 0
}

func (m *Image) GetFeatures() int32 {
	if m != nil {
		return m.Features
	}
	return 0
}

func (m *Image) GetHypervisor() string {
	if m != nil {
		return m.Hypervisor
	}
	return ""
}

func (m *Image) GetImageId() string {
	if m != nil {
		return m.ImageId
	}
	return ""
}

func (m *Image) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *Image) GetInstanceIds() []string {
	if m != nil {
		return m.InstanceIds
	}
	return nil
}

func (m *Image) GetOsFamily() string {
	if m != nil {
		return m.OsFamily
	}
	return ""
}

func (m *Image) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Image) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *Image) GetProcessorType() string {
	if m != nil {
		return m.ProcessorType
	}
	return ""
}

func (m *Image) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *Image) GetRecommendedType() string {
	if m != nil {
		return m.RecommendedType
	}
	return ""
}

func (m *Image) GetRootId() string {
	if m != nil {
		return m.RootId
	}
	return ""
}

func (m *Image) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Image) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Image) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Image) GetSubCode() int32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *Image) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Image) GetUiType() string {
	if m != nil {
		return m.UiType
	}
	return ""
}

func (m *Image) GetVisibility() string {
	if m != nil {
		return m.Visibility
	}
	return ""
}

type ImageUser struct {
	CreateTime *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	ImageId    string                      `protobuf:"bytes,2,opt,name=image_id,json=imageId" json:"image_id,omitempty"`
	User       string                      `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
}

func (m *ImageUser) Reset()                    { *m = ImageUser{} }
func (m *ImageUser) String() string            { return proto.CompactTextString(m) }
func (*ImageUser) ProtoMessage()               {}
func (*ImageUser) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{14} }

func (m *ImageUser) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *ImageUser) GetImageId() string {
	if m != nil {
		return m.ImageId
	}
	return ""
}

func (m *ImageUser) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type Mongo struct {
	AlarmStatus         string                      `protobuf:"bytes,1,opt,name=alarm_status,json=alarmStatus" json:"alarm_status,omitempty"`
	AutoBackupTime      int32                       `protobuf:"varint,2,opt,name=auto_backup_time,json=autoBackupTime" json:"auto_backup_time,omitempty"`
	AutoMinorVerUpgrade int32                       `protobuf:"varint,3,opt,name=auto_minor_ver_upgrade,json=autoMinorVerUpgrade" json:"auto_minor_ver_upgrade,omitempty"`
	CreateTime          *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description         string                      `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	LatestSnapshotTime  *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=latest_snapshot_time,json=latestSnapshotTime" json:"latest_snapshot_time,omitempty"`
	MongoId             string                      `protobuf:"bytes,7,opt,name=mongo_id,json=mongoId" json:"mongo_id,omitempty"`
	MongoName           string                      `protobuf:"bytes,8,opt,name=mongo_name,json=mongoName" json:"mongo_name,omitempty"`
	MongoType           int32                       `protobuf:"varint,9,opt,name=mongo_type,json=mongoType" json:"mongo_type,omitempty"`
	MongoVersion        string                      `protobuf:"bytes,10,opt,name=mongo_version,json=mongoVersion" json:"mongo_version,omitempty"`
	Status              string                      `protobuf:"bytes,11,opt,name=status" json:"status,omitempty"`
	StatusTime          *google_protobuf1.Timestamp `protobuf:"bytes,12,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	StorageSize         int32                       `protobuf:"varint,13,opt,name=storage_size,json=storageSize" json:"storage_size,omitempty"`
	Tags                []*Tag                      `protobuf:"bytes,14,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus    string                      `protobuf:"bytes,15,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	Vxnet               *VxNet                      `protobuf:"bytes,16,opt,name=vxnet" json:"vxnet,omitempty"`
}

func (m *Mongo) Reset()                    { *m = Mongo{} }
func (m *Mongo) String() string            { return proto.CompactTextString(m) }
func (*Mongo) ProtoMessage()               {}
func (*Mongo) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{15} }

func (m *Mongo) GetAlarmStatus() string {
	if m != nil {
		return m.AlarmStatus
	}
	return ""
}

func (m *Mongo) GetAutoBackupTime() int32 {
	if m != nil {
		return m.AutoBackupTime
	}
	return 0
}

func (m *Mongo) GetAutoMinorVerUpgrade() int32 {
	if m != nil {
		return m.AutoMinorVerUpgrade
	}
	return 0
}

func (m *Mongo) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Mongo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Mongo) GetLatestSnapshotTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.LatestSnapshotTime
	}
	return nil
}

func (m *Mongo) GetMongoId() string {
	if m != nil {
		return m.MongoId
	}
	return ""
}

func (m *Mongo) GetMongoName() string {
	if m != nil {
		return m.MongoName
	}
	return ""
}

func (m *Mongo) GetMongoType() int32 {
	if m != nil {
		return m.MongoType
	}
	return 0
}

func (m *Mongo) GetMongoVersion() string {
	if m != nil {
		return m.MongoVersion
	}
	return ""
}

func (m *Mongo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Mongo) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Mongo) GetStorageSize() int32 {
	if m != nil {
		return m.StorageSize
	}
	return 0
}

func (m *Mongo) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Mongo) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Mongo) GetVxnet() *VxNet {
	if m != nil {
		return m.Vxnet
	}
	return nil
}

type MongoNode struct {
	Ip          string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	MongoId     string `protobuf:"bytes,2,opt,name=mongo_id,json=mongoId" json:"mongo_id,omitempty"`
	MongoNodeId string `protobuf:"bytes,3,opt,name=mongo_node_id,json=mongoNodeId" json:"mongo_node_id,omitempty"`
	Primary     int32  `protobuf:"varint,4,opt,name=primary" json:"primary,omitempty"`
	Status      string `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	VxnetId     string `protobuf:"bytes,6,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
}

func (m *MongoNode) Reset()                    { *m = MongoNode{} }
func (m *MongoNode) String() string            { return proto.CompactTextString(m) }
func (*MongoNode) ProtoMessage()               {}
func (*MongoNode) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{16} }

func (m *MongoNode) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *MongoNode) GetMongoId() string {
	if m != nil {
		return m.MongoId
	}
	return ""
}

func (m *MongoNode) GetMongoNodeId() string {
	if m != nil {
		return m.MongoNodeId
	}
	return ""
}

func (m *MongoNode) GetPrimary() int32 {
	if m != nil {
		return m.Primary
	}
	return 0
}

func (m *MongoNode) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MongoNode) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

type LoadBalancer struct {
	Cluster          []*EIP                      `protobuf:"bytes,1,rep,name=cluster" json:"cluster,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description      string                      `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	IsApplied        int32                       `protobuf:"varint,4,opt,name=is_applied,json=isApplied" json:"is_applied,omitempty"`
	Listeners        []*LoadBalancerListener     `protobuf:"bytes,5,rep,name=listeners" json:"listeners,omitempty"`
	LoadbalancerId   string                      `protobuf:"bytes,6,opt,name=loadbalancer_id,json=loadbalancerId" json:"loadbalancer_id,omitempty"`
	LoadbalancerName string                      `protobuf:"bytes,7,opt,name=loadbalancer_name,json=loadbalancerName" json:"loadbalancer_name,omitempty"`
	LoadbalancerType int32                       `protobuf:"varint,8,opt,name=loadbalancer_type,json=loadbalancerType" json:"loadbalancer_type,omitempty"`
	PrivateIps       []string                    `protobuf:"bytes,9,rep,name=private_ips,json=privateIps" json:"private_ips,omitempty"`
	SecurityGroupId  string                      `protobuf:"bytes,10,opt,name=security_group_id,json=securityGroupId" json:"security_group_id,omitempty"`
	Status           string                      `protobuf:"bytes,11,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,12,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,13,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,14,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	VxnetId          string                      `protobuf:"bytes,15,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
}

func (m *LoadBalancer) Reset()                    { *m = LoadBalancer{} }
func (m *LoadBalancer) String() string            { return proto.CompactTextString(m) }
func (*LoadBalancer) ProtoMessage()               {}
func (*LoadBalancer) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{17} }

func (m *LoadBalancer) GetCluster() []*EIP {
	if m != nil {
		return m.Cluster
	}
	return nil
}

func (m *LoadBalancer) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *LoadBalancer) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *LoadBalancer) GetIsApplied() int32 {
	if m != nil {
		return m.IsApplied
	}
	return 0
}

func (m *LoadBalancer) GetListeners() []*LoadBalancerListener {
	if m != nil {
		return m.Listeners
	}
	return nil
}

func (m *LoadBalancer) GetLoadbalancerId() string {
	if m != nil {
		return m.LoadbalancerId
	}
	return ""
}

func (m *LoadBalancer) GetLoadbalancerName() string {
	if m != nil {
		return m.LoadbalancerName
	}
	return ""
}

func (m *LoadBalancer) GetLoadbalancerType() int32 {
	if m != nil {
		return m.LoadbalancerType
	}
	return 0
}

func (m *LoadBalancer) GetPrivateIps() []string {
	if m != nil {
		return m.PrivateIps
	}
	return nil
}

func (m *LoadBalancer) GetSecurityGroupId() string {
	if m != nil {
		return m.SecurityGroupId
	}
	return ""
}

func (m *LoadBalancer) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *LoadBalancer) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *LoadBalancer) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *LoadBalancer) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *LoadBalancer) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

type LoadBalancerListener struct {
	BackendProtocol          string                      `protobuf:"bytes,1,opt,name=backend_protocol,json=backendProtocol" json:"backend_protocol,omitempty"`
	Backends                 []*LoadBalancerBackend      `protobuf:"bytes,2,rep,name=backends" json:"backends,omitempty"`
	BalanceMode              string                      `protobuf:"bytes,3,opt,name=balance_mode,json=balanceMode" json:"balance_mode,omitempty"`
	CreateTime               *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Forwardfor               int32                       `protobuf:"varint,5,opt,name=forwardfor" json:"forwardfor,omitempty"`
	HealthyCheckMethod       string                      `protobuf:"bytes,6,opt,name=healthy_check_method,json=healthyCheckMethod" json:"healthy_check_method,omitempty"`
	HealthyCheckOption       string                      `protobuf:"bytes,7,opt,name=healthy_check_option,json=healthyCheckOption" json:"healthy_check_option,omitempty"`
	ListenerOption           int32                       `protobuf:"varint,8,opt,name=listener_option,json=listenerOption" json:"listener_option,omitempty"`
	ListenerPort             int32                       `protobuf:"varint,9,opt,name=listener_port,json=listenerPort" json:"listener_port,omitempty"`
	ListenerProtocol         string                      `protobuf:"bytes,10,opt,name=listener_protocol,json=listenerProtocol" json:"listener_protocol,omitempty"`
	LoadbalancerId           string                      `protobuf:"bytes,11,opt,name=loadbalancer_id,json=loadbalancerId" json:"loadbalancer_id,omitempty"`
	LoadbalancerListenerId   string                      `protobuf:"bytes,12,opt,name=loadbalancer_listener_id,json=loadbalancerListenerId" json:"loadbalancer_listener_id,omitempty"`
	LoadbalancerListenerName string                      `protobuf:"bytes,13,opt,name=loadbalancer_listener_name,json=loadbalancerListenerName" json:"loadbalancer_listener_name,omitempty"`
	ServerCertificateId      string                      `protobuf:"bytes,14,opt,name=server_certificate_id,json=serverCertificateId" json:"server_certificate_id,omitempty"`
	SessionSticky            string                      `protobuf:"bytes,15,opt,name=session_sticky,json=sessionSticky" json:"session_sticky,omitempty"`
}

func (m *LoadBalancerListener) Reset()                    { *m = LoadBalancerListener{} }
func (m *LoadBalancerListener) String() string            { return proto.CompactTextString(m) }
func (*LoadBalancerListener) ProtoMessage()               {}
func (*LoadBalancerListener) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{18} }

func (m *LoadBalancerListener) GetBackendProtocol() string {
	if m != nil {
		return m.BackendProtocol
	}
	return ""
}

func (m *LoadBalancerListener) GetBackends() []*LoadBalancerBackend {
	if m != nil {
		return m.Backends
	}
	return nil
}

func (m *LoadBalancerListener) GetBalanceMode() string {
	if m != nil {
		return m.BalanceMode
	}
	return ""
}

func (m *LoadBalancerListener) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *LoadBalancerListener) GetForwardfor() int32 {
	if m != nil {
		return m.Forwardfor
	}
	return 0
}

func (m *LoadBalancerListener) GetHealthyCheckMethod() string {
	if m != nil {
		return m.HealthyCheckMethod
	}
	return ""
}

func (m *LoadBalancerListener) GetHealthyCheckOption() string {
	if m != nil {
		return m.HealthyCheckOption
	}
	return ""
}

func (m *LoadBalancerListener) GetListenerOption() int32 {
	if m != nil {
		return m.ListenerOption
	}
	return 0
}

func (m *LoadBalancerListener) GetListenerPort() int32 {
	if m != nil {
		return m.ListenerPort
	}
	return 0
}

func (m *LoadBalancerListener) GetListenerProtocol() string {
	if m != nil {
		return m.ListenerProtocol
	}
	return ""
}

func (m *LoadBalancerListener) GetLoadbalancerId() string {
	if m != nil {
		return m.LoadbalancerId
	}
	return ""
}

func (m *LoadBalancerListener) GetLoadbalancerListenerId() string {
	if m != nil {
		return m.LoadbalancerListenerId
	}
	return ""
}

func (m *LoadBalancerListener) GetLoadbalancerListenerName() string {
	if m != nil {
		return m.LoadbalancerListenerName
	}
	return ""
}

func (m *LoadBalancerListener) GetServerCertificateId() string {
	if m != nil {
		return m.ServerCertificateId
	}
	return ""
}

func (m *LoadBalancerListener) GetSessionSticky() string {
	if m != nil {
		return m.SessionSticky
	}
	return ""
}

type LoadBalancerBackend struct {
	CreateTime              *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	LoadbalancerBackendId   string                      `protobuf:"bytes,2,opt,name=loadbalancer_backend_id,json=loadbalancerBackendId" json:"loadbalancer_backend_id,omitempty"`
	LoadbalancerBackendName string                      `protobuf:"bytes,3,opt,name=loadbalancer_backend_name,json=loadbalancerBackendName" json:"loadbalancer_backend_name,omitempty"`
	LoadbalancerId          string                      `protobuf:"bytes,4,opt,name=loadbalancer_id,json=loadbalancerId" json:"loadbalancer_id,omitempty"`
	LoadbalancerListenerId  string                      `protobuf:"bytes,5,opt,name=loadbalancer_listener_id,json=loadbalancerListenerId" json:"loadbalancer_listener_id,omitempty"`
	LoadbalancerPolicyId    string                      `protobuf:"bytes,6,opt,name=loadbalancer_policy_id,json=loadbalancerPolicyId" json:"loadbalancer_policy_id,omitempty"`
	Port                    int32                       `protobuf:"varint,7,opt,name=port" json:"port,omitempty"`
	ResourceId              string                      `protobuf:"bytes,8,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	Status                  string                      `protobuf:"bytes,9,opt,name=status" json:"status,omitempty"`
	Weight                  int32                       `protobuf:"varint,10,opt,name=weight" json:"weight,omitempty"`
}

func (m *LoadBalancerBackend) Reset()                    { *m = LoadBalancerBackend{} }
func (m *LoadBalancerBackend) String() string            { return proto.CompactTextString(m) }
func (*LoadBalancerBackend) ProtoMessage()               {}
func (*LoadBalancerBackend) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{19} }

func (m *LoadBalancerBackend) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *LoadBalancerBackend) GetLoadbalancerBackendId() string {
	if m != nil {
		return m.LoadbalancerBackendId
	}
	return ""
}

func (m *LoadBalancerBackend) GetLoadbalancerBackendName() string {
	if m != nil {
		return m.LoadbalancerBackendName
	}
	return ""
}

func (m *LoadBalancerBackend) GetLoadbalancerId() string {
	if m != nil {
		return m.LoadbalancerId
	}
	return ""
}

func (m *LoadBalancerBackend) GetLoadbalancerListenerId() string {
	if m != nil {
		return m.LoadbalancerListenerId
	}
	return ""
}

func (m *LoadBalancerBackend) GetLoadbalancerPolicyId() string {
	if m != nil {
		return m.LoadbalancerPolicyId
	}
	return ""
}

func (m *LoadBalancerBackend) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *LoadBalancerBackend) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *LoadBalancerBackend) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *LoadBalancerBackend) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type Cache struct {
	CacheClass            int32                       `protobuf:"varint,1,opt,name=cache_class,json=cacheClass" json:"cache_class,omitempty"`
	CacheId               string                      `protobuf:"bytes,2,opt,name=cache_id,json=cacheId" json:"cache_id,omitempty"`
	CacheName             string                      `protobuf:"bytes,3,opt,name=cache_name,json=cacheName" json:"cache_name,omitempty"`
	CacheParameterGroupId string                      `protobuf:"bytes,4,opt,name=cache_parameter_group_id,json=cacheParameterGroupId" json:"cache_parameter_group_id,omitempty"`
	CachePort             int32                       `protobuf:"varint,5,opt,name=cache_port,json=cachePort" json:"cache_port,omitempty"`
	CacheSize             int32                       `protobuf:"varint,6,opt,name=cache_size,json=cacheSize" json:"cache_size,omitempty"`
	CacheType             string                      `protobuf:"bytes,7,opt,name=cache_type,json=cacheType" json:"cache_type,omitempty"`
	CacheVersion          string                      `protobuf:"bytes,8,opt,name=cache_version,json=cacheVersion" json:"cache_version,omitempty"`
	CreateTime            *google_protobuf1.Timestamp `protobuf:"bytes,9,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description           string                      `protobuf:"bytes,10,opt,name=description" json:"description,omitempty"`
	IsApplied             int32                       `protobuf:"varint,11,opt,name=is_applied,json=isApplied" json:"is_applied,omitempty"`
	MasterCount           int32                       `protobuf:"varint,12,opt,name=master_count,json=masterCount" json:"master_count,omitempty"`
	MaxMemory             int32                       `protobuf:"varint,13,opt,name=max_memory,json=maxMemory" json:"max_memory,omitempty"`
	NodeCount             int32                       `protobuf:"varint,14,opt,name=node_count,json=nodeCount" json:"node_count,omitempty"`
	Nodes                 []*CacheNode                `protobuf:"bytes,15,rep,name=nodes" json:"nodes,omitempty"`
	ReplicateCount        int32                       `protobuf:"varint,16,opt,name=replicate_count,json=replicateCount" json:"replicate_count,omitempty"`
	SecurityGroupId       string                      `protobuf:"bytes,17,opt,name=security_group_id,json=securityGroupId" json:"security_group_id,omitempty"`
	Status                string                      `protobuf:"bytes,18,opt,name=status" json:"status,omitempty"`
	StatusTime            *google_protobuf1.Timestamp `protobuf:"bytes,19,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SubCode               int32                       `protobuf:"varint,20,opt,name=sub_code,json=subCode" json:"sub_code,omitempty"`
	Tags                  []*Tag                      `protobuf:"bytes,21,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus      string                      `protobuf:"bytes,22,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	Vxnet                 *VxNet                      `protobuf:"bytes,23,opt,name=vxnet" json:"vxnet,omitempty"`
}

func (m *Cache) Reset()                    { *m = Cache{} }
func (m *Cache) String() string            { return proto.CompactTextString(m) }
func (*Cache) ProtoMessage()               {}
func (*Cache) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{20} }

func (m *Cache) GetCacheClass() int32 {
	if m != nil {
		return m.CacheClass
	}
	return 0
}

func (m *Cache) GetCacheId() string {
	if m != nil {
		return m.CacheId
	}
	return ""
}

func (m *Cache) GetCacheName() string {
	if m != nil {
		return m.CacheName
	}
	return ""
}

func (m *Cache) GetCacheParameterGroupId() string {
	if m != nil {
		return m.CacheParameterGroupId
	}
	return ""
}

func (m *Cache) GetCachePort() int32 {
	if m != nil {
		return m.CachePort
	}
	return 0
}

func (m *Cache) GetCacheSize() int32 {
	if m != nil {
		return m.CacheSize
	}
	return 0
}

func (m *Cache) GetCacheType() string {
	if m != nil {
		return m.CacheType
	}
	return ""
}

func (m *Cache) GetCacheVersion() string {
	if m != nil {
		return m.CacheVersion
	}
	return ""
}

func (m *Cache) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Cache) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Cache) GetIsApplied() int32 {
	if m != nil {
		return m.IsApplied
	}
	return 0
}

func (m *Cache) GetMasterCount() int32 {
	if m != nil {
		return m.MasterCount
	}
	return 0
}

func (m *Cache) GetMaxMemory() int32 {
	if m != nil {
		return m.MaxMemory
	}
	return 0
}

func (m *Cache) GetNodeCount() int32 {
	if m != nil {
		return m.NodeCount
	}
	return 0
}

func (m *Cache) GetNodes() []*CacheNode {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *Cache) GetReplicateCount() int32 {
	if m != nil {
		return m.ReplicateCount
	}
	return 0
}

func (m *Cache) GetSecurityGroupId() string {
	if m != nil {
		return m.SecurityGroupId
	}
	return ""
}

func (m *Cache) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Cache) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Cache) GetSubCode() int32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *Cache) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Cache) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Cache) GetVxnet() *VxNet {
	if m != nil {
		return m.Vxnet
	}
	return nil
}

type CacheNode struct {
	AlarmStatus      string                      `protobuf:"bytes,1,opt,name=alarm_status,json=alarmStatus" json:"alarm_status,omitempty"`
	CacheId          string                      `protobuf:"bytes,2,opt,name=cache_id,json=cacheId" json:"cache_id,omitempty"`
	CacheNodeId      string                      `protobuf:"bytes,3,opt,name=cache_node_id,json=cacheNodeId" json:"cache_node_id,omitempty"`
	CacheNodeName    string                      `protobuf:"bytes,4,opt,name=cache_node_name,json=cacheNodeName" json:"cache_node_name,omitempty"`
	CacheRole        string                      `protobuf:"bytes,5,opt,name=cache_role,json=cacheRole" json:"cache_role,omitempty"`
	CacheType        string                      `protobuf:"bytes,6,opt,name=cache_type,json=cacheType" json:"cache_type,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	PrivateIp        string                      `protobuf:"bytes,8,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	Slaveof          string                      `protobuf:"bytes,9,opt,name=slaveof" json:"slaveof,omitempty"`
	Status           string                      `protobuf:"bytes,10,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,11,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,12,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
}

func (m *CacheNode) Reset()                    { *m = CacheNode{} }
func (m *CacheNode) String() string            { return proto.CompactTextString(m) }
func (*CacheNode) ProtoMessage()               {}
func (*CacheNode) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{21} }

func (m *CacheNode) GetAlarmStatus() string {
	if m != nil {
		return m.AlarmStatus
	}
	return ""
}

func (m *CacheNode) GetCacheId() string {
	if m != nil {
		return m.CacheId
	}
	return ""
}

func (m *CacheNode) GetCacheNodeId() string {
	if m != nil {
		return m.CacheNodeId
	}
	return ""
}

func (m *CacheNode) GetCacheNodeName() string {
	if m != nil {
		return m.CacheNodeName
	}
	return ""
}

func (m *CacheNode) GetCacheRole() string {
	if m != nil {
		return m.CacheRole
	}
	return ""
}

func (m *CacheNode) GetCacheType() string {
	if m != nil {
		return m.CacheType
	}
	return ""
}

func (m *CacheNode) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *CacheNode) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *CacheNode) GetSlaveof() string {
	if m != nil {
		return m.Slaveof
	}
	return ""
}

func (m *CacheNode) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *CacheNode) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *CacheNode) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

type CacheParameter struct {
	CacheParameterName  string `protobuf:"bytes,1,opt,name=cache_parameter_name,json=cacheParameterName" json:"cache_parameter_name,omitempty"`
	CacheParameterType  string `protobuf:"bytes,2,opt,name=cache_parameter_type,json=cacheParameterType" json:"cache_parameter_type,omitempty"`
	CacheParameterValue string `protobuf:"bytes,3,opt,name=cache_parameter_value,json=cacheParameterValue" json:"cache_parameter_value,omitempty"`
	CacheType           string `protobuf:"bytes,4,opt,name=cache_type,json=cacheType" json:"cache_type,omitempty"`
	IsReadonly          int32  `protobuf:"varint,5,opt,name=is_readonly,json=isReadonly" json:"is_readonly,omitempty"`
	IsStatic            int32  `protobuf:"varint,6,opt,name=is_static,json=isStatic" json:"is_static,omitempty"`
	OptName             string `protobuf:"bytes,7,opt,name=opt_name,json=optName" json:"opt_name,omitempty"`
	ParameterType       string `protobuf:"bytes,8,opt,name=parameter_type,json=parameterType" json:"parameter_type,omitempty"`
	ResourceVersion     string `protobuf:"bytes,9,opt,name=resource_version,json=resourceVersion" json:"resource_version,omitempty"`
	ValueRange          string `protobuf:"bytes,10,opt,name=value_range,json=valueRange" json:"value_range,omitempty"`
}

func (m *CacheParameter) Reset()                    { *m = CacheParameter{} }
func (m *CacheParameter) String() string            { return proto.CompactTextString(m) }
func (*CacheParameter) ProtoMessage()               {}
func (*CacheParameter) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{22} }

func (m *CacheParameter) GetCacheParameterName() string {
	if m != nil {
		return m.CacheParameterName
	}
	return ""
}

func (m *CacheParameter) GetCacheParameterType() string {
	if m != nil {
		return m.CacheParameterType
	}
	return ""
}

func (m *CacheParameter) GetCacheParameterValue() string {
	if m != nil {
		return m.CacheParameterValue
	}
	return ""
}

func (m *CacheParameter) GetCacheType() string {
	if m != nil {
		return m.CacheType
	}
	return ""
}

func (m *CacheParameter) GetIsReadonly() int32 {
	if m != nil {
		return m.IsReadonly
	}
	return 0
}

func (m *CacheParameter) GetIsStatic() int32 {
	if m != nil {
		return m.IsStatic
	}
	return 0
}

func (m *CacheParameter) GetOptName() string {
	if m != nil {
		return m.OptName
	}
	return ""
}

func (m *CacheParameter) GetParameterType() string {
	if m != nil {
		return m.ParameterType
	}
	return ""
}

func (m *CacheParameter) GetResourceVersion() string {
	if m != nil {
		return m.ResourceVersion
	}
	return ""
}

func (m *CacheParameter) GetValueRange() string {
	if m != nil {
		return m.ValueRange
	}
	return ""
}

type CacheParameterGroup struct {
	CacheParameterGroupId   string                      `protobuf:"bytes,1,opt,name=cache_parameter_group_id,json=cacheParameterGroupId" json:"cache_parameter_group_id,omitempty"`
	CacheParameterGroupName string                      `protobuf:"bytes,2,opt,name=cache_parameter_group_name,json=cacheParameterGroupName" json:"cache_parameter_group_name,omitempty"`
	CacheType               string                      `protobuf:"bytes,3,opt,name=cache_type,json=cacheType" json:"cache_type,omitempty"`
	CreateTime              *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description             string                      `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	IsApplied               int32                       `protobuf:"varint,6,opt,name=is_applied,json=isApplied" json:"is_applied,omitempty"`
	IsDefault               int32                       `protobuf:"varint,7,opt,name=is_default,json=isDefault" json:"is_default,omitempty"`
	Resources               []*Resource                 `protobuf:"bytes,8,rep,name=resources" json:"resources,omitempty"`
}

func (m *CacheParameterGroup) Reset()                    { *m = CacheParameterGroup{} }
func (m *CacheParameterGroup) String() string            { return proto.CompactTextString(m) }
func (*CacheParameterGroup) ProtoMessage()               {}
func (*CacheParameterGroup) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{23} }

func (m *CacheParameterGroup) GetCacheParameterGroupId() string {
	if m != nil {
		return m.CacheParameterGroupId
	}
	return ""
}

func (m *CacheParameterGroup) GetCacheParameterGroupName() string {
	if m != nil {
		return m.CacheParameterGroupName
	}
	return ""
}

func (m *CacheParameterGroup) GetCacheType() string {
	if m != nil {
		return m.CacheType
	}
	return ""
}

func (m *CacheParameterGroup) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *CacheParameterGroup) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CacheParameterGroup) GetIsApplied() int32 {
	if m != nil {
		return m.IsApplied
	}
	return 0
}

func (m *CacheParameterGroup) GetIsDefault() int32 {
	if m != nil {
		return m.IsDefault
	}
	return 0
}

func (m *CacheParameterGroup) GetResources() []*Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

type CachePrivateIP struct {
	CacheNodeId string `protobuf:"bytes,1,opt,name=cache_node_id,json=cacheNodeId" json:"cache_node_id,omitempty"`
	CacheRole   string `protobuf:"bytes,2,opt,name=cache_role,json=cacheRole" json:"cache_role,omitempty"`
	PrivateIps  string `protobuf:"bytes,3,opt,name=private_ips,json=privateIps" json:"private_ips,omitempty"`
}

func (m *CachePrivateIP) Reset()                    { *m = CachePrivateIP{} }
func (m *CachePrivateIP) String() string            { return proto.CompactTextString(m) }
func (*CachePrivateIP) ProtoMessage()               {}
func (*CachePrivateIP) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{24} }

func (m *CachePrivateIP) GetCacheNodeId() string {
	if m != nil {
		return m.CacheNodeId
	}
	return ""
}

func (m *CachePrivateIP) GetCacheRole() string {
	if m != nil {
		return m.CacheRole
	}
	return ""
}

func (m *CachePrivateIP) GetPrivateIps() string {
	if m != nil {
		return m.PrivateIps
	}
	return ""
}

type Data struct {
	Data  string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	EipId string `protobuf:"bytes,2,opt,name=eip_id,json=eipId" json:"eip_id,omitempty"`
}

func (m *Data) Reset()                    { *m = Data{} }
func (m *Data) String() string            { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()               {}
func (*Data) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{25} }

func (m *Data) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Data) GetEipId() string {
	if m != nil {
		return m.EipId
	}
	return ""
}

type DHCPOption struct {
	RouterStaticId string `protobuf:"bytes,1,opt,name=router_static_id,json=routerStaticId" json:"router_static_id,omitempty"`
	Val2           string `protobuf:"bytes,2,opt,name=val2" json:"val2,omitempty"`
}

func (m *DHCPOption) Reset()                    { *m = DHCPOption{} }
func (m *DHCPOption) String() string            { return proto.CompactTextString(m) }
func (*DHCPOption) ProtoMessage()               {}
func (*DHCPOption) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{26} }

func (m *DHCPOption) GetRouterStaticId() string {
	if m != nil {
		return m.RouterStaticId
	}
	return ""
}

func (m *DHCPOption) GetVal2() string {
	if m != nil {
		return m.Val2
	}
	return ""
}

type DNSAlias struct {
	CreateTime   *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description  string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	DnsAliasId   string                      `protobuf:"bytes,3,opt,name=dns_alias_id,json=dnsAliasId" json:"dns_alias_id,omitempty"`
	DnsAliasName string                      `protobuf:"bytes,4,opt,name=dns_alias_name,json=dnsAliasName" json:"dns_alias_name,omitempty"`
	DomainName   string                      `protobuf:"bytes,5,opt,name=domain_name,json=domainName" json:"domain_name,omitempty"`
	ResourceId   string                      `protobuf:"bytes,6,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	Status       string                      `protobuf:"bytes,7,opt,name=status" json:"status,omitempty"`
}

func (m *DNSAlias) Reset()                    { *m = DNSAlias{} }
func (m *DNSAlias) String() string            { return proto.CompactTextString(m) }
func (*DNSAlias) ProtoMessage()               {}
func (*DNSAlias) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{27} }

func (m *DNSAlias) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *DNSAlias) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DNSAlias) GetDnsAliasId() string {
	if m != nil {
		return m.DnsAliasId
	}
	return ""
}

func (m *DNSAlias) GetDnsAliasName() string {
	if m != nil {
		return m.DnsAliasName
	}
	return ""
}

func (m *DNSAlias) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

func (m *DNSAlias) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *DNSAlias) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type EIPGroup struct {
	EipGroupId   string `protobuf:"bytes,1,opt,name=eip_group_id,json=eipGroupId" json:"eip_group_id,omitempty"`
	EipGroupName string `protobuf:"bytes,2,opt,name=eip_group_name,json=eipGroupName" json:"eip_group_name,omitempty"`
}

func (m *EIPGroup) Reset()                    { *m = EIPGroup{} }
func (m *EIPGroup) String() string            { return proto.CompactTextString(m) }
func (*EIPGroup) ProtoMessage()               {}
func (*EIPGroup) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{28} }

func (m *EIPGroup) GetEipGroupId() string {
	if m != nil {
		return m.EipGroupId
	}
	return ""
}

func (m *EIPGroup) GetEipGroupName() string {
	if m != nil {
		return m.EipGroupName
	}
	return ""
}

type EIPResource struct {
	ResourceId   string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	ResourceName string `protobuf:"bytes,2,opt,name=resource_name,json=resourceName" json:"resource_name,omitempty"`
	ResourceType string `protobuf:"bytes,3,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
}

func (m *EIPResource) Reset()                    { *m = EIPResource{} }
func (m *EIPResource) String() string            { return proto.CompactTextString(m) }
func (*EIPResource) ProtoMessage()               {}
func (*EIPResource) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{29} }

func (m *EIPResource) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *EIPResource) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *EIPResource) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

type Extra struct {
	BlockBus   string `protobuf:"bytes,1,opt,name=block_bus,json=blockBus" json:"block_bus,omitempty"`
	BootDev    string `protobuf:"bytes,2,opt,name=boot_dev,json=bootDev" json:"boot_dev,omitempty"`
	CpuMax     int32  `protobuf:"varint,3,opt,name=cpu_max,json=cpuMax" json:"cpu_max,omitempty"`
	CpuModel   string `protobuf:"bytes,4,opt,name=cpu_model,json=cpuModel" json:"cpu_model,omitempty"`
	Features   int32  `protobuf:"varint,5,opt,name=features" json:"features,omitempty"`
	Hypervisor string `protobuf:"bytes,6,opt,name=hypervisor" json:"hypervisor,omitempty"`
	MemMax     int32  `protobuf:"varint,7,opt,name=mem_max,json=memMax" json:"mem_max,omitempty"`
	NicMqueue  int32  `protobuf:"varint,8,opt,name=nic_mqueue,json=nicMqueue" json:"nic_mqueue,omitempty"`
	NoLimit    int32  `protobuf:"varint,9,opt,name=no_limit,json=noLimit" json:"no_limit,omitempty"`
	NoRestrict int32  `protobuf:"varint,10,opt,name=no_restrict,json=noRestrict" json:"no_restrict,omitempty"`
	OsDiskSize int32  `protobuf:"varint,11,opt,name=os_disk_size,json=osDiskSize" json:"os_disk_size,omitempty"`
	Usb        int32  `protobuf:"varint,12,opt,name=usb" json:"usb,omitempty"`
}

func (m *Extra) Reset()                    { *m = Extra{} }
func (m *Extra) String() string            { return proto.CompactTextString(m) }
func (*Extra) ProtoMessage()               {}
func (*Extra) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{30} }

func (m *Extra) GetBlockBus() string {
	if m != nil {
		return m.BlockBus
	}
	return ""
}

func (m *Extra) GetBootDev() string {
	if m != nil {
		return m.BootDev
	}
	return ""
}

func (m *Extra) GetCpuMax() int32 {
	if m != nil {
		return m.CpuMax
	}
	return 0
}

func (m *Extra) GetCpuModel() string {
	if m != nil {
		return m.CpuModel
	}
	return ""
}

func (m *Extra) GetFeatures() int32 {
	if m != nil {
		return m.Features
	}
	return 0
}

func (m *Extra) GetHypervisor() string {
	if m != nil {
		return m.Hypervisor
	}
	return ""
}

func (m *Extra) GetMemMax() int32 {
	if m != nil {
		return m.MemMax
	}
	return 0
}

func (m *Extra) GetNicMqueue() int32 {
	if m != nil {
		return m.NicMqueue
	}
	return 0
}

func (m *Extra) GetNoLimit() int32 {
	if m != nil {
		return m.NoLimit
	}
	return 0
}

func (m *Extra) GetNoRestrict() int32 {
	if m != nil {
		return m.NoRestrict
	}
	return 0
}

func (m *Extra) GetOsDiskSize() int32 {
	if m != nil {
		return m.OsDiskSize
	}
	return 0
}

func (m *Extra) GetUsb() int32 {
	if m != nil {
		return m.Usb
	}
	return 0
}

type File struct {
	File       string                      `protobuf:"bytes,1,opt,name=file" json:"file,omitempty"`
	LastModify *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=last_modify,json=lastModify" json:"last_modify,omitempty"`
	Size       int32                       `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
}

func (m *File) Reset()                    { *m = File{} }
func (m *File) String() string            { return proto.CompactTextString(m) }
func (*File) ProtoMessage()               {}
func (*File) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{31} }

func (m *File) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *File) GetLastModify() *google_protobuf1.Timestamp {
	if m != nil {
		return m.LastModify
	}
	return nil
}

func (m *File) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type InstanceType struct {
	Description      string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	InstanceTypeId   string `protobuf:"bytes,2,opt,name=instance_type_id,json=instanceTypeId" json:"instance_type_id,omitempty"`
	InstanceTypeName string `protobuf:"bytes,3,opt,name=instance_type_name,json=instanceTypeName" json:"instance_type_name,omitempty"`
	MemoryCurrent    int32  `protobuf:"varint,4,opt,name=memory_current,json=memoryCurrent" json:"memory_current,omitempty"`
	Status           string `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	VcpusCurrent     int32  `protobuf:"varint,6,opt,name=vcpus_current,json=vcpusCurrent" json:"vcpus_current,omitempty"`
	ZoneId           string `protobuf:"bytes,7,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
}

func (m *InstanceType) Reset()                    { *m = InstanceType{} }
func (m *InstanceType) String() string            { return proto.CompactTextString(m) }
func (*InstanceType) ProtoMessage()               {}
func (*InstanceType) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{32} }

func (m *InstanceType) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InstanceType) GetInstanceTypeId() string {
	if m != nil {
		return m.InstanceTypeId
	}
	return ""
}

func (m *InstanceType) GetInstanceTypeName() string {
	if m != nil {
		return m.InstanceTypeName
	}
	return ""
}

func (m *InstanceType) GetMemoryCurrent() int32 {
	if m != nil {
		return m.MemoryCurrent
	}
	return 0
}

func (m *InstanceType) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *InstanceType) GetVcpusCurrent() int32 {
	if m != nil {
		return m.VcpusCurrent
	}
	return 0
}

func (m *InstanceType) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

type LoadBalancerPolicy struct {
	CreateTime             *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	IsApplied              int32                       `protobuf:"varint,2,opt,name=is_applied,json=isApplied" json:"is_applied,omitempty"`
	LoadbalancerIds        []string                    `protobuf:"bytes,3,rep,name=loadbalancer_ids,json=loadbalancerIds" json:"loadbalancer_ids,omitempty"`
	LoadbalancerPolicyId   string                      `protobuf:"bytes,4,opt,name=loadbalancer_policy_id,json=loadbalancerPolicyId" json:"loadbalancer_policy_id,omitempty"`
	LoadbalancerPolicyName string                      `protobuf:"bytes,5,opt,name=loadbalancer_policy_name,json=loadbalancerPolicyName" json:"loadbalancer_policy_name,omitempty"`
}

func (m *LoadBalancerPolicy) Reset()                    { *m = LoadBalancerPolicy{} }
func (m *LoadBalancerPolicy) String() string            { return proto.CompactTextString(m) }
func (*LoadBalancerPolicy) ProtoMessage()               {}
func (*LoadBalancerPolicy) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{33} }

func (m *LoadBalancerPolicy) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *LoadBalancerPolicy) GetIsApplied() int32 {
	if m != nil {
		return m.IsApplied
	}
	return 0
}

func (m *LoadBalancerPolicy) GetLoadbalancerIds() []string {
	if m != nil {
		return m.LoadbalancerIds
	}
	return nil
}

func (m *LoadBalancerPolicy) GetLoadbalancerPolicyId() string {
	if m != nil {
		return m.LoadbalancerPolicyId
	}
	return ""
}

func (m *LoadBalancerPolicy) GetLoadbalancerPolicyName() string {
	if m != nil {
		return m.LoadbalancerPolicyName
	}
	return ""
}

type LoadBalancerPolicyRule struct {
	LoadbalancerPolicyRuleId   string `protobuf:"bytes,1,opt,name=loadbalancer_policy_rule_id,json=loadbalancerPolicyRuleId" json:"loadbalancer_policy_rule_id,omitempty"`
	LoadbalancerPolicyRuleName string `protobuf:"bytes,2,opt,name=loadbalancer_policy_rule_name,json=loadbalancerPolicyRuleName" json:"loadbalancer_policy_rule_name,omitempty"`
	RuleType                   string `protobuf:"bytes,3,opt,name=rule_type,json=ruleType" json:"rule_type,omitempty"`
	Val                        string `protobuf:"bytes,4,opt,name=val" json:"val,omitempty"`
}

func (m *LoadBalancerPolicyRule) Reset()                    { *m = LoadBalancerPolicyRule{} }
func (m *LoadBalancerPolicyRule) String() string            { return proto.CompactTextString(m) }
func (*LoadBalancerPolicyRule) ProtoMessage()               {}
func (*LoadBalancerPolicyRule) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{34} }

func (m *LoadBalancerPolicyRule) GetLoadbalancerPolicyRuleId() string {
	if m != nil {
		return m.LoadbalancerPolicyRuleId
	}
	return ""
}

func (m *LoadBalancerPolicyRule) GetLoadbalancerPolicyRuleName() string {
	if m != nil {
		return m.LoadbalancerPolicyRuleName
	}
	return ""
}

func (m *LoadBalancerPolicyRule) GetRuleType() string {
	if m != nil {
		return m.RuleType
	}
	return ""
}

func (m *LoadBalancerPolicyRule) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

type Meter struct {
	// Data     interface{}   `json:"data" name:"data"`
	// DataSet  []interface{} `json:"data_set" name:"data_set"`
	MeterId  string `protobuf:"bytes,3,opt,name=meter_id,json=meterId" json:"meter_id,omitempty"`
	Sequence int32  `protobuf:"varint,4,opt,name=sequence" json:"sequence,omitempty"`
	VxnetId  string `protobuf:"bytes,5,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
}

func (m *Meter) Reset()                    { *m = Meter{} }
func (m *Meter) String() string            { return proto.CompactTextString(m) }
func (*Meter) ProtoMessage()               {}
func (*Meter) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{35} }

func (m *Meter) GetMeterId() string {
	if m != nil {
		return m.MeterId
	}
	return ""
}

func (m *Meter) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *Meter) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

type MongoParameter struct {
	IsReadonly     int32  `protobuf:"varint,1,opt,name=is_readonly,json=isReadonly" json:"is_readonly,omitempty"`
	IsStatic       int32  `protobuf:"varint,2,opt,name=is_static,json=isStatic" json:"is_static,omitempty"`
	OptName        string `protobuf:"bytes,3,opt,name=opt_name,json=optName" json:"opt_name,omitempty"`
	ParameterName  string `protobuf:"bytes,4,opt,name=parameter_name,json=parameterName" json:"parameter_name,omitempty"`
	ParameterType  string `protobuf:"bytes,5,opt,name=parameter_type,json=parameterType" json:"parameter_type,omitempty"`
	ParameterValue string `protobuf:"bytes,6,opt,name=parameter_value,json=parameterValue" json:"parameter_value,omitempty"`
	ResourceType   string `protobuf:"bytes,7,opt,name=resource_type,json=resourceType" json:"resource_type,omitempty"`
}

func (m *MongoParameter) Reset()                    { *m = MongoParameter{} }
func (m *MongoParameter) String() string            { return proto.CompactTextString(m) }
func (*MongoParameter) ProtoMessage()               {}
func (*MongoParameter) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{36} }

func (m *MongoParameter) GetIsReadonly() int32 {
	if m != nil {
		return m.IsReadonly
	}
	return 0
}

func (m *MongoParameter) GetIsStatic() int32 {
	if m != nil {
		return m.IsStatic
	}
	return 0
}

func (m *MongoParameter) GetOptName() string {
	if m != nil {
		return m.OptName
	}
	return ""
}

func (m *MongoParameter) GetParameterName() string {
	if m != nil {
		return m.ParameterName
	}
	return ""
}

func (m *MongoParameter) GetParameterType() string {
	if m != nil {
		return m.ParameterType
	}
	return ""
}

func (m *MongoParameter) GetParameterValue() string {
	if m != nil {
		return m.ParameterValue
	}
	return ""
}

func (m *MongoParameter) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

type MongoPrivateIP struct {
	Priority0 string `protobuf:"bytes,1,opt,name=priority0" json:"priority0,omitempty"`
	Replica   string `protobuf:"bytes,2,opt,name=replica" json:"replica,omitempty"`
}

func (m *MongoPrivateIP) Reset()                    { *m = MongoPrivateIP{} }
func (m *MongoPrivateIP) String() string            { return proto.CompactTextString(m) }
func (*MongoPrivateIP) ProtoMessage()               {}
func (*MongoPrivateIP) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{37} }

func (m *MongoPrivateIP) GetPriority0() string {
	if m != nil {
		return m.Priority0
	}
	return ""
}

func (m *MongoPrivateIP) GetReplica() string {
	if m != nil {
		return m.Replica
	}
	return ""
}

type NICIP struct {
	NicId     string `protobuf:"bytes,1,opt,name=nic_id,json=nicId" json:"nic_id,omitempty"`
	PrivateIp string `protobuf:"bytes,2,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
}

func (m *NICIP) Reset()                    { *m = NICIP{} }
func (m *NICIP) String() string            { return proto.CompactTextString(m) }
func (*NICIP) ProtoMessage()               {}
func (*NICIP) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{38} }

func (m *NICIP) GetNicId() string {
	if m != nil {
		return m.NicId
	}
	return ""
}

func (m *NICIP) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

type RDB struct {
	AlarmStatus         string                      `protobuf:"bytes,1,opt,name=alarm_status,json=alarmStatus" json:"alarm_status,omitempty"`
	AutoBackupTime      int32                       `protobuf:"varint,2,opt,name=auto_backup_time,json=autoBackupTime" json:"auto_backup_time,omitempty"`
	AutoMinorVerUpgrade int32                       `protobuf:"varint,3,opt,name=auto_minor_ver_upgrade,json=autoMinorVerUpgrade" json:"auto_minor_ver_upgrade,omitempty"`
	CreateTime          string                      `protobuf:"bytes,4,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description         string                      `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	EngineVersion       string                      `protobuf:"bytes,6,opt,name=engine_version,json=engineVersion" json:"engine_version,omitempty"`
	LatestSnapshotTime  *google_protobuf1.Timestamp `protobuf:"bytes,7,opt,name=latest_snapshot_time,json=latestSnapshotTime" json:"latest_snapshot_time,omitempty"`
	MasterIp            string                      `protobuf:"bytes,8,opt,name=master_ip,json=masterIp" json:"master_ip,omitempty"`
	RdbEngine           string                      `protobuf:"bytes,9,opt,name=rdb_engine,json=rdbEngine" json:"rdb_engine,omitempty"`
	RdbId               string                      `protobuf:"bytes,10,opt,name=rdb_id,json=rdbId" json:"rdb_id,omitempty"`
	RdbName             string                      `protobuf:"bytes,11,opt,name=rdb_name,json=rdbName" json:"rdb_name,omitempty"`
	RdbType             int32                       `protobuf:"varint,12,opt,name=rdb_type,json=rdbType" json:"rdb_type,omitempty"`
	Status              string                      `protobuf:"bytes,13,opt,name=status" json:"status,omitempty"`
	StatusTime          string                      `protobuf:"bytes,14,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	StorageSize         int32                       `protobuf:"varint,15,opt,name=storage_size,json=storageSize" json:"storage_size,omitempty"`
	Tags                []*Tag                      `protobuf:"bytes,16,rep,name=tags" json:"tags,omitempty"`
	Vxnet               *VxNet                      `protobuf:"bytes,17,opt,name=vxnet" json:"vxnet,omitempty"`
}

func (m *RDB) Reset()                    { *m = RDB{} }
func (m *RDB) String() string            { return proto.CompactTextString(m) }
func (*RDB) ProtoMessage()               {}
func (*RDB) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{39} }

func (m *RDB) GetAlarmStatus() string {
	if m != nil {
		return m.AlarmStatus
	}
	return ""
}

func (m *RDB) GetAutoBackupTime() int32 {
	if m != nil {
		return m.AutoBackupTime
	}
	return 0
}

func (m *RDB) GetAutoMinorVerUpgrade() int32 {
	if m != nil {
		return m.AutoMinorVerUpgrade
	}
	return 0
}

func (m *RDB) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *RDB) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RDB) GetEngineVersion() string {
	if m != nil {
		return m.EngineVersion
	}
	return ""
}

func (m *RDB) GetLatestSnapshotTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.LatestSnapshotTime
	}
	return nil
}

func (m *RDB) GetMasterIp() string {
	if m != nil {
		return m.MasterIp
	}
	return ""
}

func (m *RDB) GetRdbEngine() string {
	if m != nil {
		return m.RdbEngine
	}
	return ""
}

func (m *RDB) GetRdbId() string {
	if m != nil {
		return m.RdbId
	}
	return ""
}

func (m *RDB) GetRdbName() string {
	if m != nil {
		return m.RdbName
	}
	return ""
}

func (m *RDB) GetRdbType() int32 {
	if m != nil {
		return m.RdbType
	}
	return 0
}

func (m *RDB) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *RDB) GetStatusTime() string {
	if m != nil {
		return m.StatusTime
	}
	return ""
}

func (m *RDB) GetStorageSize() int32 {
	if m != nil {
		return m.StorageSize
	}
	return 0
}

func (m *RDB) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *RDB) GetVxnet() *VxNet {
	if m != nil {
		return m.Vxnet
	}
	return nil
}

type RDBFile struct {
	BinaryLog []*File `protobuf:"bytes,1,rep,name=binary_log,json=binaryLog" json:"binary_log,omitempty"`
	ErrorLog  []*File `protobuf:"bytes,2,rep,name=error_log,json=errorLog" json:"error_log,omitempty"`
	SlowLog   []*File `protobuf:"bytes,3,rep,name=slow_log,json=slowLog" json:"slow_log,omitempty"`
}

func (m *RDBFile) Reset()                    { *m = RDBFile{} }
func (m *RDBFile) String() string            { return proto.CompactTextString(m) }
func (*RDBFile) ProtoMessage()               {}
func (*RDBFile) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{40} }

func (m *RDBFile) GetBinaryLog() []*File {
	if m != nil {
		return m.BinaryLog
	}
	return nil
}

func (m *RDBFile) GetErrorLog() []*File {
	if m != nil {
		return m.ErrorLog
	}
	return nil
}

func (m *RDBFile) GetSlowLog() []*File {
	if m != nil {
		return m.SlowLog
	}
	return nil
}

type RDBParameter struct {
	Family      string `protobuf:"bytes,1,opt,name=family" json:"family,omitempty"`
	IsReadonly  int32  `protobuf:"varint,2,opt,name=is_readonly,json=isReadonly" json:"is_readonly,omitempty"`
	IsStatic    int32  `protobuf:"varint,3,opt,name=is_static,json=isStatic" json:"is_static,omitempty"`
	MaxValue    int32  `protobuf:"varint,4,opt,name=max_value,json=maxValue" json:"max_value,omitempty"`
	MinValue    int32  `protobuf:"varint,5,opt,name=min_value,json=minValue" json:"min_value,omitempty"`
	OptName     string `protobuf:"bytes,6,opt,name=opt_name,json=optName" json:"opt_name,omitempty"`
	SectionName string `protobuf:"bytes,7,opt,name=section_name,json=sectionName" json:"section_name,omitempty"`
	VarName     string `protobuf:"bytes,8,opt,name=var_name,json=varName" json:"var_name,omitempty"`
	VarType     string `protobuf:"bytes,9,opt,name=var_type,json=varType" json:"var_type,omitempty"`
	VarValue    string `protobuf:"bytes,10,opt,name=var_value,json=varValue" json:"var_value,omitempty"`
}

func (m *RDBParameter) Reset()                    { *m = RDBParameter{} }
func (m *RDBParameter) String() string            { return proto.CompactTextString(m) }
func (*RDBParameter) ProtoMessage()               {}
func (*RDBParameter) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{41} }

func (m *RDBParameter) GetFamily() string {
	if m != nil {
		return m.Family
	}
	return ""
}

func (m *RDBParameter) GetIsReadonly() int32 {
	if m != nil {
		return m.IsReadonly
	}
	return 0
}

func (m *RDBParameter) GetIsStatic() int32 {
	if m != nil {
		return m.IsStatic
	}
	return 0
}

func (m *RDBParameter) GetMaxValue() int32 {
	if m != nil {
		return m.MaxValue
	}
	return 0
}

func (m *RDBParameter) GetMinValue() int32 {
	if m != nil {
		return m.MinValue
	}
	return 0
}

func (m *RDBParameter) GetOptName() string {
	if m != nil {
		return m.OptName
	}
	return ""
}

func (m *RDBParameter) GetSectionName() string {
	if m != nil {
		return m.SectionName
	}
	return ""
}

func (m *RDBParameter) GetVarName() string {
	if m != nil {
		return m.VarName
	}
	return ""
}

func (m *RDBParameter) GetVarType() string {
	if m != nil {
		return m.VarType
	}
	return ""
}

func (m *RDBParameter) GetVarValue() string {
	if m != nil {
		return m.VarValue
	}
	return ""
}

type RDBParameters struct {
	BindAddress               string `protobuf:"bytes,1,opt,name=bind_address,json=bindAddress" json:"bind_address,omitempty"`
	BinlogFormat              string `protobuf:"bytes,2,opt,name=binlog_format,json=binlogFormat" json:"binlog_format,omitempty"`
	CharacterSetServer        string `protobuf:"bytes,3,opt,name=character_set_server,json=characterSetServer" json:"character_set_server,omitempty"`
	Datadir                   string `protobuf:"bytes,4,opt,name=datadir" json:"datadir,omitempty"`
	DefaultStorageEngine      string `protobuf:"bytes,5,opt,name=default_storage_engine,json=defaultStorageEngine" json:"default_storage_engine,omitempty"`
	ExpireLogsDays            int32  `protobuf:"varint,6,opt,name=expire_logs_days,json=expireLogsDays" json:"expire_logs_days,omitempty"`
	Innodb                    string `protobuf:"bytes,7,opt,name=innodb" json:"innodb,omitempty"`
	InnodbBufferPoolInstances int32  `protobuf:"varint,8,opt,name=innodb_buffer_pool_instances,json=innodbBufferPoolInstances" json:"innodb_buffer_pool_instances,omitempty"`
	InnodbBufferPoolSize      string `protobuf:"bytes,9,opt,name=innodb_buffer_pool_size,json=innodbBufferPoolSize" json:"innodb_buffer_pool_size,omitempty"`
	InnodbFilePerTable        int32  `protobuf:"varint,10,opt,name=innodb_file_per_table,json=innodbFilePerTable" json:"innodb_file_per_table,omitempty"`
	InnodbFlushLogAtTrxCommit int32  `protobuf:"varint,11,opt,name=innodb_flush_log_at_trx_commit,json=innodbFlushLogAtTrxCommit" json:"innodb_flush_log_at_trx_commit,omitempty"`
	InnodbFlushMethod         string `protobuf:"bytes,12,opt,name=innodb_flush_method,json=innodbFlushMethod" json:"innodb_flush_method,omitempty"`
	InnodbIoCapacity          int32  `protobuf:"varint,13,opt,name=innodb_io_capacity,json=innodbIoCapacity" json:"innodb_io_capacity,omitempty"`
	InnodbLogBufferSize       string `protobuf:"bytes,14,opt,name=innodb_log_buffer_size,json=innodbLogBufferSize" json:"innodb_log_buffer_size,omitempty"`
	InnodbLogFileSize         string `protobuf:"bytes,15,opt,name=innodb_log_file_size,json=innodbLogFileSize" json:"innodb_log_file_size,omitempty"`
	InnodbLogFilesInGroup     int32  `protobuf:"varint,16,opt,name=innodb_log_files_in_group,json=innodbLogFilesInGroup" json:"innodb_log_files_in_group,omitempty"`
	InnodbMaxDirtyPagesPct    int32  `protobuf:"varint,17,opt,name=innodb_max_dirty_pages_pct,json=innodbMaxDirtyPagesPct" json:"innodb_max_dirty_pages_pct,omitempty"`
	InnodbReadIoThreads       int32  `protobuf:"varint,18,opt,name=innodb_read_io_threads,json=innodbReadIoThreads" json:"innodb_read_io_threads,omitempty"`
	InnodbWriteIoThreads      int32  `protobuf:"varint,19,opt,name=innodb_write_io_threads,json=innodbWriteIoThreads" json:"innodb_write_io_threads,omitempty"`
	InteractiveTimeout        int32  `protobuf:"varint,20,opt,name=interactive_timeout,json=interactiveTimeout" json:"interactive_timeout,omitempty"`
	KeyBufferSize             string `protobuf:"bytes,21,opt,name=key_buffer_size,json=keyBufferSize" json:"key_buffer_size,omitempty"`
	// LogBinIndex               *string `json:"log-bin-index" name:"log-bin-index"`
	LogBin                    string `protobuf:"bytes,22,opt,name=log_bin,json=logBin" json:"log_bin,omitempty"`
	LogError                  string `protobuf:"bytes,23,opt,name=log_error,json=logError" json:"log_error,omitempty"`
	LogQueriesNotUsingIndexes string `protobuf:"bytes,24,opt,name=log_queries_not_using_indexes,json=logQueriesNotUsingIndexes" json:"log_queries_not_using_indexes,omitempty"`
	LogSlaveUpdates           int32  `protobuf:"varint,25,opt,name=log_slave_updates,json=logSlaveUpdates" json:"log_slave_updates,omitempty"`
	LongQueryTime             int32  `protobuf:"varint,26,opt,name=long_query_time,json=longQueryTime" json:"long_query_time,omitempty"`
	LowerCaseTableNames       int32  `protobuf:"varint,27,opt,name=lower_case_table_names,json=lowerCaseTableNames" json:"lower_case_table_names,omitempty"`
	MaxAllowedPacket          string `protobuf:"bytes,28,opt,name=max_allowed_packet,json=maxAllowedPacket" json:"max_allowed_packet,omitempty"`
	MaxConnectErrors          int32  `protobuf:"varint,29,opt,name=max_connect_errors,json=maxConnectErrors" json:"max_connect_errors,omitempty"`
	MaxConnections            int32  `protobuf:"varint,30,opt,name=max_connections,json=maxConnections" json:"max_connections,omitempty"`
	MaxHeapTableSize          string `protobuf:"bytes,31,opt,name=max_heap_table_size,json=maxHeapTableSize" json:"max_heap_table_size,omitempty"`
	OpenFilesLimit            int32  `protobuf:"varint,32,opt,name=open_files_limit,json=openFilesLimit" json:"open_files_limit,omitempty"`
	Port                      int32  `protobuf:"varint,33,opt,name=port" json:"port,omitempty"`
	QueryCacheSize            int32  `protobuf:"varint,34,opt,name=query_cache_size,json=queryCacheSize" json:"query_cache_size,omitempty"`
	QueryCacheType            int32  `protobuf:"varint,35,opt,name=query_cache_type,json=queryCacheType" json:"query_cache_type,omitempty"`
	RelayLog                  string `protobuf:"bytes,36,opt,name=relay_log,json=relayLog" json:"relay_log,omitempty"`
	RelayLogIndex             string `protobuf:"bytes,37,opt,name=relay_log_index,json=relayLogIndex" json:"relay_log_index,omitempty"`
	// SkipSlaveStart            *int    `json:"skip-slave-start" name:"skip-slave-start"`
	SkipNameResolve  int32  `protobuf:"varint,39,opt,name=skip_name_resolve,json=skipNameResolve" json:"skip_name_resolve,omitempty"`
	SlaveExecMode    string `protobuf:"bytes,40,opt,name=slave_exec_mode,json=slaveExecMode" json:"slave_exec_mode,omitempty"`
	SlaveNetTimeout  int32  `protobuf:"varint,41,opt,name=slave_net_timeout,json=slaveNetTimeout" json:"slave_net_timeout,omitempty"`
	SlowQueryLog     int32  `protobuf:"varint,42,opt,name=slow_query_log,json=slowQueryLog" json:"slow_query_log,omitempty"`
	SlowQueryLogFile string `protobuf:"bytes,43,opt,name=slow_query_log_file,json=slowQueryLogFile" json:"slow_query_log_file,omitempty"`
	SqlMode          string `protobuf:"bytes,44,opt,name=sql_mode,json=sqlMode" json:"sql_mode,omitempty"`
	SyncBinlog       int32  `protobuf:"varint,45,opt,name=sync_binlog,json=syncBinlog" json:"sync_binlog,omitempty"`
	SyncMasterInfo   int32  `protobuf:"varint,46,opt,name=sync_master_info,json=syncMasterInfo" json:"sync_master_info,omitempty"`
	SyncRelayLog     int32  `protobuf:"varint,47,opt,name=sync_relay_log,json=syncRelayLog" json:"sync_relay_log,omitempty"`
	SyncRelayLogInfo int32  `protobuf:"varint,48,opt,name=sync_relay_log_info,json=syncRelayLogInfo" json:"sync_relay_log_info,omitempty"`
	TableOpenCache   int32  `protobuf:"varint,49,opt,name=table_open_cache,json=tableOpenCache" json:"table_open_cache,omitempty"`
	ThreadCacheSize  int32  `protobuf:"varint,50,opt,name=thread_cache_size,json=threadCacheSize" json:"thread_cache_size,omitempty"`
	TmpTableSize     string `protobuf:"bytes,51,opt,name=tmp_table_size,json=tmpTableSize" json:"tmp_table_size,omitempty"`
	Tmpdir           string `protobuf:"bytes,52,opt,name=tmpdir" json:"tmpdir,omitempty"`
	User             string `protobuf:"bytes,53,opt,name=user" json:"user,omitempty"`
	WaitTimeout      int32  `protobuf:"varint,54,opt,name=wait_timeout,json=waitTimeout" json:"wait_timeout,omitempty"`
}

func (m *RDBParameters) Reset()                    { *m = RDBParameters{} }
func (m *RDBParameters) String() string            { return proto.CompactTextString(m) }
func (*RDBParameters) ProtoMessage()               {}
func (*RDBParameters) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{42} }

func (m *RDBParameters) GetBindAddress() string {
	if m != nil {
		return m.BindAddress
	}
	return ""
}

func (m *RDBParameters) GetBinlogFormat() string {
	if m != nil {
		return m.BinlogFormat
	}
	return ""
}

func (m *RDBParameters) GetCharacterSetServer() string {
	if m != nil {
		return m.CharacterSetServer
	}
	return ""
}

func (m *RDBParameters) GetDatadir() string {
	if m != nil {
		return m.Datadir
	}
	return ""
}

func (m *RDBParameters) GetDefaultStorageEngine() string {
	if m != nil {
		return m.DefaultStorageEngine
	}
	return ""
}

func (m *RDBParameters) GetExpireLogsDays() int32 {
	if m != nil {
		return m.ExpireLogsDays
	}
	return 0
}

func (m *RDBParameters) GetInnodb() string {
	if m != nil {
		return m.Innodb
	}
	return ""
}

func (m *RDBParameters) GetInnodbBufferPoolInstances() int32 {
	if m != nil {
		return m.InnodbBufferPoolInstances
	}
	return 0
}

func (m *RDBParameters) GetInnodbBufferPoolSize() string {
	if m != nil {
		return m.InnodbBufferPoolSize
	}
	return ""
}

func (m *RDBParameters) GetInnodbFilePerTable() int32 {
	if m != nil {
		return m.InnodbFilePerTable
	}
	return 0
}

func (m *RDBParameters) GetInnodbFlushLogAtTrxCommit() int32 {
	if m != nil {
		return m.InnodbFlushLogAtTrxCommit
	}
	return 0
}

func (m *RDBParameters) GetInnodbFlushMethod() string {
	if m != nil {
		return m.InnodbFlushMethod
	}
	return ""
}

func (m *RDBParameters) GetInnodbIoCapacity() int32 {
	if m != nil {
		return m.InnodbIoCapacity
	}
	return 0
}

func (m *RDBParameters) GetInnodbLogBufferSize() string {
	if m != nil {
		return m.InnodbLogBufferSize
	}
	return ""
}

func (m *RDBParameters) GetInnodbLogFileSize() string {
	if m != nil {
		return m.InnodbLogFileSize
	}
	return ""
}

func (m *RDBParameters) GetInnodbLogFilesInGroup() int32 {
	if m != nil {
		return m.InnodbLogFilesInGroup
	}
	return 0
}

func (m *RDBParameters) GetInnodbMaxDirtyPagesPct() int32 {
	if m != nil {
		return m.InnodbMaxDirtyPagesPct
	}
	return 0
}

func (m *RDBParameters) GetInnodbReadIoThreads() int32 {
	if m != nil {
		return m.InnodbReadIoThreads
	}
	return 0
}

func (m *RDBParameters) GetInnodbWriteIoThreads() int32 {
	if m != nil {
		return m.InnodbWriteIoThreads
	}
	return 0
}

func (m *RDBParameters) GetInteractiveTimeout() int32 {
	if m != nil {
		return m.InteractiveTimeout
	}
	return 0
}

func (m *RDBParameters) GetKeyBufferSize() string {
	if m != nil {
		return m.KeyBufferSize
	}
	return ""
}

func (m *RDBParameters) GetLogBin() string {
	if m != nil {
		return m.LogBin
	}
	return ""
}

func (m *RDBParameters) GetLogError() string {
	if m != nil {
		return m.LogError
	}
	return ""
}

func (m *RDBParameters) GetLogQueriesNotUsingIndexes() string {
	if m != nil {
		return m.LogQueriesNotUsingIndexes
	}
	return ""
}

func (m *RDBParameters) GetLogSlaveUpdates() int32 {
	if m != nil {
		return m.LogSlaveUpdates
	}
	return 0
}

func (m *RDBParameters) GetLongQueryTime() int32 {
	if m != nil {
		return m.LongQueryTime
	}
	return 0
}

func (m *RDBParameters) GetLowerCaseTableNames() int32 {
	if m != nil {
		return m.LowerCaseTableNames
	}
	return 0
}

func (m *RDBParameters) GetMaxAllowedPacket() string {
	if m != nil {
		return m.MaxAllowedPacket
	}
	return ""
}

func (m *RDBParameters) GetMaxConnectErrors() int32 {
	if m != nil {
		return m.MaxConnectErrors
	}
	return 0
}

func (m *RDBParameters) GetMaxConnections() int32 {
	if m != nil {
		return m.MaxConnections
	}
	return 0
}

func (m *RDBParameters) GetMaxHeapTableSize() string {
	if m != nil {
		return m.MaxHeapTableSize
	}
	return ""
}

func (m *RDBParameters) GetOpenFilesLimit() int32 {
	if m != nil {
		return m.OpenFilesLimit
	}
	return 0
}

func (m *RDBParameters) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *RDBParameters) GetQueryCacheSize() int32 {
	if m != nil {
		return m.QueryCacheSize
	}
	return 0
}

func (m *RDBParameters) GetQueryCacheType() int32 {
	if m != nil {
		return m.QueryCacheType
	}
	return 0
}

func (m *RDBParameters) GetRelayLog() string {
	if m != nil {
		return m.RelayLog
	}
	return ""
}

func (m *RDBParameters) GetRelayLogIndex() string {
	if m != nil {
		return m.RelayLogIndex
	}
	return ""
}

func (m *RDBParameters) GetSkipNameResolve() int32 {
	if m != nil {
		return m.SkipNameResolve
	}
	return 0
}

func (m *RDBParameters) GetSlaveExecMode() string {
	if m != nil {
		return m.SlaveExecMode
	}
	return ""
}

func (m *RDBParameters) GetSlaveNetTimeout() int32 {
	if m != nil {
		return m.SlaveNetTimeout
	}
	return 0
}

func (m *RDBParameters) GetSlowQueryLog() int32 {
	if m != nil {
		return m.SlowQueryLog
	}
	return 0
}

func (m *RDBParameters) GetSlowQueryLogFile() string {
	if m != nil {
		return m.SlowQueryLogFile
	}
	return ""
}

func (m *RDBParameters) GetSqlMode() string {
	if m != nil {
		return m.SqlMode
	}
	return ""
}

func (m *RDBParameters) GetSyncBinlog() int32 {
	if m != nil {
		return m.SyncBinlog
	}
	return 0
}

func (m *RDBParameters) GetSyncMasterInfo() int32 {
	if m != nil {
		return m.SyncMasterInfo
	}
	return 0
}

func (m *RDBParameters) GetSyncRelayLog() int32 {
	if m != nil {
		return m.SyncRelayLog
	}
	return 0
}

func (m *RDBParameters) GetSyncRelayLogInfo() int32 {
	if m != nil {
		return m.SyncRelayLogInfo
	}
	return 0
}

func (m *RDBParameters) GetTableOpenCache() int32 {
	if m != nil {
		return m.TableOpenCache
	}
	return 0
}

func (m *RDBParameters) GetThreadCacheSize() int32 {
	if m != nil {
		return m.ThreadCacheSize
	}
	return 0
}

func (m *RDBParameters) GetTmpTableSize() string {
	if m != nil {
		return m.TmpTableSize
	}
	return ""
}

func (m *RDBParameters) GetTmpdir() string {
	if m != nil {
		return m.Tmpdir
	}
	return ""
}

func (m *RDBParameters) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *RDBParameters) GetWaitTimeout() int32 {
	if m != nil {
		return m.WaitTimeout
	}
	return 0
}

type RDBPrivateIP struct {
	Master   string `protobuf:"bytes,1,opt,name=master" json:"master,omitempty"`
	Topslave string `protobuf:"bytes,2,opt,name=topslave" json:"topslave,omitempty"`
}

func (m *RDBPrivateIP) Reset()                    { *m = RDBPrivateIP{} }
func (m *RDBPrivateIP) String() string            { return proto.CompactTextString(m) }
func (*RDBPrivateIP) ProtoMessage()               {}
func (*RDBPrivateIP) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{43} }

func (m *RDBPrivateIP) GetMaster() string {
	if m != nil {
		return m.Master
	}
	return ""
}

func (m *RDBPrivateIP) GetTopslave() string {
	if m != nil {
		return m.Topslave
	}
	return ""
}

type RouterStatic struct {
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	RouterId         string                      `protobuf:"bytes,2,opt,name=router_id,json=routerId" json:"router_id,omitempty"`
	RouterStaticId   string                      `protobuf:"bytes,3,opt,name=router_static_id,json=routerStaticId" json:"router_static_id,omitempty"`
	RouterStaticName string                      `protobuf:"bytes,4,opt,name=router_static_name,json=routerStaticName" json:"router_static_name,omitempty"`
	StaticType       int32                       `protobuf:"varint,5,opt,name=static_type,json=staticType" json:"static_type,omitempty"`
	Val1             string                      `protobuf:"bytes,6,opt,name=val1" json:"val1,omitempty"`
	Val2             string                      `protobuf:"bytes,7,opt,name=val2" json:"val2,omitempty"`
	Val3             string                      `protobuf:"bytes,8,opt,name=val3" json:"val3,omitempty"`
	Val4             string                      `protobuf:"bytes,9,opt,name=val4" json:"val4,omitempty"`
	VxnetId          string                      `protobuf:"bytes,10,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
}

func (m *RouterStatic) Reset()                    { *m = RouterStatic{} }
func (m *RouterStatic) String() string            { return proto.CompactTextString(m) }
func (*RouterStatic) ProtoMessage()               {}
func (*RouterStatic) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{44} }

func (m *RouterStatic) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *RouterStatic) GetRouterId() string {
	if m != nil {
		return m.RouterId
	}
	return ""
}

func (m *RouterStatic) GetRouterStaticId() string {
	if m != nil {
		return m.RouterStaticId
	}
	return ""
}

func (m *RouterStatic) GetRouterStaticName() string {
	if m != nil {
		return m.RouterStaticName
	}
	return ""
}

func (m *RouterStatic) GetStaticType() int32 {
	if m != nil {
		return m.StaticType
	}
	return 0
}

func (m *RouterStatic) GetVal1() string {
	if m != nil {
		return m.Val1
	}
	return ""
}

func (m *RouterStatic) GetVal2() string {
	if m != nil {
		return m.Val2
	}
	return ""
}

func (m *RouterStatic) GetVal3() string {
	if m != nil {
		return m.Val3
	}
	return ""
}

func (m *RouterStatic) GetVal4() string {
	if m != nil {
		return m.Val4
	}
	return ""
}

func (m *RouterStatic) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

type RouterStaticEntry struct {
	RouterId              string `protobuf:"bytes,1,opt,name=router_id,json=routerId" json:"router_id,omitempty"`
	RouterStaticEntryId   string `protobuf:"bytes,2,opt,name=router_static_entry_id,json=routerStaticEntryId" json:"router_static_entry_id,omitempty"`
	RouterStaticEntryName string `protobuf:"bytes,3,opt,name=router_static_entry_name,json=routerStaticEntryName" json:"router_static_entry_name,omitempty"`
	Val1                  string `protobuf:"bytes,4,opt,name=val1" json:"val1,omitempty"`
	Val2                  string `protobuf:"bytes,5,opt,name=val2" json:"val2,omitempty"`
}

func (m *RouterStaticEntry) Reset()                    { *m = RouterStaticEntry{} }
func (m *RouterStaticEntry) String() string            { return proto.CompactTextString(m) }
func (*RouterStaticEntry) ProtoMessage()               {}
func (*RouterStaticEntry) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{45} }

func (m *RouterStaticEntry) GetRouterId() string {
	if m != nil {
		return m.RouterId
	}
	return ""
}

func (m *RouterStaticEntry) GetRouterStaticEntryId() string {
	if m != nil {
		return m.RouterStaticEntryId
	}
	return ""
}

func (m *RouterStaticEntry) GetRouterStaticEntryName() string {
	if m != nil {
		return m.RouterStaticEntryName
	}
	return ""
}

func (m *RouterStaticEntry) GetVal1() string {
	if m != nil {
		return m.Val1
	}
	return ""
}

func (m *RouterStaticEntry) GetVal2() string {
	if m != nil {
		return m.Val2
	}
	return ""
}

type RouterVxNet struct {
	CreateTime *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	DynIpEnd   string                      `protobuf:"bytes,2,opt,name=dyn_ip_end,json=dynIpEnd" json:"dyn_ip_end,omitempty"`
	DynIpStart string                      `protobuf:"bytes,3,opt,name=dyn_ip_start,json=dynIpStart" json:"dyn_ip_start,omitempty"`
	Features   int32                       `protobuf:"varint,4,opt,name=features" json:"features,omitempty"`
	IpNetwork  string                      `protobuf:"bytes,5,opt,name=ip_network,json=ipNetwork" json:"ip_network,omitempty"`
	ManagerIp  string                      `protobuf:"bytes,6,opt,name=manager_ip,json=managerIp" json:"manager_ip,omitempty"`
	RouterId   string                      `protobuf:"bytes,7,opt,name=router_id,json=routerId" json:"router_id,omitempty"`
	VxnetId    string                      `protobuf:"bytes,8,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
}

func (m *RouterVxNet) Reset()                    { *m = RouterVxNet{} }
func (m *RouterVxNet) String() string            { return proto.CompactTextString(m) }
func (*RouterVxNet) ProtoMessage()               {}
func (*RouterVxNet) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{46} }

func (m *RouterVxNet) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *RouterVxNet) GetDynIpEnd() string {
	if m != nil {
		return m.DynIpEnd
	}
	return ""
}

func (m *RouterVxNet) GetDynIpStart() string {
	if m != nil {
		return m.DynIpStart
	}
	return ""
}

func (m *RouterVxNet) GetFeatures() int32 {
	if m != nil {
		return m.Features
	}
	return 0
}

func (m *RouterVxNet) GetIpNetwork() string {
	if m != nil {
		return m.IpNetwork
	}
	return ""
}

func (m *RouterVxNet) GetManagerIp() string {
	if m != nil {
		return m.ManagerIp
	}
	return ""
}

func (m *RouterVxNet) GetRouterId() string {
	if m != nil {
		return m.RouterId
	}
	return ""
}

func (m *RouterVxNet) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

type S2DefaultParameters struct {
	DefaultValue string `protobuf:"bytes,1,opt,name=default_value,json=defaultValue" json:"default_value,omitempty"`
	Description  string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	ParamName    string `protobuf:"bytes,3,opt,name=param_name,json=paramName" json:"param_name,omitempty"`
	ServiceType  string `protobuf:"bytes,4,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
	TargetType   string `protobuf:"bytes,5,opt,name=target_type,json=targetType" json:"target_type,omitempty"`
}

func (m *S2DefaultParameters) Reset()                    { *m = S2DefaultParameters{} }
func (m *S2DefaultParameters) String() string            { return proto.CompactTextString(m) }
func (*S2DefaultParameters) ProtoMessage()               {}
func (*S2DefaultParameters) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{47} }

func (m *S2DefaultParameters) GetDefaultValue() string {
	if m != nil {
		return m.DefaultValue
	}
	return ""
}

func (m *S2DefaultParameters) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *S2DefaultParameters) GetParamName() string {
	if m != nil {
		return m.ParamName
	}
	return ""
}

func (m *S2DefaultParameters) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *S2DefaultParameters) GetTargetType() string {
	if m != nil {
		return m.TargetType
	}
	return ""
}

type S2Server struct {
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description      string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	IsApplied        int32                       `protobuf:"varint,3,opt,name=is_applied,json=isApplied" json:"is_applied,omitempty"`
	Name             string                      `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	PrivateIp        string                      `protobuf:"bytes,5,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	S2ServerId       string                      `protobuf:"bytes,6,opt,name=s2_server_id,json=s2ServerId" json:"s2_server_id,omitempty"`
	S2ServerType     int32                       `protobuf:"varint,7,opt,name=s2_server_type,json=s2ServerType" json:"s2_server_type,omitempty"`
	ServiceType      string                      `protobuf:"bytes,8,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
	Status           string                      `protobuf:"bytes,9,opt,name=status" json:"status,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,10,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	Tags             []*Tag                      `protobuf:"bytes,11,rep,name=tags" json:"tags,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,12,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	Vxnet            *VxNet                      `protobuf:"bytes,13,opt,name=vxnet" json:"vxnet,omitempty"`
}

func (m *S2Server) Reset()                    { *m = S2Server{} }
func (m *S2Server) String() string            { return proto.CompactTextString(m) }
func (*S2Server) ProtoMessage()               {}
func (*S2Server) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{48} }

func (m *S2Server) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *S2Server) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *S2Server) GetIsApplied() int32 {
	if m != nil {
		return m.IsApplied
	}
	return 0
}

func (m *S2Server) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *S2Server) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *S2Server) GetS2ServerId() string {
	if m != nil {
		return m.S2ServerId
	}
	return ""
}

func (m *S2Server) GetS2ServerType() int32 {
	if m != nil {
		return m.S2ServerType
	}
	return 0
}

func (m *S2Server) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *S2Server) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *S2Server) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *S2Server) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *S2Server) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *S2Server) GetVxnet() *VxNet {
	if m != nil {
		return m.Vxnet
	}
	return nil
}

type S2SharedTarget struct {
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description      string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	ExportName       string                      `protobuf:"bytes,3,opt,name=export_name,json=exportName" json:"export_name,omitempty"`
	S2ServerId       string                      `protobuf:"bytes,4,opt,name=s2_server_id,json=s2ServerId" json:"s2_server_id,omitempty"`
	S2SharedTargetId string                      `protobuf:"bytes,5,opt,name=s2_shared_target_id,json=s2SharedTargetId" json:"s2_shared_target_id,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	TargetType       string                      `protobuf:"bytes,7,opt,name=target_type,json=targetType" json:"target_type,omitempty"`
}

func (m *S2SharedTarget) Reset()                    { *m = S2SharedTarget{} }
func (m *S2SharedTarget) String() string            { return proto.CompactTextString(m) }
func (*S2SharedTarget) ProtoMessage()               {}
func (*S2SharedTarget) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{49} }

func (m *S2SharedTarget) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *S2SharedTarget) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *S2SharedTarget) GetExportName() string {
	if m != nil {
		return m.ExportName
	}
	return ""
}

func (m *S2SharedTarget) GetS2ServerId() string {
	if m != nil {
		return m.S2ServerId
	}
	return ""
}

func (m *S2SharedTarget) GetS2SharedTargetId() string {
	if m != nil {
		return m.S2SharedTargetId
	}
	return ""
}

func (m *S2SharedTarget) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *S2SharedTarget) GetTargetType() string {
	if m != nil {
		return m.TargetType
	}
	return ""
}

type SecurityGroup struct {
	CreateTime        *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description       string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	IsApplied         int32                       `protobuf:"varint,3,opt,name=is_applied,json=isApplied" json:"is_applied,omitempty"`
	IsDefault         int32                       `protobuf:"varint,4,opt,name=is_default,json=isDefault" json:"is_default,omitempty"`
	Resources         []*Resource                 `protobuf:"bytes,5,rep,name=resources" json:"resources,omitempty"`
	SecurityGroupId   string                      `protobuf:"bytes,6,opt,name=security_group_id,json=securityGroupId" json:"security_group_id,omitempty"`
	SecurityGroupName string                      `protobuf:"bytes,7,opt,name=security_group_name,json=securityGroupName" json:"security_group_name,omitempty"`
	Tags              []*Tag                      `protobuf:"bytes,8,rep,name=tags" json:"tags,omitempty"`
}

func (m *SecurityGroup) Reset()                    { *m = SecurityGroup{} }
func (m *SecurityGroup) String() string            { return proto.CompactTextString(m) }
func (*SecurityGroup) ProtoMessage()               {}
func (*SecurityGroup) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{50} }

func (m *SecurityGroup) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *SecurityGroup) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SecurityGroup) GetIsApplied() int32 {
	if m != nil {
		return m.IsApplied
	}
	return 0
}

func (m *SecurityGroup) GetIsDefault() int32 {
	if m != nil {
		return m.IsDefault
	}
	return 0
}

func (m *SecurityGroup) GetResources() []*Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *SecurityGroup) GetSecurityGroupId() string {
	if m != nil {
		return m.SecurityGroupId
	}
	return ""
}

func (m *SecurityGroup) GetSecurityGroupName() string {
	if m != nil {
		return m.SecurityGroupName
	}
	return ""
}

func (m *SecurityGroup) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type SecurityGroupIPSet struct {
	CreateTime             *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description            string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	IpsetType              int32                       `protobuf:"varint,3,opt,name=ipset_type,json=ipsetType" json:"ipset_type,omitempty"`
	SecurityGroupIpsetId   string                      `protobuf:"bytes,4,opt,name=security_group_ipset_id,json=securityGroupIpsetId" json:"security_group_ipset_id,omitempty"`
	SecurityGroupIpsetName string                      `protobuf:"bytes,5,opt,name=security_group_ipset_name,json=securityGroupIpsetName" json:"security_group_ipset_name,omitempty"`
	Val                    string                      `protobuf:"bytes,6,opt,name=val" json:"val,omitempty"`
}

func (m *SecurityGroupIPSet) Reset()                    { *m = SecurityGroupIPSet{} }
func (m *SecurityGroupIPSet) String() string            { return proto.CompactTextString(m) }
func (*SecurityGroupIPSet) ProtoMessage()               {}
func (*SecurityGroupIPSet) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{51} }

func (m *SecurityGroupIPSet) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *SecurityGroupIPSet) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SecurityGroupIPSet) GetIpsetType() int32 {
	if m != nil {
		return m.IpsetType
	}
	return 0
}

func (m *SecurityGroupIPSet) GetSecurityGroupIpsetId() string {
	if m != nil {
		return m.SecurityGroupIpsetId
	}
	return ""
}

func (m *SecurityGroupIPSet) GetSecurityGroupIpsetName() string {
	if m != nil {
		return m.SecurityGroupIpsetName
	}
	return ""
}

func (m *SecurityGroupIPSet) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

type SecurityGroupRule struct {
	Action              string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	Priority            int32  `protobuf:"varint,2,opt,name=priority" json:"priority,omitempty"`
	Protocol            string `protobuf:"bytes,3,opt,name=protocol" json:"protocol,omitempty"`
	SecurityGroupId     string `protobuf:"bytes,4,opt,name=security_group_id,json=securityGroupId" json:"security_group_id,omitempty"`
	SecurityGroupRuleId string `protobuf:"bytes,5,opt,name=security_group_rule_id,json=securityGroupRuleId" json:"security_group_rule_id,omitempty"`
	Val1                string `protobuf:"bytes,6,opt,name=val1" json:"val1,omitempty"`
	Val2                string `protobuf:"bytes,7,opt,name=val2" json:"val2,omitempty"`
	Val3                string `protobuf:"bytes,8,opt,name=val3" json:"val3,omitempty"`
}

func (m *SecurityGroupRule) Reset()                    { *m = SecurityGroupRule{} }
func (m *SecurityGroupRule) String() string            { return proto.CompactTextString(m) }
func (*SecurityGroupRule) ProtoMessage()               {}
func (*SecurityGroupRule) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{52} }

func (m *SecurityGroupRule) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *SecurityGroupRule) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *SecurityGroupRule) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *SecurityGroupRule) GetSecurityGroupId() string {
	if m != nil {
		return m.SecurityGroupId
	}
	return ""
}

func (m *SecurityGroupRule) GetSecurityGroupRuleId() string {
	if m != nil {
		return m.SecurityGroupRuleId
	}
	return ""
}

func (m *SecurityGroupRule) GetVal1() string {
	if m != nil {
		return m.Val1
	}
	return ""
}

func (m *SecurityGroupRule) GetVal2() string {
	if m != nil {
		return m.Val2
	}
	return ""
}

func (m *SecurityGroupRule) GetVal3() string {
	if m != nil {
		return m.Val3
	}
	return ""
}

type SecurityGroupSnapshot struct {
	GroupId                 string               `protobuf:"bytes,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	Rules                   []*SecurityGroupRule `protobuf:"bytes,2,rep,name=rules" json:"rules,omitempty"`
	SecurityGroupSnapshotId string               `protobuf:"bytes,3,opt,name=security_group_snapshot_id,json=securityGroupSnapshotId" json:"security_group_snapshot_id,omitempty"`
}

func (m *SecurityGroupSnapshot) Reset()                    { *m = SecurityGroupSnapshot{} }
func (m *SecurityGroupSnapshot) String() string            { return proto.CompactTextString(m) }
func (*SecurityGroupSnapshot) ProtoMessage()               {}
func (*SecurityGroupSnapshot) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{53} }

func (m *SecurityGroupSnapshot) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

func (m *SecurityGroupSnapshot) GetRules() []*SecurityGroupRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

func (m *SecurityGroupSnapshot) GetSecurityGroupSnapshotId() string {
	if m != nil {
		return m.SecurityGroupSnapshotId
	}
	return ""
}

type ServerCertificate struct {
	CreateTime            *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description           string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	CertificateContent    string                      `protobuf:"bytes,3,opt,name=certificate_content,json=certificateContent" json:"certificate_content,omitempty"`
	PrivateKey            string                      `protobuf:"bytes,4,opt,name=private_key,json=privateKey" json:"private_key,omitempty"`
	ServerCertificateId   string                      `protobuf:"bytes,5,opt,name=server_certificate_id,json=serverCertificateId" json:"server_certificate_id,omitempty"`
	ServerCertificateName string                      `protobuf:"bytes,6,opt,name=server_certificate_name,json=serverCertificateName" json:"server_certificate_name,omitempty"`
}

func (m *ServerCertificate) Reset()                    { *m = ServerCertificate{} }
func (m *ServerCertificate) String() string            { return proto.CompactTextString(m) }
func (*ServerCertificate) ProtoMessage()               {}
func (*ServerCertificate) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{54} }

func (m *ServerCertificate) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *ServerCertificate) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ServerCertificate) GetCertificateContent() string {
	if m != nil {
		return m.CertificateContent
	}
	return ""
}

func (m *ServerCertificate) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *ServerCertificate) GetServerCertificateId() string {
	if m != nil {
		return m.ServerCertificateId
	}
	return ""
}

func (m *ServerCertificate) GetServerCertificateName() string {
	if m != nil {
		return m.ServerCertificateName
	}
	return ""
}

type Snapshot struct {
	CreateTime         *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Description        string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	HeadChain          string                      `protobuf:"bytes,3,opt,name=head_chain,json=headChain" json:"head_chain,omitempty"`
	IsHead             int32                       `protobuf:"varint,4,opt,name=is_head,json=isHead" json:"is_head,omitempty"`
	IsTaken            int32                       `protobuf:"varint,5,opt,name=is_taken,json=isTaken" json:"is_taken,omitempty"`
	LatestSnapshotTime *google_protobuf1.Timestamp `protobuf:"bytes,6,opt,name=latest_snapshot_time,json=latestSnapshotTime" json:"latest_snapshot_time,omitempty"`
	ParentId           string                      `protobuf:"bytes,7,opt,name=parent_id,json=parentId" json:"parent_id,omitempty"`
	Provider           string                      `protobuf:"bytes,8,opt,name=provider" json:"provider,omitempty"`
	Resource           *Resource                   `protobuf:"bytes,9,opt,name=resource" json:"resource,omitempty"`
	RootId             string                      `protobuf:"bytes,10,opt,name=root_id,json=rootId" json:"root_id,omitempty"`
	Size               int32                       `protobuf:"varint,11,opt,name=size" json:"size,omitempty"`
	SnapshotId         string                      `protobuf:"bytes,12,opt,name=snapshot_id,json=snapshotId" json:"snapshot_id,omitempty"`
	SnapshotName       string                      `protobuf:"bytes,13,opt,name=snapshot_name,json=snapshotName" json:"snapshot_name,omitempty"`
	SnapshotResource   *SnapshotResource           `protobuf:"bytes,14,opt,name=snapshot_resource,json=snapshotResource" json:"snapshot_resource,omitempty"`
	SnapshotTime       *google_protobuf1.Timestamp `protobuf:"bytes,15,opt,name=snapshot_time,json=snapshotTime" json:"snapshot_time,omitempty"`
	SnapshotType       string                      `protobuf:"bytes,16,opt,name=snapshot_type,json=snapshotType" json:"snapshot_type,omitempty"`
	Status             string                      `protobuf:"bytes,17,opt,name=status" json:"status,omitempty"`
	StatusTime         *google_protobuf1.Timestamp `protobuf:"bytes,18,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SubCode            int32                       `protobuf:"varint,19,opt,name=sub_code,json=subCode" json:"sub_code,omitempty"`
	Tags               []*Tag                      `protobuf:"bytes,20,rep,name=tags" json:"tags,omitempty"`
	TotalCount         int32                       `protobuf:"varint,21,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	TotalSize          int32                       `protobuf:"varint,22,opt,name=total_size,json=totalSize" json:"total_size,omitempty"`
	TransitionStatus   string                      `protobuf:"bytes,23,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	VirtualSize        int32                       `protobuf:"varint,24,opt,name=virtual_size,json=virtualSize" json:"virtual_size,omitempty"`
	Visibility         string                      `protobuf:"bytes,25,opt,name=visibility" json:"visibility,omitempty"`
}

func (m *Snapshot) Reset()                    { *m = Snapshot{} }
func (m *Snapshot) String() string            { return proto.CompactTextString(m) }
func (*Snapshot) ProtoMessage()               {}
func (*Snapshot) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{55} }

func (m *Snapshot) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Snapshot) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Snapshot) GetHeadChain() string {
	if m != nil {
		return m.HeadChain
	}
	return ""
}

func (m *Snapshot) GetIsHead() int32 {
	if m != nil {
		return m.IsHead
	}
	return 0
}

func (m *Snapshot) GetIsTaken() int32 {
	if m != nil {
		return m.IsTaken
	}
	return 0
}

func (m *Snapshot) GetLatestSnapshotTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.LatestSnapshotTime
	}
	return nil
}

func (m *Snapshot) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *Snapshot) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *Snapshot) GetResource() *Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *Snapshot) GetRootId() string {
	if m != nil {
		return m.RootId
	}
	return ""
}

func (m *Snapshot) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Snapshot) GetSnapshotId() string {
	if m != nil {
		return m.SnapshotId
	}
	return ""
}

func (m *Snapshot) GetSnapshotName() string {
	if m != nil {
		return m.SnapshotName
	}
	return ""
}

func (m *Snapshot) GetSnapshotResource() *SnapshotResource {
	if m != nil {
		return m.SnapshotResource
	}
	return nil
}

func (m *Snapshot) GetSnapshotTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.SnapshotTime
	}
	return nil
}

func (m *Snapshot) GetSnapshotType() string {
	if m != nil {
		return m.SnapshotType
	}
	return ""
}

func (m *Snapshot) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Snapshot) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Snapshot) GetSubCode() int32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *Snapshot) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Snapshot) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *Snapshot) GetTotalSize() int32 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func (m *Snapshot) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Snapshot) GetVirtualSize() int32 {
	if m != nil {
		return m.VirtualSize
	}
	return 0
}

func (m *Snapshot) GetVisibility() string {
	if m != nil {
		return m.Visibility
	}
	return ""
}

type SnapshotResource struct {
	OsFamily string `protobuf:"bytes,1,opt,name=os_family,json=osFamily" json:"os_family,omitempty"`
	Platform string `protobuf:"bytes,2,opt,name=platform" json:"platform,omitempty"`
}

func (m *SnapshotResource) Reset()                    { *m = SnapshotResource{} }
func (m *SnapshotResource) String() string            { return proto.CompactTextString(m) }
func (*SnapshotResource) ProtoMessage()               {}
func (*SnapshotResource) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{56} }

func (m *SnapshotResource) GetOsFamily() string {
	if m != nil {
		return m.OsFamily
	}
	return ""
}

func (m *SnapshotResource) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

type User struct {
	Email  string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{57} }

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type Zone struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	ZoneId string `protobuf:"bytes,2,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
}

func (m *Zone) Reset()                    { *m = Zone{} }
func (m *Zone) String() string            { return proto.CompactTextString(m) }
func (*Zone) ProtoMessage()               {}
func (*Zone) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{58} }

func (m *Zone) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Zone) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

type Cluster struct {
	GlobalUuid            string                         `protobuf:"bytes,1,opt,name=global_uuid,json=globalUuid" json:"global_uuid,omitempty"`
	AutoBackupTime        int32                          `protobuf:"varint,2,opt,name=auto_backup_time,json=autoBackupTime" json:"auto_backup_time,omitempty"`
	HealthCheckEnablement *Cluster_HealthCheckEnablement `protobuf:"bytes,3,opt,name=health_check_enablement,json=healthCheckEnablement" json:"health_check_enablement,omitempty"`
	CfgmgmtId             string                         `protobuf:"bytes,4,opt,name=cfgmgmt_id,json=cfgmgmtId" json:"cfgmgmt_id,omitempty"`
	CustomService         *Cluster_CustomService         `protobuf:"bytes,5,opt,name=custom_service,json=customService" json:"custom_service,omitempty"`
	AppId                 string                         `protobuf:"bytes,6,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	AdvancedActions       *Cluster_AdvancedActions       `protobuf:"bytes,7,opt,name=advanced_actions,json=advancedActions" json:"advanced_actions,omitempty"`
	ConsoleId             string                         `protobuf:"bytes,8,opt,name=console_id,json=consoleId" json:"console_id,omitempty"`
	CreateTime            *google_protobuf1.Timestamp    `protobuf:"bytes,9,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	ClusterId             string                         `protobuf:"bytes,10,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	Owner                 string                         `protobuf:"bytes,11,opt,name=owner" json:"owner,omitempty"`
	UpgradeTime           *google_protobuf1.Timestamp    `protobuf:"bytes,12,opt,name=upgrade_time,json=upgradeTime" json:"upgrade_time,omitempty"`
	// google.protobuf.Any children = 13;
	IncrementalBackupSupported int32 `protobuf:"varint,14,opt,name=incremental_backup_supported,json=incrementalBackupSupported" json:"incremental_backup_supported,omitempty"`
	ClusterType                int32 `protobuf:"varint,15,opt,name=cluster_type,json=clusterType" json:"cluster_type,omitempty"`
	SubCode                    int32 `protobuf:"varint,16,opt,name=sub_code,json=subCode" json:"sub_code,omitempty"`
	MetadataRootAccess         int32 `protobuf:"varint,17,opt,name=metadata_root_access,json=metadataRootAccess" json:"metadata_root_access,omitempty"`
	// google.protobuf.Any add_links = 18;
	UpgradeStatus string                      `protobuf:"bytes,19,opt,name=upgrade_status,json=upgradeStatus" json:"upgrade_status,omitempty"`
	StatusTime    *google_protobuf1.Timestamp `protobuf:"bytes,20,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	NodeCount     int32                       `protobuf:"varint,21,opt,name=node_count,json=nodeCount" json:"node_count,omitempty"`
	AppVersion    string                      `protobuf:"bytes,22,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
	Vxnet         *VxNet                      `protobuf:"bytes,23,opt,name=vxnet" json:"vxnet,omitempty"`
	Status        string                      `protobuf:"bytes,24,opt,name=status" json:"status,omitempty"`
	Description   string                      `protobuf:"bytes,25,opt,name=description" json:"description,omitempty"`
	// google.protobuf.Any parent = 26;
	// repeated google.protobuf.Any tags = 27;
	AppInfo          *Cluster_AppInfo `protobuf:"bytes,28,opt,name=app_info,json=appInfo" json:"app_info,omitempty"`
	TransitionStatus string           `protobuf:"bytes,29,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	ReuseHyper       int32            `protobuf:"varint,30,opt,name=reuse_hyper,json=reuseHyper" json:"reuse_hyper,omitempty"`
	Controller       string           `protobuf:"bytes,31,opt,name=controller" json:"controller,omitempty"`
	// repeated google.protobuf.Any upgrade_policy = 32;
	PartnerAccess int32    `protobuf:"varint,33,opt,name=partner_access,json=partnerAccess" json:"partner_access,omitempty"`
	Name          string   `protobuf:"bytes,34,opt,name=name" json:"name,omitempty"`
	Roles         []string `protobuf:"bytes,35,rep,name=roles" json:"roles,omitempty"`
	// google.protobuf.Timestamp lastest_snapshot_time = 36;
	LastestSnapshotTime string `protobuf:"bytes,36,opt,name=lastest_snapshot_time,json=lastestSnapshotTime" json:"lastest_snapshot_time,omitempty"`
	RootUserId          string `protobuf:"bytes,37,opt,name=root_user_id,json=rootUserId" json:"root_user_id,omitempty"`
	Debug               int32  `protobuf:"varint,38,opt,name=debug" json:"debug,omitempty"`
	// repeated google.protobuf.Any backup_policy = 39;
	// repeated google.protobuf.Any endpoints = 40;
	Backup         *Cluster_HealthCheckEnablement `protobuf:"bytes,41,opt,name=backup" json:"backup,omitempty"`
	AppVersionInfo *Cluster_AppVersionInfo        `protobuf:"bytes,42,opt,name=app_version_info,json=appVersionInfo" json:"app_version_info,omitempty"`
}

func (m *Cluster) Reset()                    { *m = Cluster{} }
func (m *Cluster) String() string            { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()               {}
func (*Cluster) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{59} }

func (m *Cluster) GetGlobalUuid() string {
	if m != nil {
		return m.GlobalUuid
	}
	return ""
}

func (m *Cluster) GetAutoBackupTime() int32 {
	if m != nil {
		return m.AutoBackupTime
	}
	return 0
}

func (m *Cluster) GetHealthCheckEnablement() *Cluster_HealthCheckEnablement {
	if m != nil {
		return m.HealthCheckEnablement
	}
	return nil
}

func (m *Cluster) GetCfgmgmtId() string {
	if m != nil {
		return m.CfgmgmtId
	}
	return ""
}

func (m *Cluster) GetCustomService() *Cluster_CustomService {
	if m != nil {
		return m.CustomService
	}
	return nil
}

func (m *Cluster) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *Cluster) GetAdvancedActions() *Cluster_AdvancedActions {
	if m != nil {
		return m.AdvancedActions
	}
	return nil
}

func (m *Cluster) GetConsoleId() string {
	if m != nil {
		return m.ConsoleId
	}
	return ""
}

func (m *Cluster) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Cluster) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *Cluster) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Cluster) GetUpgradeTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UpgradeTime
	}
	return nil
}

func (m *Cluster) GetIncrementalBackupSupported() int32 {
	if m != nil {
		return m.IncrementalBackupSupported
	}
	return 0
}

func (m *Cluster) GetClusterType() int32 {
	if m != nil {
		return m.ClusterType
	}
	return 0
}

func (m *Cluster) GetSubCode() int32 {
	if m != nil {
		return m.SubCode
	}
	return 0
}

func (m *Cluster) GetMetadataRootAccess() int32 {
	if m != nil {
		return m.MetadataRootAccess
	}
	return 0
}

func (m *Cluster) GetUpgradeStatus() string {
	if m != nil {
		return m.UpgradeStatus
	}
	return ""
}

func (m *Cluster) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Cluster) GetNodeCount() int32 {
	if m != nil {
		return m.NodeCount
	}
	return 0
}

func (m *Cluster) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *Cluster) GetVxnet() *VxNet {
	if m != nil {
		return m.Vxnet
	}
	return nil
}

func (m *Cluster) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Cluster) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Cluster) GetAppInfo() *Cluster_AppInfo {
	if m != nil {
		return m.AppInfo
	}
	return nil
}

func (m *Cluster) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *Cluster) GetReuseHyper() int32 {
	if m != nil {
		return m.ReuseHyper
	}
	return 0
}

func (m *Cluster) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *Cluster) GetPartnerAccess() int32 {
	if m != nil {
		return m.PartnerAccess
	}
	return 0
}

func (m *Cluster) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Cluster) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *Cluster) GetLastestSnapshotTime() string {
	if m != nil {
		return m.LastestSnapshotTime
	}
	return ""
}

func (m *Cluster) GetRootUserId() string {
	if m != nil {
		return m.RootUserId
	}
	return ""
}

func (m *Cluster) GetDebug() int32 {
	if m != nil {
		return m.Debug
	}
	return 0
}

func (m *Cluster) GetBackup() *Cluster_HealthCheckEnablement {
	if m != nil {
		return m.Backup
	}
	return nil
}

func (m *Cluster) GetAppVersionInfo() *Cluster_AppVersionInfo {
	if m != nil {
		return m.AppVersionInfo
	}
	return nil
}

type Cluster_HealthCheckEnablement struct {
	Ca       bool `protobuf:"varint,1,opt,name=ca" json:"ca,omitempty"`
	Orderer  bool `protobuf:"varint,2,opt,name=orderer" json:"orderer,omitempty"`
	PeerNode bool `protobuf:"varint,3,opt,name=peer_node,json=peerNode" json:"peer_node,omitempty"`
}

func (m *Cluster_HealthCheckEnablement) Reset()         { *m = Cluster_HealthCheckEnablement{} }
func (m *Cluster_HealthCheckEnablement) String() string { return proto.CompactTextString(m) }
func (*Cluster_HealthCheckEnablement) ProtoMessage()    {}
func (*Cluster_HealthCheckEnablement) Descriptor() ([]byte, []int) {
	return fileDescriptor27, []int{59, 0}
}

func (m *Cluster_HealthCheckEnablement) GetCa() bool {
	if m != nil {
		return m.Ca
	}
	return false
}

func (m *Cluster_HealthCheckEnablement) GetOrderer() bool {
	if m != nil {
		return m.Orderer
	}
	return false
}

func (m *Cluster_HealthCheckEnablement) GetPeerNode() bool {
	if m != nil {
		return m.PeerNode
	}
	return false
}

type Cluster_CustomService struct {
}

func (m *Cluster_CustomService) Reset()                    { *m = Cluster_CustomService{} }
func (m *Cluster_CustomService) String() string            { return proto.CompactTextString(m) }
func (*Cluster_CustomService) ProtoMessage()               {}
func (*Cluster_CustomService) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{59, 1} }

type Cluster_AdvancedActions struct {
}

func (m *Cluster_AdvancedActions) Reset()                    { *m = Cluster_AdvancedActions{} }
func (m *Cluster_AdvancedActions) String() string            { return proto.CompactTextString(m) }
func (*Cluster_AdvancedActions) ProtoMessage()               {}
func (*Cluster_AdvancedActions) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{59, 2} }

type Cluster_AppInfo struct {
	Icon    string `protobuf:"bytes,1,opt,name=icon" json:"icon,omitempty"`
	AppId   string `protobuf:"bytes,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	AppName string `protobuf:"bytes,3,opt,name=app_name,json=appName" json:"app_name,omitempty"`
}

func (m *Cluster_AppInfo) Reset()                    { *m = Cluster_AppInfo{} }
func (m *Cluster_AppInfo) String() string            { return proto.CompactTextString(m) }
func (*Cluster_AppInfo) ProtoMessage()               {}
func (*Cluster_AppInfo) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{59, 3} }

func (m *Cluster_AppInfo) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *Cluster_AppInfo) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *Cluster_AppInfo) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

type Cluster_AppVersionInfo struct {
	StatusTime  *google_protobuf1.Timestamp `protobuf:"bytes,1,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	ResourceKit string                      `protobuf:"bytes,2,opt,name=resource_kit,json=resourceKit" json:"resource_kit,omitempty"`
	Name        string                      `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	VersionId   string                      `protobuf:"bytes,4,opt,name=version_id,json=versionId" json:"version_id,omitempty"`
}

func (m *Cluster_AppVersionInfo) Reset()                    { *m = Cluster_AppVersionInfo{} }
func (m *Cluster_AppVersionInfo) String() string            { return proto.CompactTextString(m) }
func (*Cluster_AppVersionInfo) ProtoMessage()               {}
func (*Cluster_AppVersionInfo) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{59, 4} }

func (m *Cluster_AppVersionInfo) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Cluster_AppVersionInfo) GetResourceKit() string {
	if m != nil {
		return m.ResourceKit
	}
	return ""
}

func (m *Cluster_AppVersionInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Cluster_AppVersionInfo) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

type ClasterNode struct {
	// "passphraseless":null,
	VerticalScalingPolicy string `protobuf:"bytes,2,opt,name=vertical_scaling_policy,json=verticalScalingPolicy" json:"vertical_scaling_policy,omitempty"`
	VxnetId               string `protobuf:"bytes,3,opt,name=vxnet_id,json=vxnetId" json:"vxnet_id,omitempty"`
	// "destroy_service":null,
	CustomService string `protobuf:"bytes,5,opt,name=custom_service,json=customService" json:"custom_service,omitempty"`
	AppId         string `protobuf:"bytes,6,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// "advanced_actions":null,
	ConsoleId   string                      `protobuf:"bytes,8,opt,name=console_id,json=consoleId" json:"console_id,omitempty"`
	StopService string                      `protobuf:"bytes,9,opt,name=stop_service,json=stopService" json:"stop_service,omitempty"`
	UserAccess  int32                       `protobuf:"varint,10,opt,name=user_access,json=userAccess" json:"user_access,omitempty"`
	CreateTime  *google_protobuf1.Timestamp `protobuf:"bytes,11,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	ClusterId   string                      `protobuf:"bytes,12,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	PrivateIp   string                      `protobuf:"bytes,13,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	// "upgrade_service":null,
	Owner                      string `protobuf:"bytes,15,opt,name=owner" json:"owner,omitempty"`
	AlarmStatus                string `protobuf:"bytes,16,opt,name=alarm_status,json=alarmStatus" json:"alarm_status,omitempty"`
	IncrementalBackupSupported int32  `protobuf:"varint,17,opt,name=incremental_backup_supported,json=incrementalBackupSupported" json:"incremental_backup_supported,omitempty"`
	// "restore_service":null,
	ServerId         int32                       `protobuf:"varint,19,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	Monitor          string                      `protobuf:"bytes,20,opt,name=monitor" json:"monitor,omitempty"`
	HealthStatus     string                      `protobuf:"bytes,21,opt,name=health_status,json=healthStatus" json:"health_status,omitempty"`
	IsBackup         int32                       `protobuf:"varint,22,opt,name=is_backup,json=isBackup" json:"is_backup,omitempty"`
	RootUserId       string                      `protobuf:"bytes,23,opt,name=root_user_id,json=rootUserId" json:"root_user_id,omitempty"`
	Role             string                      `protobuf:"bytes,24,opt,name=role" json:"role,omitempty"`
	Memory           int32                       `protobuf:"varint,25,opt,name=memory" json:"memory,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,26,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	RestartService   string                      `protobuf:"bytes,27,opt,name=restart_service,json=restartService" json:"restart_service,omitempty"`
	AppVersion       string                      `protobuf:"bytes,28,opt,name=app_version,json=appVersion" json:"app_version,omitempty"`
	Status           string                      `protobuf:"bytes,29,opt,name=status" json:"status,omitempty"`
	GlobalServerId   int32                       `protobuf:"varint,30,opt,name=global_server_id,json=globalServerId" json:"global_server_id,omitempty"`
	ScaleInService   string                      `protobuf:"bytes,31,opt,name=scale_in_service,json=scaleInService" json:"scale_in_service,omitempty"`
	AutoBackup       int32                       `protobuf:"varint,32,opt,name=auto_backup,json=autoBackup" json:"auto_backup,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,33,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	// "custom_metadata":null,
	StorageSize int32 `protobuf:"varint,35,opt,name=storage_size,json=storageSize" json:"storage_size,omitempty"`
	// "server_id_upper_bound":null,
	ImageId        string `protobuf:"bytes,37,opt,name=image_id,json=imageId" json:"image_id,omitempty"`
	Controller     string `protobuf:"bytes,38,opt,name=controller" json:"controller,omitempty"`
	NodeId         string `protobuf:"bytes,39,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	AgentInstalled int32  `protobuf:"varint,40,opt,name=agent_installed,json=agentInstalled" json:"agent_installed,omitempty"`
	// "reserved_ips":null,
	// "backup_policy":null,
	StartService string `protobuf:"bytes,43,opt,name=start_service,json=startService" json:"start_service,omitempty"`
	VolumeIds    string `protobuf:"bytes,44,opt,name=volume_ids,json=volumeIds" json:"volume_ids,omitempty"`
	Name         string `protobuf:"bytes,45,opt,name=name" json:"name,omitempty"`
	Hypervisor   string `protobuf:"bytes,46,opt,name=hypervisor" json:"hypervisor,omitempty"`
	// "delete_snapshot_service":null,
	InitService     string `protobuf:"bytes,48,opt,name=init_service,json=initService" json:"init_service,omitempty"`
	InstanceId      string `protobuf:"bytes,49,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	ScaleOutService string `protobuf:"bytes,50,opt,name=scale_out_service,json=scaleOutService" json:"scale_out_service,omitempty"`
	Repl            string `protobuf:"bytes,51,opt,name=repl" json:"repl,omitempty"`
	// "custom_metadata_script":null,
	HealthCheck    string `protobuf:"bytes,52,opt,name=health_check,json=healthCheck" json:"health_check,omitempty"`
	Debug          int32  `protobuf:"varint,53,opt,name=debug" json:"debug,omitempty"`
	SingleNodeRepl string `protobuf:"bytes,54,opt,name=single_node_repl,json=singleNodeRepl" json:"single_node_repl,omitempty"`
	// "pub_key":null,
	GroupId int32 `protobuf:"varint,56,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	// "backup_service":null,
	Cpu int32 `protobuf:"varint,58,opt,name=cpu" json:"cpu,omitempty"`
}

func (m *ClasterNode) Reset()                    { *m = ClasterNode{} }
func (m *ClasterNode) String() string            { return proto.CompactTextString(m) }
func (*ClasterNode) ProtoMessage()               {}
func (*ClasterNode) Descriptor() ([]byte, []int) { return fileDescriptor27, []int{60} }

func (m *ClasterNode) GetVerticalScalingPolicy() string {
	if m != nil {
		return m.VerticalScalingPolicy
	}
	return ""
}

func (m *ClasterNode) GetVxnetId() string {
	if m != nil {
		return m.VxnetId
	}
	return ""
}

func (m *ClasterNode) GetCustomService() string {
	if m != nil {
		return m.CustomService
	}
	return ""
}

func (m *ClasterNode) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *ClasterNode) GetConsoleId() string {
	if m != nil {
		return m.ConsoleId
	}
	return ""
}

func (m *ClasterNode) GetStopService() string {
	if m != nil {
		return m.StopService
	}
	return ""
}

func (m *ClasterNode) GetUserAccess() int32 {
	if m != nil {
		return m.UserAccess
	}
	return 0
}

func (m *ClasterNode) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *ClasterNode) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *ClasterNode) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *ClasterNode) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ClasterNode) GetAlarmStatus() string {
	if m != nil {
		return m.AlarmStatus
	}
	return ""
}

func (m *ClasterNode) GetIncrementalBackupSupported() int32 {
	if m != nil {
		return m.IncrementalBackupSupported
	}
	return 0
}

func (m *ClasterNode) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *ClasterNode) GetMonitor() string {
	if m != nil {
		return m.Monitor
	}
	return ""
}

func (m *ClasterNode) GetHealthStatus() string {
	if m != nil {
		return m.HealthStatus
	}
	return ""
}

func (m *ClasterNode) GetIsBackup() int32 {
	if m != nil {
		return m.IsBackup
	}
	return 0
}

func (m *ClasterNode) GetRootUserId() string {
	if m != nil {
		return m.RootUserId
	}
	return ""
}

func (m *ClasterNode) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *ClasterNode) GetMemory() int32 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *ClasterNode) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *ClasterNode) GetRestartService() string {
	if m != nil {
		return m.RestartService
	}
	return ""
}

func (m *ClasterNode) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *ClasterNode) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ClasterNode) GetGlobalServerId() int32 {
	if m != nil {
		return m.GlobalServerId
	}
	return 0
}

func (m *ClasterNode) GetScaleInService() string {
	if m != nil {
		return m.ScaleInService
	}
	return ""
}

func (m *ClasterNode) GetAutoBackup() int32 {
	if m != nil {
		return m.AutoBackup
	}
	return 0
}

func (m *ClasterNode) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *ClasterNode) GetStorageSize() int32 {
	if m != nil {
		return m.StorageSize
	}
	return 0
}

func (m *ClasterNode) GetImageId() string {
	if m != nil {
		return m.ImageId
	}
	return ""
}

func (m *ClasterNode) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *ClasterNode) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ClasterNode) GetAgentInstalled() int32 {
	if m != nil {
		return m.AgentInstalled
	}
	return 0
}

func (m *ClasterNode) GetStartService() string {
	if m != nil {
		return m.StartService
	}
	return ""
}

func (m *ClasterNode) GetVolumeIds() string {
	if m != nil {
		return m.VolumeIds
	}
	return ""
}

func (m *ClasterNode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClasterNode) GetHypervisor() string {
	if m != nil {
		return m.Hypervisor
	}
	return ""
}

func (m *ClasterNode) GetInitService() string {
	if m != nil {
		return m.InitService
	}
	return ""
}

func (m *ClasterNode) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *ClasterNode) GetScaleOutService() string {
	if m != nil {
		return m.ScaleOutService
	}
	return ""
}

func (m *ClasterNode) GetRepl() string {
	if m != nil {
		return m.Repl
	}
	return ""
}

func (m *ClasterNode) GetHealthCheck() string {
	if m != nil {
		return m.HealthCheck
	}
	return ""
}

func (m *ClasterNode) GetDebug() int32 {
	if m != nil {
		return m.Debug
	}
	return 0
}

func (m *ClasterNode) GetSingleNodeRepl() string {
	if m != nil {
		return m.SingleNodeRepl
	}
	return ""
}

func (m *ClasterNode) GetGroupId() int32 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

func (m *ClasterNode) GetCpu() int32 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func init() {
	proto.RegisterType((*Tag)(nil), "service.Tag")
	proto.RegisterType((*ResourceTagPair)(nil), "service.ResourceTagPair")
	proto.RegisterType((*ResourceTypeCount)(nil), "service.ResourceTypeCount")
	proto.RegisterType((*EIP)(nil), "service.EIP")
	proto.RegisterType((*Resource)(nil), "service.Resource")
	proto.RegisterType((*Job)(nil), "service.Job")
	proto.RegisterType((*Volume)(nil), "service.Volume")
	proto.RegisterType((*NIC)(nil), "service.NIC")
	proto.RegisterType((*KeyPair)(nil), "service.KeyPair")
	proto.RegisterType((*VxNet)(nil), "service.VxNet")
	proto.RegisterType((*Router)(nil), "service.Router")
	proto.RegisterType((*Instance)(nil), "service.Instance")
	proto.RegisterType((*InstanceVxNet)(nil), "service.InstanceVxNet")
	proto.RegisterType((*Image)(nil), "service.Image")
	proto.RegisterType((*ImageUser)(nil), "service.ImageUser")
	proto.RegisterType((*Mongo)(nil), "service.Mongo")
	proto.RegisterType((*MongoNode)(nil), "service.MongoNode")
	proto.RegisterType((*LoadBalancer)(nil), "service.LoadBalancer")
	proto.RegisterType((*LoadBalancerListener)(nil), "service.LoadBalancerListener")
	proto.RegisterType((*LoadBalancerBackend)(nil), "service.LoadBalancerBackend")
	proto.RegisterType((*Cache)(nil), "service.Cache")
	proto.RegisterType((*CacheNode)(nil), "service.CacheNode")
	proto.RegisterType((*CacheParameter)(nil), "service.CacheParameter")
	proto.RegisterType((*CacheParameterGroup)(nil), "service.CacheParameterGroup")
	proto.RegisterType((*CachePrivateIP)(nil), "service.CachePrivateIP")
	proto.RegisterType((*Data)(nil), "service.Data")
	proto.RegisterType((*DHCPOption)(nil), "service.DHCPOption")
	proto.RegisterType((*DNSAlias)(nil), "service.DNSAlias")
	proto.RegisterType((*EIPGroup)(nil), "service.EIPGroup")
	proto.RegisterType((*EIPResource)(nil), "service.EIPResource")
	proto.RegisterType((*Extra)(nil), "service.Extra")
	proto.RegisterType((*File)(nil), "service.File")
	proto.RegisterType((*InstanceType)(nil), "service.InstanceType")
	proto.RegisterType((*LoadBalancerPolicy)(nil), "service.LoadBalancerPolicy")
	proto.RegisterType((*LoadBalancerPolicyRule)(nil), "service.LoadBalancerPolicyRule")
	proto.RegisterType((*Meter)(nil), "service.Meter")
	proto.RegisterType((*MongoParameter)(nil), "service.MongoParameter")
	proto.RegisterType((*MongoPrivateIP)(nil), "service.MongoPrivateIP")
	proto.RegisterType((*NICIP)(nil), "service.NICIP")
	proto.RegisterType((*RDB)(nil), "service.RDB")
	proto.RegisterType((*RDBFile)(nil), "service.RDBFile")
	proto.RegisterType((*RDBParameter)(nil), "service.RDBParameter")
	proto.RegisterType((*RDBParameters)(nil), "service.RDBParameters")
	proto.RegisterType((*RDBPrivateIP)(nil), "service.RDBPrivateIP")
	proto.RegisterType((*RouterStatic)(nil), "service.RouterStatic")
	proto.RegisterType((*RouterStaticEntry)(nil), "service.RouterStaticEntry")
	proto.RegisterType((*RouterVxNet)(nil), "service.RouterVxNet")
	proto.RegisterType((*S2DefaultParameters)(nil), "service.S2DefaultParameters")
	proto.RegisterType((*S2Server)(nil), "service.S2Server")
	proto.RegisterType((*S2SharedTarget)(nil), "service.S2SharedTarget")
	proto.RegisterType((*SecurityGroup)(nil), "service.SecurityGroup")
	proto.RegisterType((*SecurityGroupIPSet)(nil), "service.SecurityGroupIPSet")
	proto.RegisterType((*SecurityGroupRule)(nil), "service.SecurityGroupRule")
	proto.RegisterType((*SecurityGroupSnapshot)(nil), "service.SecurityGroupSnapshot")
	proto.RegisterType((*ServerCertificate)(nil), "service.ServerCertificate")
	proto.RegisterType((*Snapshot)(nil), "service.Snapshot")
	proto.RegisterType((*SnapshotResource)(nil), "service.SnapshotResource")
	proto.RegisterType((*User)(nil), "service.User")
	proto.RegisterType((*Zone)(nil), "service.Zone")
	proto.RegisterType((*Cluster)(nil), "service.Cluster")
	proto.RegisterType((*Cluster_HealthCheckEnablement)(nil), "service.Cluster.HealthCheckEnablement")
	proto.RegisterType((*Cluster_CustomService)(nil), "service.Cluster.CustomService")
	proto.RegisterType((*Cluster_AdvancedActions)(nil), "service.Cluster.AdvancedActions")
	proto.RegisterType((*Cluster_AppInfo)(nil), "service.Cluster.AppInfo")
	proto.RegisterType((*Cluster_AppVersionInfo)(nil), "service.Cluster.AppVersionInfo")
	proto.RegisterType((*ClasterNode)(nil), "service.ClasterNode")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor27) }

var fileDescriptor27 = []byte{
	// 7403 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x7c, 0x4d, 0x73, 0xe4, 0x46,
	0x72, 0x68, 0xb0, 0xc9, 0xfe, 0xca, 0xfe, 0x60, 0x13, 0xfc, 0x6a, 0x72, 0xbe, 0x7b, 0x34, 0x23,
	0x4a, 0x2b, 0xcd, 0x48, 0xa3, 0x95, 0x56, 0x6f, 0xf5, 0xf6, 0xed, 0xce, 0x70, 0x46, 0x4f, 0xbd,
	0x9a, 0x19, 0xf1, 0x35, 0x47, 0x7a, 0x61, 0x1f, 0x16, 0x81, 0x06, 0x8a, 0x4d, 0x2c, 0xd1, 0x00,
	0x04, 0xa0, 0x39, 0xec, 0x3d, 0xed, 0x65, 0x7d, 0x71, 0xf8, 0xe4, 0xf0, 0x5e, 0xec, 0xcb, 0x86,
	0x0f, 0x3e, 0x6c, 0x84, 0xed, 0xf0, 0x1f, 0xd8, 0x83, 0x1d, 0x8e, 0x70, 0xd8, 0xd7, 0x75, 0x84,
	0xc3, 0x17, 0x9f, 0x1d, 0x8e, 0xb0, 0xc3, 0x27, 0xdf, 0xec, 0xc8, 0xcc, 0x2a, 0xa0, 0x80, 0x6e,
	0x92, 0xc3, 0x19, 0x8d, 0xd7, 0x37, 0x54, 0x66, 0x56, 0xa1, 0x50, 0x95, 0x5f, 0x95, 0x99, 0x05,
	0x68, 0x24, 0xd3, 0x50, 0xc4, 0x77, 0xc2, 0x28, 0x48, 0x02, 0xa3, 0x1a, 0x8b, 0xe8, 0xd8, 0xb5,
	0xc5, 0xf6, 0xb5, 0x51, 0x10, 0x8c, 0x3c, 0x71, 0x97, 0xc0, 0xc3, 0xc9, 0xc1, 0xdd, 0xc4, 0x1d,
	0x8b, 0x38, 0xb1, 0xc6, 0x21, 0x53, 0x6e, 0x5f, 0x2f, 0x12, 0x38, 0x22, 0xb6, 0x23, 0x37, 0x4c,
	0x82, 0x88, 0x29, 0x7a, 0x3f, 0x5f, 0x84, 0xc5, 0x67, 0xd6, 0xc8, 0x58, 0x83, 0xb2, 0x1d, 0x78,
	0x41, 0xd4, 0x5d, 0xb8, 0xbe, 0xb0, 0x53, 0x1f, 0x70, 0xc3, 0xf8, 0x04, 0x1a, 0x76, 0x24, 0xac,
	0x44, 0x98, 0x38, 0x72, 0xb7, 0x74, 0x7d, 0x61, 0xa7, 0x71, 0x6f, 0xfb, 0x0e, 0x8f, 0x7a, 0x47,
	0x8d, 0x7a, 0xe7, 0x99, 0x7a, 0xed, 0x00, 0x98, 0x1c, 0x01, 0xc6, 0x75, 0x68, 0xa8, 0xd7, 0xb9,
	0x81, 0xdf, 0x5d, 0xa4, 0x81, 0x75, 0x10, 0xbe, 0x34, 0x78, 0xee, 0x8b, 0xa8, 0xbb, 0xc4, 0x2f,
	0xa5, 0x86, 0x71, 0x0b, 0xda, 0x91, 0x88, 0x83, 0x49, 0x64, 0x0b, 0xd3, 0x0e, 0x26, 0x7e, 0xd2,
	0x2d, 0x5f, 0x5f, 0xd8, 0x29, 0x0f, 0x5a, 0x0a, 0xba, 0x8b, 0x40, 0xe3, 0x53, 0x30, 0x52, 0xb2,
	0xc4, 0x1a, 0x99, 0xa1, 0xe5, 0x46, 0x71, 0xb7, 0x72, 0x7d, 0x71, 0xa7, 0x71, 0xaf, 0x7b, 0x47,
	0x2e, 0xd1, 0x9d, 0x81, 0x24, 0x79, 0x66, 0x8d, 0xf6, 0x2c, 0x37, 0x1a, 0x74, 0xa2, 0x3c, 0x20,
	0x36, 0x7e, 0x08, 0xab, 0xd9, 0x38, 0xd3, 0x50, 0xbd, 0xb3, 0x4a, 0x03, 0x6d, 0xcf, 0x0e, 0x34,
	0x0d, 0x79, 0x02, 0x83, 0x95, 0xa8, 0x08, 0x32, 0xd6, 0xa1, 0x82, 0x53, 0x71, 0x9d, 0x6e, 0x8d,
	0xbf, 0x28, 0xb1, 0x46, 0x7d, 0xc7, 0xd8, 0x84, 0x2a, 0x82, 0x8f, 0xc4, 0xb4, 0x5b, 0x27, 0x38,
	0x52, 0x7d, 0x2e, 0xa6, 0xc6, 0x16, 0xd4, 0x10, 0xe1, 0x5b, 0x63, 0xd1, 0x05, 0xc2, 0x20, 0xe1,
	0x53, 0x6b, 0x2c, 0x7a, 0x7f, 0xb9, 0x00, 0xcb, 0x85, 0xc9, 0x1b, 0xd7, 0xa0, 0x91, 0x4e, 0xd5,
	0x75, 0xe4, 0x56, 0x81, 0x02, 0xf5, 0x1d, 0xe3, 0x26, 0xb4, 0x72, 0xdf, 0x42, 0x3b, 0x56, 0x1f,
	0x34, 0xf5, 0x99, 0x1a, 0x1b, 0x50, 0x89, 0x13, 0x2b, 0x99, 0xc4, 0x72, 0x4b, 0x64, 0x0b, 0x37,
	0x9b, 0x9f, 0x78, 0xb3, 0x97, 0xce, 0xdf, 0x6c, 0x26, 0xa7, 0xcd, 0xce, 0xbe, 0xbc, 0xac, 0x7d,
	0x79, 0xef, 0x29, 0xac, 0xcc, 0x2c, 0x1c, 0xf3, 0x1a, 0xae, 0xf1, 0x02, 0xed, 0x2b, 0x37, 0x5e,
	0x68, 0xee, 0xbd, 0xff, 0x5c, 0x82, 0xc5, 0x47, 0xfd, 0x3d, 0xe3, 0x06, 0x34, 0x2d, 0xcf, 0x8a,
	0xc6, 0xa6, 0xfc, 0x12, 0x5e, 0x8a, 0x06, 0xc1, 0xf6, 0xf9, 0x73, 0x6e, 0x41, 0xdb, 0x8a, 0xe3,
	0xc0, 0x76, 0x91, 0x7d, 0xc7, 0x81, 0xc3, 0x03, 0x96, 0x07, 0xad, 0x14, 0xfa, 0x24, 0x70, 0x84,
	0x71, 0x19, 0xea, 0x43, 0xcb, 0x77, 0x9e, 0xbb, 0x4e, 0x72, 0x48, 0x0b, 0x52, 0x1e, 0x64, 0x00,
	0x7c, 0xcf, 0xd0, 0xf5, 0x3c, 0xd7, 0x1f, 0xf1, 0x10, 0xcc, 0xa8, 0x0d, 0x09, 0xa3, 0x01, 0x0a,
	0x32, 0x52, 0x7e, 0x15, 0x19, 0xa9, 0xcc, 0xca, 0xc8, 0x16, 0xd4, 0x84, 0x1b, 0x9a, 0x96, 0xe3,
	0x44, 0xdd, 0x2a, 0xb3, 0x88, 0x70, 0xc3, 0xfb, 0x8e, 0x13, 0x19, 0x97, 0xa0, 0x8e, 0xa8, 0x51,
	0x14, 0x4c, 0x42, 0xc9, 0x70, 0x48, 0xfb, 0x7f, 0xb1, 0x8d, 0x1b, 0x82, 0x48, 0xd7, 0x91, 0x2c,
	0x57, 0x16, 0x6e, 0xd8, 0x77, 0xd4, 0x70, 0x3a, 0xc7, 0x09, 0x37, 0x44, 0x8e, 0xc3, 0xe1, 0x5c,
	0x3b, 0x34, 0xed, 0xc0, 0x11, 0x71, 0xb7, 0xc1, 0xc3, 0xb9, 0x76, 0xb8, 0x8b, 0x6d, 0xec, 0xe7,
	0x0b, 0xe1, 0x98, 0xae, 0x1d, 0x76, 0x9b, 0xb4, 0x4a, 0x55, 0x6c, 0xf7, 0xed, 0xd0, 0x78, 0x17,
	0x6a, 0x6a, 0x8f, 0xba, 0x2d, 0xfa, 0xfa, 0x95, 0x19, 0xa9, 0x19, 0xa4, 0x24, 0x1a, 0xfb, 0xb5,
	0xcf, 0x62, 0xbf, 0xe5, 0x0b, 0xb1, 0xdf, 0x16, 0xd4, 0xe2, 0xc9, 0x90, 0xe6, 0xde, 0xed, 0xf0,
	0xf4, 0xe2, 0xc9, 0x10, 0xa7, 0x6e, 0x5c, 0x87, 0xa5, 0xc4, 0x1a, 0xc5, 0xdd, 0x15, 0x12, 0xe8,
	0x66, 0x3a, 0xb5, 0x67, 0xd6, 0x68, 0x40, 0x18, 0xe3, 0x5b, 0xb0, 0x92, 0x44, 0x96, 0x1f, 0xbb,
	0xb8, 0xe0, 0x8a, 0xa3, 0x0c, 0x9a, 0x5c, 0x27, 0x43, 0x30, 0x5b, 0xf5, 0x26, 0x50, 0x53, 0x1f,
	0x75, 0x31, 0x79, 0xa4, 0x25, 0x2f, 0xf0, 0x34, 0xad, 0xfb, 0x0c, 0xe3, 0x2f, 0xce, 0x61, 0xfc,
	0xdf, 0x29, 0xc1, 0xe2, 0x0f, 0x83, 0x61, 0x91, 0xdb, 0x16, 0x2e, 0xc4, 0x6d, 0x57, 0x00, 0x7e,
	0x1c, 0x0c, 0x4d, 0xcb, 0x26, 0x66, 0xe3, 0xb9, 0xd4, 0x7f, 0x1c, 0x0c, 0xef, 0x13, 0x00, 0x59,
	0x06, 0xd1, 0xae, 0x23, 0x67, 0x50, 0xfe, 0x71, 0x30, 0xec, 0x3b, 0xa7, 0x68, 0xe9, 0x1b, 0xd0,
	0xd4, 0xbe, 0x3d, 0x96, 0x62, 0xdf, 0xc8, 0x3e, 0x3e, 0xd6, 0x76, 0xba, 0x72, 0xd6, 0x4e, 0x57,
	0x2f, 0xb2, 0xd3, 0xbd, 0x3f, 0x2c, 0x43, 0xe5, 0xab, 0xc0, 0x9b, 0x8c, 0xc5, 0xab, 0xad, 0x45,
	0x41, 0xf2, 0x4a, 0xb3, 0x92, 0xb7, 0x01, 0x15, 0x47, 0x20, 0xab, 0x28, 0x3d, 0xc9, 0x2d, 0xe4,
	0x77, 0xd7, 0x8f, 0x13, 0xcb, 0xb7, 0x95, 0x92, 0xcc, 0xf8, 0xbd, 0x2f, 0x11, 0x83, 0x94, 0xc4,
	0xb8, 0x0b, 0x75, 0xf5, 0x8c, 0xab, 0xb4, 0x38, 0x9f, 0x3e, 0xa3, 0x31, 0x1e, 0xc3, 0x9a, 0x67,
	0x25, 0x22, 0x4e, 0xcc, 0xd8, 0xb7, 0xc2, 0xf8, 0x30, 0x48, 0xf8, 0xfb, 0x2a, 0xe7, 0x7e, 0x9f,
	0xc1, 0xfd, 0xf6, 0x65, 0x37, 0xfa, 0xce, 0x74, 0xf7, 0xaa, 0xfa, 0xee, 0xbd, 0x01, 0xed, 0xd0,
	0xb3, 0x6c, 0xc1, 0xca, 0x23, 0x33, 0x58, 0x4d, 0x82, 0x92, 0x06, 0xe9, 0x3b, 0x86, 0x01, 0x4b,
	0xb1, 0xfb, 0x13, 0x41, 0x1a, 0xa4, 0x3c, 0xa0, 0x67, 0x6d, 0x53, 0xe1, 0xac, 0x4d, 0x6d, 0xbc,
	0xb4, 0xf8, 0x36, 0xe7, 0x8b, 0x6f, 0xeb, 0x62, 0xe2, 0xdb, 0x9e, 0x2f, 0xbe, 0xa8, 0xe4, 0x8e,
	0x89, 0x7b, 0xf0, 0x9b, 0x97, 0x59, 0xc9, 0x31, 0xa0, 0xef, 0xa0, 0x3c, 0x4b, 0x24, 0x09, 0x6b,
	0x87, 0xe5, 0x99, 0x41, 0x24, 0xaa, 0x19, 0x01, 0x09, 0xea, 0x0a, 0x4d, 0x55, 0x12, 0x90, 0x98,
	0xfe, 0xa2, 0x0c, 0x8b, 0x4f, 0xfb, 0xbb, 0xaf, 0xc6, 0x9a, 0xd7, 0xa0, 0xa1, 0xb8, 0x01, 0x67,
	0xc9, 0xac, 0x09, 0x0a, 0xd4, 0x77, 0x50, 0x50, 0x7d, 0xd7, 0xd6, 0x04, 0xd5, 0x77, 0x6d, 0xd6,
	0xed, 0x08, 0xa6, 0xb9, 0xb3, 0xac, 0x56, 0x7d, 0xd7, 0xa6, 0x89, 0xa7, 0x5c, 0x50, 0xd6, 0xb9,
	0xe0, 0x0a, 0x40, 0x18, 0xb9, 0xc7, 0x38, 0x4d, 0x37, 0x94, 0x42, 0x5a, 0x97, 0x90, 0x7e, 0x88,
	0xdb, 0x1f, 0x05, 0x1e, 0x0b, 0x68, 0x79, 0x40, 0xcf, 0xc6, 0x75, 0x68, 0x46, 0x41, 0x90, 0x98,
	0x93, 0x58, 0x44, 0x19, 0xdb, 0x00, 0xc2, 0xbe, 0x8c, 0x45, 0xd4, 0x77, 0xd0, 0xee, 0xc6, 0xc2,
	0x9e, 0x44, 0x6e, 0x32, 0x95, 0xa6, 0x89, 0x0d, 0x50, 0x4b, 0x41, 0xd9, 0x3e, 0x6d, 0x43, 0x2d,
	0x16, 0x5f, 0x4f, 0x04, 0x4a, 0x11, 0xd0, 0x0b, 0xd2, 0xb6, 0xc6, 0x63, 0x8d, 0xb3, 0x78, 0xac,
	0x79, 0x21, 0x1e, 0x3b, 0x9f, 0x91, 0xb6, 0xa0, 0x76, 0x7c, 0xe2, 0x8b, 0x04, 0xbf, 0x8b, 0xf9,
	0xa7, 0x4a, 0xed, 0xbe, 0x63, 0x5c, 0x85, 0x45, 0xe1, 0x86, 0xd2, 0x28, 0x65, 0x7d, 0x1f, 0xf5,
	0xf7, 0x06, 0x88, 0x98, 0xcf, 0x83, 0x9d, 0x53, 0x78, 0xf0, 0x2a, 0x80, 0x1d, 0xf8, 0x49, 0x14,
	0x78, 0x9e, 0x88, 0x88, 0x89, 0xea, 0x03, 0x0d, 0x82, 0xdb, 0xc2, 0xf3, 0x20, 0x26, 0x33, 0xd8,
	0x27, 0x21, 0x08, 0xf9, 0x6f, 0x57, 0xa8, 0x7b, 0x1c, 0x78, 0xc4, 0x1d, 0xab, 0xbc, 0x6b, 0x12,
	0xc2, 0x4c, 0xac, 0x1b, 0xa5, 0xb5, 0xa2, 0x51, 0xea, 0xfd, 0xfb, 0x02, 0x54, 0x3f, 0x17, 0x53,
	0xf2, 0x28, 0x0b, 0x5a, 0x70, 0x61, 0x56, 0x0b, 0xde, 0x82, 0xb6, 0xf0, 0xed, 0x68, 0x1a, 0x26,
	0xe6, 0x58, 0x24, 0x87, 0x81, 0xe2, 0xc7, 0x96, 0x84, 0x3e, 0x21, 0x20, 0x9a, 0x03, 0x8d, 0x67,
	0xd1, 0xb5, 0x5c, 0xc4, 0x91, 0x32, 0xa6, 0x8d, 0x71, 0xde, 0x47, 0x62, 0x8a, 0x6e, 0x3a, 0xce,
	0x8b, 0x19, 0xb4, 0x2e, 0x21, 0x7d, 0x1a, 0x41, 0xa1, 0x89, 0x83, 0xa5, 0x41, 0x91, 0x30, 0xe2,
	0xe2, 0x4d, 0xa8, 0x86, 0x93, 0x21, 0xf9, 0xd1, 0xd2, 0xa2, 0x84, 0x93, 0x21, 0xfa, 0xd1, 0x6a,
	0x6f, 0xab, 0xa7, 0xed, 0x6d, 0xef, 0x0f, 0x16, 0xa1, 0xfc, 0xd5, 0xc9, 0x53, 0x91, 0x18, 0xef,
	0x80, 0x61, 0x1d, 0x5b, 0xae, 0x67, 0x0d, 0x71, 0x01, 0x43, 0x53, 0x77, 0x45, 0x3b, 0x29, 0xa6,
	0x1f, 0xb2, 0xaf, 0xfa, 0x9a, 0x4f, 0x40, 0xc5, 0x65, 0x5b, 0x9a, 0x5d, 0xb6, 0xf9, 0xa2, 0xfb,
	0x26, 0x54, 0xa2, 0x60, 0x92, 0x88, 0x48, 0x9a, 0x85, 0xe5, 0xcc, 0xe5, 0x22, 0xf0, 0x40, 0xa2,
	0xcf, 0x5f, 0x1a, 0xa3, 0x07, 0xad, 0xe3, 0xd0, 0x36, 0x99, 0x3e, 0x93, 0xe9, 0xc6, 0x71, 0x68,
	0xf3, 0x58, 0xac, 0x5a, 0x52, 0xd1, 0xa8, 0xe7, 0x45, 0x23, 0xe5, 0x56, 0xcd, 0xa7, 0x64, 0x6e,
	0xa5, 0x3d, 0xcb, 0x33, 0x73, 0xa3, 0xc0, 0xcc, 0xbd, 0x3f, 0x2d, 0x43, 0x85, 0xdf, 0xf2, 0xba,
	0xcd, 0xf9, 0x65, 0x00, 0x67, 0xea, 0xe3, 0x8e, 0x0b, 0x5f, 0x29, 0xce, 0x9a, 0x33, 0xf5, 0xfb,
	0xe1, 0x23, 0xdf, 0x41, 0xbd, 0x26, 0xb1, 0x71, 0x62, 0x45, 0x89, 0x64, 0x4f, 0x20, 0xfc, 0x3e,
	0x42, 0x94, 0x0a, 0x28, 0x9f, 0xa6, 0x02, 0xae, 0x00, 0xa0, 0x63, 0x2d, 0x92, 0xe7, 0x41, 0x74,
	0xa4, 0x94, 0xa9, 0x1b, 0x3e, 0x65, 0x00, 0xa1, 0x63, 0xd3, 0x0a, 0x43, 0xcf, 0x15, 0x8e, 0x54,
	0xa9, 0x75, 0x37, 0xbe, 0xcf, 0x00, 0x44, 0x8f, 0x2d, 0xdf, 0x1a, 0xe1, 0x0e, 0x28, 0x67, 0xbe,
	0x2e, 0x21, 0xac, 0x8a, 0xe9, 0xfc, 0x21, 0x2d, 0x31, 0x3e, 0x17, 0xb4, 0x37, 0x14, 0xb5, 0xf7,
	0x25, 0xa8, 0x67, 0x5b, 0x2a, 0xdd, 0xf9, 0x48, 0xed, 0x27, 0x2a, 0x09, 0x46, 0xd2, 0xae, 0x35,
	0x95, 0x16, 0x47, 0x90, 0xb2, 0x74, 0x92, 0x80, 0xf6, 0xad, 0xc5, 0x96, 0x8e, 0x41, 0xa4, 0x85,
	0xde, 0x86, 0x95, 0xbc, 0x9a, 0xcf, 0xb4, 0xe6, 0x72, 0x4e, 0xd3, 0xf7, 0x1d, 0x4d, 0x9f, 0x2f,
	0x9f, 0xa5, 0xcf, 0x3b, 0x2f, 0xa5, 0xcf, 0xbf, 0x19, 0xbf, 0xde, 0xb8, 0x0d, 0x15, 0xe2, 0xca,
	0xb8, 0xbb, 0x4a, 0x03, 0xb6, 0xd3, 0x01, 0x49, 0x6d, 0x0c, 0x24, 0xb6, 0xf7, 0xeb, 0x2a, 0xd4,
	0x94, 0xd7, 0xf6, 0x22, 0xc7, 0xd0, 0x1b, 0xd0, 0xb4, 0xc3, 0x89, 0x99, 0x04, 0x61, 0xe0, 0x05,
	0xa3, 0xa9, 0xe2, 0x4c, 0x3b, 0x9c, 0x3c, 0x93, 0xa0, 0x22, 0xe3, 0x2f, 0xbe, 0x0a, 0xe3, 0x2f,
	0x9d, 0xe5, 0xc7, 0x96, 0x73, 0x7e, 0xac, 0x64, 0xe8, 0xda, 0x69, 0x0c, 0xfd, 0x26, 0x2c, 0x8f,
	0x22, 0x2b, 0x3c, 0x74, 0xed, 0xd8, 0x0c, 0xad, 0x38, 0x7e, 0xee, 0x48, 0x26, 0x6b, 0x2b, 0xf0,
	0x1e, 0x41, 0x71, 0x9d, 0x33, 0x42, 0x9c, 0xad, 0x1d, 0x78, 0x92, 0xe3, 0x3a, 0x29, 0xa9, 0x84,
	0x1b, 0x6f, 0x40, 0xd9, 0x1d, 0x5b, 0x23, 0x65, 0xbd, 0xb3, 0x65, 0xee, 0x23, 0x74, 0xc0, 0x48,
	0xd4, 0x37, 0xf4, 0x80, 0x4c, 0xd5, 0x62, 0x7d, 0x43, 0x6d, 0xf6, 0x2f, 0x52, 0x95, 0x69, 0x7b,
	0x56, 0xcc, 0xbe, 0x5e, 0x79, 0xd0, 0x52, 0xd0, 0x5d, 0x04, 0x16, 0x9d, 0xa8, 0xe5, 0x19, 0x27,
	0xea, 0x26, 0xa4, 0x3d, 0x74, 0x77, 0x2f, 0xd5, 0xc7, 0xea, 0x6c, 0x96, 0x12, 0xa5, 0x2e, 0x9f,
	0x46, 0x44, 0xa2, 0x70, 0x0d, 0x1a, 0x99, 0x61, 0x43, 0x0e, 0x43, 0x1d, 0x0e, 0xa9, 0x65, 0xa3,
	0x50, 0xc4, 0x58, 0x8c, 0x83, 0x68, 0x6a, 0xda, 0x93, 0x28, 0x12, 0x7e, 0x42, 0x56, 0xbb, 0x3c,
	0x68, 0x31, 0x74, 0x97, 0x81, 0x05, 0x81, 0x5e, 0x2b, 0x0a, 0x74, 0x26, 0x45, 0x1b, 0x67, 0x49,
	0xd1, 0xe6, 0x4b, 0x7b, 0xde, 0xdd, 0xf9, 0x9e, 0xf7, 0xd6, 0xc5, 0x04, 0x6c, 0xfb, 0x14, 0x01,
	0xbb, 0x09, 0xad, 0x63, 0x3b, 0x9c, 0xc4, 0xe9, 0x1a, 0x5c, 0xa2, 0xd7, 0x35, 0x09, 0xa8, 0x2d,
	0x41, 0xea, 0x9e, 0xc7, 0xdd, 0xcb, 0xb4, 0x92, 0x75, 0xe5, 0x9f, 0xc7, 0xc6, 0x5b, 0x50, 0xe5,
	0x46, 0xdc, 0xbd, 0x42, 0xb3, 0xca, 0xcc, 0x1e, 0x9f, 0x09, 0x07, 0x0a, 0x6f, 0xdc, 0x49, 0xe5,
	0xf9, 0x2a, 0x51, 0x6e, 0xcc, 0x9c, 0xb9, 0xf2, 0x72, 0xfd, 0x17, 0x0b, 0xd0, 0xca, 0x61, 0x34,
	0x2f, 0x7b, 0x41, 0xf7, 0xb2, 0xf3, 0xbb, 0x54, 0x3a, 0xcd, 0x69, 0x5e, 0xd4, 0x9c, 0x66, 0xdd,
	0x7a, 0x2e, 0x9d, 0x65, 0x3d, 0xcb, 0x67, 0x5b, 0xcf, 0x4a, 0xd1, 0x7a, 0xfe, 0xb2, 0x0a, 0x65,
	0x92, 0x1b, 0x3c, 0xd0, 0x59, 0x61, 0x68, 0xaa, 0x60, 0x55, 0x3a, 0xe9, 0xa6, 0x15, 0x86, 0x0f,
	0x18, 0xd8, 0x77, 0x8c, 0x1e, 0x34, 0xad, 0xc8, 0x3e, 0x74, 0x13, 0x61, 0x27, 0x93, 0x28, 0x0d,
	0x47, 0xe8, 0x30, 0x7c, 0xa5, 0x36, 0x0a, 0xdb, 0xc9, 0xfa, 0x30, 0x1d, 0xa2, 0xa0, 0xac, 0x96,
	0x2e, 0xa4, 0xac, 0x6e, 0x41, 0xdb, 0x11, 0x07, 0xd6, 0xc4, 0x4b, 0x94, 0x46, 0xe1, 0x2f, 0x6e,
	0x49, 0xa8, 0x54, 0x28, 0x37, 0xa0, 0xa9, 0xc8, 0xf0, 0x9c, 0x91, 0x85, 0xc5, 0x08, 0x86, 0xe7,
	0x8c, 0xa2, 0xda, 0xab, 0xce, 0xaa, 0xbd, 0x2b, 0x00, 0x07, 0x66, 0x24, 0x62, 0x91, 0x84, 0xcf,
	0xd9, 0xa7, 0x29, 0x0f, 0xea, 0x07, 0x03, 0x09, 0x30, 0xba, 0x50, 0x3d, 0x10, 0x16, 0xad, 0x02,
	0x1b, 0x55, 0xd5, 0xc4, 0x93, 0x89, 0x7c, 0x8c, 0xd5, 0xc9, 0x44, 0xb5, 0xd1, 0x75, 0x3f, 0x9c,
	0x86, 0xc8, 0x48, 0x71, 0x10, 0x49, 0x1d, 0xa7, 0x41, 0x72, 0x7a, 0xab, 0x99, 0xd7, 0x5b, 0xe8,
	0x00, 0x10, 0x8a, 0x76, 0xba, 0x25, 0xfd, 0x03, 0x84, 0xd0, 0x4e, 0x17, 0x3d, 0xc1, 0xf6, 0xac,
	0x27, 0x78, 0x09, 0xea, 0x41, 0x6c, 0x1e, 0x58, 0x63, 0xd7, 0x9b, 0xaa, 0xb3, 0x6b, 0x10, 0x7f,
	0x4a, 0xed, 0xcc, 0x4d, 0xec, 0xe8, 0x6e, 0xe2, 0x36, 0xd4, 0x42, 0xcf, 0x4a, 0x0e, 0x82, 0x68,
	0x2c, 0x55, 0x57, 0xda, 0xc6, 0xcd, 0x08, 0xa3, 0xc0, 0x16, 0x71, 0x1c, 0x44, 0xd9, 0x51, 0xa3,
	0x3e, 0x68, 0xa5, 0x50, 0xd2, 0x6e, 0x38, 0x44, 0x14, 0x1c, 0xbb, 0x8e, 0x88, 0xe4, 0x61, 0x23,
	0x6d, 0x1b, 0x6f, 0x41, 0x27, 0x12, 0x76, 0x30, 0x1e, 0x0b, 0xdf, 0x11, 0x0e, 0x0f, 0xc2, 0x7a,
	0x6b, 0x59, 0x83, 0xd3, 0x30, 0x9b, 0x50, 0xa5, 0x83, 0xa3, 0xeb, 0x74, 0xd7, 0x59, 0x7d, 0x61,
	0x53, 0x0b, 0x32, 0x6c, 0xcc, 0x0d, 0x32, 0x6c, 0x9e, 0xa5, 0xea, 0xba, 0x2f, 0xad, 0xea, 0xb6,
	0xf2, 0xaa, 0xee, 0x42, 0x8a, 0x6c, 0x13, 0xaa, 0x13, 0x97, 0xbf, 0xf5, 0x12, 0xcf, 0x6e, 0xe2,
	0xd2, 0x27, 0x5e, 0x05, 0x38, 0x76, 0x63, 0x77, 0xe8, 0x7a, 0x6e, 0x32, 0xed, 0x5e, 0x96, 0xd1,
	0x83, 0x14, 0xd2, 0x7b, 0x0e, 0x75, 0x12, 0x56, 0x62, 0xe0, 0x57, 0xf2, 0x76, 0x75, 0x36, 0x2b,
	0xe5, 0xd9, 0xcc, 0x80, 0x25, 0x92, 0x19, 0x16, 0x5c, 0x7a, 0xee, 0xfd, 0xa2, 0x0c, 0xe5, 0x27,
	0x81, 0x3f, 0x0a, 0x5e, 0xc4, 0x61, 0xd9, 0x81, 0x8e, 0x35, 0x49, 0x02, 0x73, 0x68, 0xd9, 0x47,
	0x93, 0x30, 0x3b, 0xf6, 0x94, 0x07, 0x6d, 0x84, 0x3f, 0x20, 0x30, 0xcd, 0xe2, 0x03, 0xd8, 0x20,
	0xca, 0xb1, 0xeb, 0x07, 0x91, 0x79, 0x2c, 0x22, 0x73, 0x12, 0x8e, 0x22, 0xcb, 0x51, 0xca, 0x6f,
	0x15, 0xb1, 0x4f, 0x10, 0xf9, 0x95, 0x88, 0xbe, 0x64, 0xd4, 0xab, 0xe9, 0x8f, 0x82, 0xd4, 0x97,
	0x67, 0xa5, 0xfe, 0x9b, 0x0d, 0x9e, 0x6d, 0x41, 0x6d, 0x8c, 0xeb, 0x86, 0xeb, 0x2c, 0x83, 0xef,
	0xd4, 0x66, 0x71, 0x66, 0x14, 0x89, 0xb3, 0x72, 0xd8, 0x11, 0xa2, 0x14, 0x37, 0xa3, 0x89, 0x4f,
	0x58, 0xc3, 0x30, 0x9a, 0x58, 0xe5, 0x26, 0xb4, 0x18, 0x7d, 0x2c, 0xa2, 0x18, 0x3f, 0x85, 0x3d,
	0xab, 0x26, 0x01, 0xbf, 0x62, 0xd8, 0xeb, 0x09, 0x83, 0xdc, 0x80, 0x66, 0x9c, 0x04, 0x11, 0x32,
	0x0f, 0x89, 0x1d, 0x7b, 0xf6, 0x0d, 0x09, 0xdb, 0x47, 0xe9, 0x53, 0x86, 0xbf, 0x7d, 0x31, 0xc3,
	0xbf, 0x7c, 0x8a, 0xbc, 0xbc, 0x01, 0x65, 0xb2, 0x58, 0xd2, 0xbf, 0x2f, 0x3a, 0xd6, 0x8c, 0xec,
	0xfd, 0xc9, 0x02, 0xd4, 0x89, 0x47, 0x9f, 0xa2, 0x40, 0xb6, 0xa1, 0xe4, 0x86, 0x92, 0x3b, 0x4b,
	0x6e, 0x98, 0xdb, 0x88, 0x52, 0x7e, 0x23, 0x7a, 0x6a, 0x29, 0xfd, 0xc0, 0x11, 0x99, 0xc9, 0x6a,
	0x8c, 0xd5, 0x60, 0x7d, 0x52, 0xf6, 0x61, 0xe4, 0x8e, 0xad, 0x68, 0x4a, 0x0c, 0x57, 0x1e, 0xa8,
	0xa6, 0xb6, 0xc6, 0xe5, 0xdc, 0x1a, 0xeb, 0x26, 0xbb, 0x92, 0x33, 0xd9, 0xbd, 0x9f, 0x96, 0xa1,
	0xf9, 0x38, 0xb0, 0x9c, 0x07, 0x96, 0x87, 0x9a, 0x39, 0x32, 0x6e, 0x43, 0xd5, 0xf6, 0x26, 0x31,
	0x1e, 0xc6, 0x17, 0x0a, 0x4b, 0x86, 0xce, 0xb4, 0x42, 0xbe, 0xee, 0x58, 0x42, 0xfe, 0x84, 0xb9,
	0x54, 0x3c, 0x61, 0x7e, 0x02, 0x75, 0xcf, 0x8d, 0x13, 0xe1, 0x8b, 0x48, 0xc5, 0xa1, 0xaf, 0xa4,
	0xf3, 0xd4, 0xbf, 0xe7, 0xb1, 0xa4, 0x1a, 0x64, 0xf4, 0x78, 0x16, 0xf0, 0x02, 0xcb, 0x19, 0x4a,
	0x92, 0x6c, 0x55, 0xda, 0x3a, 0xb8, 0x4f, 0x67, 0x81, 0x1c, 0x21, 0x49, 0x07, 0x8b, 0x4e, 0x47,
	0x47, 0x90, 0x90, 0x14, 0x89, 0x49, 0x56, 0xd8, 0x52, 0xe7, 0x88, 0x95, 0x97, 0x9d, 0xf9, 0x5d,
	0x71, 0xb7, 0xce, 0x5e, 0x76, 0xea, 0x78, 0xc5, 0xf3, 0x4f, 0xa4, 0x70, 0xde, 0x89, 0xf4, 0xbf,
	0x35, 0xc2, 0x78, 0xa1, 0x50, 0xb5, 0xce, 0x82, 0xcb, 0x79, 0x16, 0xfc, 0xfb, 0x32, 0xac, 0xcd,
	0xdb, 0x32, 0x34, 0xc8, 0xa8, 0xb7, 0x85, 0xef, 0x64, 0x27, 0x31, 0x96, 0xa2, 0x65, 0x09, 0x4f,
	0x0f, 0x62, 0x1f, 0x43, 0x4d, 0x82, 0xe2, 0x6e, 0x89, 0x66, 0x7c, 0x79, 0x2e, 0x3b, 0x3c, 0x60,
	0xa2, 0x41, 0x4a, 0x4d, 0x49, 0x51, 0x46, 0x72, 0x52, 0x54, 0xf2, 0xa2, 0x84, 0xcd, 0x4b, 0x8a,
	0x5e, 0x4c, 0xcb, 0x5f, 0x05, 0x38, 0x08, 0xa2, 0xe7, 0x56, 0xe4, 0x1c, 0x04, 0x91, 0x4c, 0xfe,
	0x6b, 0x10, 0xe3, 0x3d, 0x58, 0x3b, 0x14, 0x96, 0x97, 0x1c, 0x4e, 0x4d, 0xfb, 0x50, 0xd8, 0x47,
	0x2a, 0x30, 0xc9, 0x1c, 0x69, 0x48, 0xdc, 0x2e, 0xa2, 0x64, 0x74, 0x72, 0xa6, 0x47, 0xa0, 0xbb,
	0x8d, 0xb9, 0x1e, 0x5f, 0xb0, 0x30, 0x21, 0xc3, 0xcb, 0x45, 0x55, 0xc4, 0xcc, 0x98, 0x6d, 0x05,
	0x96, 0x84, 0x37, 0xa1, 0x95, 0x12, 0x86, 0x41, 0x94, 0x48, 0x5d, 0xdf, 0x54, 0xc0, 0xbd, 0x20,
	0x4a, 0x88, 0xd1, 0x53, 0x22, 0xb5, 0x2f, 0x20, 0xa5, 0x42, 0x11, 0xaa, 0x8d, 0x99, 0x23, 0x6b,
	0x8d, 0xb9, 0xb2, 0xf6, 0x31, 0x74, 0x73, 0x84, 0xe9, 0x2b, 0x52, 0xe7, 0x73, 0x43, 0xc7, 0x2b,
	0x26, 0xe9, 0x3b, 0xc6, 0xff, 0x86, 0xed, 0xf9, 0x3d, 0x35, 0xdf, 0xb4, 0x3b, 0xaf, 0x2f, 0x89,
	0xed, 0x3d, 0x58, 0x47, 0x46, 0x11, 0x91, 0x69, 0x8b, 0x28, 0x71, 0x0f, 0x5c, 0x9b, 0x84, 0x52,
	0x85, 0x7f, 0x56, 0x19, 0xb9, 0x9b, 0xe1, 0x54, 0x56, 0x20, 0x8e, 0x99, 0xed, 0x5d, 0xfb, 0x48,
	0x39, 0xb0, 0x2d, 0x09, 0xdd, 0x27, 0x60, 0xef, 0xaf, 0x16, 0x61, 0x75, 0x0e, 0xf3, 0xbd, 0x9a,
	0xb7, 0xf4, 0x11, 0x6c, 0xe6, 0xbe, 0x56, 0x49, 0x48, 0x6a, 0x4b, 0xd6, 0x75, 0xb4, 0x7c, 0x65,
	0xdf, 0x31, 0xbe, 0x0b, 0x5b, 0x73, 0xfb, 0xd1, 0x22, 0x31, 0xd3, 0x6f, 0xce, 0xe9, 0x49, 0x6b,
	0x34, 0x67, 0x13, 0x97, 0x2e, 0xbc, 0x89, 0xe5, 0x33, 0x37, 0xf1, 0xdb, 0x90, 0xc3, 0x98, 0x61,
	0xe0, 0xb9, 0xf6, 0x34, 0x53, 0xcd, 0x6b, 0x3a, 0x76, 0x8f, 0x90, 0xec, 0x1f, 0x12, 0x9b, 0xca,
	0xa4, 0x0e, 0x3e, 0x17, 0x53, 0x06, 0xb5, 0x99, 0x3c, 0x76, 0xa6, 0x2e, 0xeb, 0x39, 0x75, 0xb9,
	0x01, 0x95, 0xe7, 0xc2, 0x1d, 0x1d, 0x26, 0xf2, 0xa0, 0x24, 0x5b, 0xbd, 0x7f, 0xaa, 0x40, 0x79,
	0xd7, 0xb2, 0x0f, 0x49, 0x6b, 0xdb, 0xf8, 0x20, 0x43, 0x35, 0x1c, 0x66, 0x07, 0x02, 0x71, 0x9c,
	0x66, 0x0b, 0x6a, 0x4c, 0x90, 0x59, 0x76, 0x6a, 0xb3, 0x8b, 0xc5, 0x28, 0x6d, 0xc1, 0xeb, 0x04,
	0xa1, 0x25, 0xfe, 0x0e, 0x74, 0x19, 0x1d, 0x5a, 0x91, 0x35, 0x16, 0x89, 0x88, 0x32, 0xb5, 0xcf,
	0x6b, 0xbd, 0x4e, 0xf8, 0x3d, 0x85, 0x56, 0xca, 0x3f, 0x1d, 0x97, 0x16, 0x82, 0xf5, 0x0b, 0x8f,
	0x4b, 0xc2, 0x9a, 0xa2, 0xc9, 0x3f, 0xaa, 0x68, 0x68, 0xf2, 0x8e, 0x52, 0x34, 0x59, 0xab, 0xaa,
	0x36, 0x2b, 0xe5, 0xd9, 0x31, 0x5a, 0x79, 0x76, 0x32, 0xb1, 0x4a, 0x40, 0xe5, 0xd9, 0x15, 0xd8,
	0xb9, 0xfe, 0x2a, 0x9e, 0x00, 0x9c, 0xe7, 0x09, 0x34, 0x8a, 0x9e, 0xc0, 0x0d, 0x68, 0x8e, 0x2d,
	0xf4, 0x48, 0x64, 0xee, 0x83, 0x33, 0xae, 0x0d, 0x86, 0x71, 0xda, 0x83, 0xc2, 0xd1, 0x27, 0x26,
	0xc7, 0xa7, 0xa4, 0x8f, 0x58, 0x1f, 0x5b, 0x27, 0x4f, 0x08, 0x80, 0x68, 0xf2, 0xb6, 0xb8, 0x3f,
	0xc7, 0xdf, 0xea, 0x08, 0xe1, 0xde, 0x3b, 0x50, 0xf6, 0xa9, 0x8a, 0x64, 0x99, 0xec, 0x8a, 0x91,
	0xda, 0x15, 0xe2, 0x09, 0xf4, 0xc9, 0x06, 0x4c, 0x80, 0x62, 0x12, 0x89, 0xd0, 0x63, 0x0d, 0xc2,
	0xa3, 0x71, 0xf9, 0x46, 0x3b, 0x05, 0xf3, 0x90, 0x73, 0x8d, 0xfb, 0xca, 0x79, 0xc6, 0xdd, 0x38,
	0xcb, 0xb8, 0xaf, 0xbe, 0xf4, 0xe9, 0x71, 0x6d, 0x7e, 0xa0, 0x6c, 0xfd, 0x62, 0x76, 0x7f, 0xe3,
	0x3c, 0x7f, 0x79, 0xf3, 0x2c, 0x7f, 0xf9, 0x6f, 0x17, 0xa1, 0x9e, 0x2e, 0xe7, 0x8b, 0x9c, 0xeb,
	0xce, 0x10, 0xb4, 0x9e, 0xe2, 0xd9, 0x82, 0x0b, 0x6d, 0xab, 0xf1, 0xfb, 0x8e, 0x71, 0x1b, 0x96,
	0x35, 0x1a, 0x2d, 0xc7, 0xdc, 0x4a, 0xa9, 0xd4, 0xc1, 0x87, 0xe9, 0x28, 0x0a, 0x56, 0xd6, 0xc4,
	0x63, 0x10, 0x78, 0x45, 0xe9, 0xa9, 0x14, 0xa5, 0xa7, 0x20, 0x18, 0xd5, 0x8b, 0x96, 0xb7, 0x68,
	0x91, 0xb9, 0x5a, 0x31, 0x32, 0xd7, 0x85, 0x6a, 0xec, 0x59, 0xc7, 0x22, 0x38, 0x50, 0x29, 0x2c,
	0xd9, 0x7c, 0x3d, 0x35, 0x0d, 0x73, 0xf7, 0xbc, 0x79, 0x4a, 0x55, 0xd1, 0xef, 0x2f, 0x42, 0x7b,
	0x37, 0xa7, 0xac, 0xd0, 0x67, 0x29, 0xaa, 0x37, 0x5a, 0x75, 0xde, 0x5a, 0x23, 0xaf, 0xda, 0x68,
	0xe9, 0xe7, 0xf4, 0xd0, 0x0a, 0xe9, 0x0a, 0x3d, 0x68, 0xb9, 0xef, 0xc1, 0x7a, 0xb1, 0xc7, 0xb1,
	0xe5, 0x4d, 0x94, 0xb2, 0x5d, 0xcd, 0x77, 0xf9, 0x0a, 0x51, 0x85, 0x1d, 0x5c, 0x2a, 0xee, 0xe0,
	0x35, 0x68, 0xb8, 0xb1, 0x19, 0x09, 0xcb, 0x09, 0x7c, 0x6f, 0xaa, 0xbc, 0x37, 0x37, 0x1e, 0x48,
	0x08, 0x95, 0x99, 0xc5, 0xb4, 0x1e, 0xae, 0x2d, 0xb5, 0x6b, 0xcd, 0x8d, 0xf7, 0xa9, 0x8d, 0x4c,
	0x1a, 0x84, 0x89, 0x7e, 0x6a, 0xa8, 0x06, 0x21, 0x87, 0x42, 0x6f, 0x41, 0xbb, 0xf0, 0x5d, 0x35,
	0x19, 0xae, 0xca, 0x7d, 0x12, 0x85, 0xa4, 0xa4, 0x2d, 0x53, 0x2a, 0xb8, 0xae, 0x42, 0x52, 0x0c,
	0x57, 0x5a, 0xf8, 0x1a, 0x34, 0xe8, 0x6b, 0xcd, 0xc8, 0xf2, 0x47, 0x2a, 0x75, 0x09, 0x04, 0x1a,
	0x20, 0xa4, 0xf7, 0x1f, 0x25, 0x58, 0xdd, 0x9d, 0x35, 0x21, 0x67, 0x5a, 0x9e, 0x85, 0xb3, 0x2c,
	0xcf, 0x27, 0xb0, 0x3d, 0xbf, 0xa3, 0x56, 0x1c, 0xb6, 0x39, 0xa7, 0x6b, 0x5e, 0xb2, 0xb4, 0x22,
	0xb1, 0xd3, 0x45, 0xe7, 0x9b, 0x0e, 0xac, 0xe4, 0x6d, 0x4a, 0x65, 0x4e, 0xfe, 0xd2, 0x8d, 0x4d,
	0x19, 0xa1, 0xcd, 0xd2, 0x9b, 0x0f, 0x19, 0x60, 0xdc, 0x85, 0xba, 0x5a, 0xfd, 0xb8, 0x5b, 0x2b,
	0x14, 0x41, 0xa5, 0x45, 0x82, 0x19, 0x4d, 0x2f, 0x51, 0xf2, 0x20, 0xc5, 0x77, 0x6f, 0x56, 0x49,
	0x2d, 0xcc, 0x2a, 0xa9, 0xbc, 0xf2, 0x29, 0x15, 0x95, 0x4f, 0xe1, 0x08, 0xc9, 0x4b, 0xa8, 0x1d,
	0x21, 0x7b, 0xef, 0xc3, 0xd2, 0x43, 0x2b, 0xb1, 0xd0, 0x49, 0x72, 0xac, 0xc4, 0x92, 0xaf, 0xa0,
	0x67, 0xad, 0xa0, 0xb2, 0xa4, 0x15, 0x54, 0xf6, 0x7e, 0x08, 0xf0, 0xf0, 0xb3, 0xdd, 0x3d, 0x79,
	0x1a, 0xd8, 0x81, 0x8e, 0x4c, 0x9b, 0x32, 0x83, 0x67, 0xf3, 0x6c, 0x33, 0x9c, 0xf9, 0x9c, 0xfd,
	0xb0, 0x63, 0xcb, 0xbb, 0x27, 0x07, 0xa3, 0xe7, 0xde, 0xef, 0x96, 0xa0, 0xf6, 0xf0, 0xe9, 0xfe,
	0x7d, 0xcf, 0xb5, 0xe2, 0xd7, 0x9d, 0x0e, 0xbf, 0x0e, 0x4d, 0xc7, 0x8f, 0x4d, 0x0b, 0xdf, 0x95,
	0xa9, 0x7c, 0x70, 0xfc, 0x98, 0x5e, 0xdf, 0x77, 0x8c, 0x37, 0xa0, 0x9d, 0x51, 0x68, 0x0a, 0xbf,
	0xa9, 0x68, 0x54, 0xa2, 0xd8, 0x09, 0xc6, 0x96, 0xeb, 0xeb, 0x19, 0x0c, 0x60, 0x50, 0x9a, 0x49,
	0xd6, 0x9c, 0xcb, 0xca, 0x19, 0xce, 0x65, 0x55, 0xd7, 0xbe, 0xbd, 0x01, 0xd4, 0x1e, 0xf5, 0xf7,
	0x58, 0xe2, 0xae, 0x43, 0x33, 0x2d, 0x75, 0xd5, 0x4a, 0x2d, 0x55, 0xb5, 0x2b, 0xcf, 0x36, 0xa3,
	0xd0, 0x6b, 0x2d, 0x15, 0x0d, 0x55, 0x55, 0x9f, 0x40, 0xe3, 0x51, 0x7f, 0xef, 0x37, 0x51, 0xc0,
	0xf9, 0x0f, 0x25, 0x28, 0x3f, 0x3a, 0x49, 0x22, 0x0b, 0x15, 0xe0, 0xd0, 0x0b, 0xec, 0x23, 0x73,
	0x98, 0x1a, 0xea, 0x1a, 0x01, 0x1e, 0xb0, 0x95, 0x1e, 0x06, 0x41, 0x62, 0x3a, 0xe2, 0x58, 0x59,
	0x69, 0x6c, 0x3f, 0x14, 0xc7, 0xc6, 0x26, 0x54, 0xed, 0x70, 0x62, 0x8e, 0xad, 0x13, 0x19, 0x5f,
	0xad, 0xd8, 0xe1, 0xe4, 0x89, 0x75, 0x82, 0x03, 0x12, 0x22, 0x70, 0x84, 0x27, 0xf7, 0xa8, 0x86,
	0x28, 0x6c, 0xe7, 0xb2, 0x19, 0xe5, 0x33, 0xb3, 0x19, 0x95, 0x99, 0x6c, 0xc6, 0x26, 0x54, 0xc7,
	0x62, 0x4c, 0x6f, 0x64, 0x89, 0xae, 0x8c, 0xc5, 0x18, 0xdf, 0x88, 0xfe, 0x9f, 0x6b, 0x9b, 0xe3,
	0xaf, 0x27, 0x62, 0xa2, 0x22, 0x36, 0x75, 0xdf, 0xb5, 0x9f, 0x10, 0x80, 0x0a, 0xd1, 0x02, 0xd3,
	0x73, 0xc7, 0xae, 0x3a, 0x0e, 0x57, 0xfd, 0xe0, 0x31, 0x36, 0x71, 0xc5, 0xfd, 0xc0, 0x8c, 0x44,
	0x9c, 0x44, 0xae, 0xad, 0x8e, 0x0d, 0xe0, 0x07, 0x03, 0x09, 0xc1, 0x9d, 0x0e, 0x62, 0xd3, 0x71,
	0xe3, 0x23, 0xf6, 0xbf, 0xd9, 0x7b, 0x85, 0x20, 0x7e, 0xe8, 0xc6, 0x47, 0xe4, 0x80, 0x77, 0x60,
	0x71, 0x12, 0x0f, 0xa5, 0xd7, 0x8a, 0x8f, 0xbd, 0x23, 0x58, 0xfa, 0xd4, 0xf5, 0x04, 0xca, 0xd4,
	0x81, 0xeb, 0x29, 0x13, 0x49, 0xcf, 0x28, 0x46, 0x9e, 0x15, 0x27, 0xb8, 0x3a, 0xee, 0xc1, 0xf4,
	0x45, 0x82, 0x6e, 0x48, 0xfe, 0x84, 0xa8, 0xd3, 0xdc, 0xc4, 0x62, 0x96, 0x9b, 0xe8, 0xfd, 0xac,
	0x04, 0xcd, 0xbe, 0x9e, 0xfe, 0x3d, 0xbf, 0x86, 0x6a, 0x07, 0x3a, 0xb9, 0x2c, 0x72, 0xa6, 0x44,
	0xda, 0x7a, 0x22, 0xb9, 0xef, 0x18, 0xef, 0x80, 0x91, 0xa7, 0xd4, 0x8e, 0x3e, 0x1d, 0x9d, 0x56,
	0x99, 0xc4, 0x42, 0x5e, 0x79, 0x69, 0x5e, 0x5e, 0xf9, 0xb4, 0x18, 0xe7, 0x4c, 0x46, 0xb6, 0x32,
	0x27, 0x23, 0xbb, 0x09, 0xd5, 0x9f, 0x04, 0xbe, 0xc8, 0x22, 0xe0, 0x15, 0x6c, 0xf6, 0x1d, 0x54,
	0x56, 0x86, 0x7e, 0x54, 0xe7, 0x13, 0xe6, 0x2b, 0x17, 0x28, 0x6b, 0x46, 0xa6, 0x54, 0x34, 0x32,
	0x6f, 0x41, 0xa7, 0x70, 0xa8, 0x56, 0x85, 0x66, 0xcb, 0xf9, 0x53, 0x75, 0x7c, 0xc6, 0xe1, 0x78,
	0xe9, 0x8c, 0xc3, 0x71, 0xf1, 0x30, 0x2e, 0x7b, 0x69, 0x9a, 0x6d, 0x63, 0xb6, 0x1f, 0x29, 0x96,
	0xbf, 0x59, 0x80, 0x8d, 0xd9, 0xd5, 0x18, 0x4c, 0x3c, 0x61, 0x7c, 0x0f, 0x2e, 0xcd, 0x1b, 0x34,
	0x9a, 0x78, 0x9a, 0xd2, 0xe9, 0xce, 0x8e, 0x8b, 0x9d, 0xfb, 0x8e, 0x71, 0x1f, 0xae, 0x9c, 0xda,
	0x5d, 0x53, 0x49, 0xdb, 0xf3, 0x07, 0x50, 0x95, 0xfd, 0x44, 0xae, 0x29, 0xa7, 0x1a, 0x02, 0x88,
	0x7d, 0x3b, 0xb0, 0x78, 0x6c, 0x29, 0xbd, 0x81, 0x8f, 0xbd, 0xdf, 0x82, 0xf2, 0x13, 0x72, 0x41,
	0xb7, 0xa0, 0xc6, 0x4e, 0x4a, 0x6a, 0x1f, 0xaa, 0xd4, 0xee, 0x3b, 0xb9, 0xf2, 0xcd, 0xa5, 0x42,
	0xf9, 0xa6, 0x1e, 0xb8, 0x2c, 0xe7, 0x03, 0x97, 0x3f, 0x2b, 0x41, 0x9b, 0xa2, 0xfc, 0x99, 0x9f,
	0x5b, 0x70, 0x18, 0x17, 0xce, 0x76, 0x18, 0x4b, 0x67, 0x38, 0x8c, 0x8b, 0x67, 0x38, 0x8c, 0xfa,
	0x81, 0x25, 0xcc, 0x79, 0xcd, 0xb3, 0x7e, 0x65, 0x79, 0x9e, 0x5f, 0xf9, 0x26, 0x2c, 0x17, 0x9d,
	0x64, 0x19, 0x01, 0x0f, 0xf3, 0xfe, 0xf1, 0x8c, 0x35, 0xa8, 0xce, 0xb1, 0x06, 0x9f, 0xa9, 0x65,
	0x48, 0xdd, 0x9b, 0xcb, 0x80, 0x47, 0x95, 0x00, 0xcf, 0xb1, 0xef, 0x49, 0x9e, 0xc8, 0x00, 0x78,
	0x76, 0x91, 0x07, 0x62, 0x65, 0x15, 0x64, 0xb3, 0xf7, 0x3d, 0x28, 0x3f, 0xed, 0xef, 0xf6, 0xf7,
	0x5e, 0xae, 0x5c, 0xa1, 0xf7, 0x2f, 0x4b, 0xb0, 0x38, 0x78, 0xf8, 0xe0, 0x7f, 0x40, 0x62, 0xf0,
	0xda, 0xac, 0xff, 0x5a, 0xbf, 0xa0, 0x8f, 0x4a, 0xb5, 0xaa, 0x23, 0xd7, 0xcf, 0x3c, 0xff, 0x8a,
	0xaa, 0x55, 0x45, 0xa8, 0xf2, 0xfb, 0x4f, 0xcb, 0x11, 0x56, 0x5f, 0x2a, 0x47, 0x78, 0x09, 0xea,
	0x32, 0x9a, 0x92, 0x1e, 0x3a, 0x6b, 0x0c, 0xe8, 0x53, 0x51, 0x60, 0xe4, 0x0c, 0x4d, 0x7e, 0xbf,
	0x3c, 0x87, 0xd4, 0x23, 0x67, 0xf8, 0x88, 0x00, 0xb8, 0x67, 0x88, 0x4e, 0xf3, 0x14, 0xe5, 0xc8,
	0x19, 0x72, 0xb5, 0x25, 0x82, 0x89, 0x67, 0x1b, 0x72, 0xbb, 0x9d, 0x21, 0x71, 0xab, 0x44, 0x11,
	0x63, 0xc9, 0x4a, 0xf9, 0xc8, 0x19, 0x16, 0xee, 0x75, 0xb5, 0x72, 0x6a, 0xfe, 0x5a, 0xfe, 0x14,
	0xcb, 0x41, 0xda, 0xb3, 0x52, 0x82, 0xcb, 0xa7, 0xa7, 0x04, 0x3b, 0xa7, 0x86, 0x38, 0xd2, 0xa8,
	0xc5, 0xca, 0x59, 0x51, 0x8b, 0xdf, 0x5b, 0x80, 0xea, 0xe0, 0xe1, 0x03, 0xb2, 0xd6, 0xef, 0x00,
	0x0c, 0x5d, 0xdf, 0x8a, 0xa6, 0xa6, 0x17, 0x8c, 0x64, 0xe6, 0xac, 0x95, 0x76, 0x43, 0x92, 0x41,
	0x9d, 0x09, 0x1e, 0x07, 0x23, 0xe3, 0x6d, 0xa8, 0x8b, 0x28, 0x0a, 0x22, 0x22, 0x2e, 0xcd, 0x23,
	0xae, 0x11, 0x1e, 0x69, 0x77, 0xa0, 0x16, 0x7b, 0xc1, 0x73, 0x22, 0x5d, 0x9c, 0x47, 0x5a, 0x45,
	0xf4, 0xe3, 0x60, 0xd4, 0xfb, 0xb3, 0x12, 0x34, 0x07, 0x0f, 0x1f, 0x64, 0xda, 0x68, 0x03, 0x2a,
	0xb2, 0xc0, 0x82, 0x25, 0x40, 0xb6, 0x8a, 0x5a, 0xaa, 0x74, 0xb6, 0x96, 0x5a, 0x2c, 0x68, 0x29,
	0xe2, 0x91, 0x13, 0xa9, 0x36, 0xa4, 0xba, 0x1c, 0x5b, 0x27, 0xac, 0x30, 0x10, 0xe9, 0xfa, 0x12,
	0x29, 0x5d, 0xb4, 0xb1, 0xeb, 0x33, 0x52, 0xd7, 0x6f, 0x95, 0xbc, 0x7e, 0xc3, 0x6d, 0x13, 0x74,
	0x73, 0x47, 0x3f, 0x2f, 0x37, 0x24, 0x4c, 0x71, 0xcb, 0xb1, 0x15, 0xe9, 0x29, 0xea, 0xea, 0xb1,
	0x15, 0xe9, 0xa8, 0x34, 0x3d, 0xcd, 0x28, 0x62, 0xa4, 0x4b, 0x50, 0x47, 0x14, 0x4f, 0x08, 0xe4,
	0x1d, 0x09, 0x8b, 0xd5, 0x5b, 0xef, 0x5f, 0x57, 0xa0, 0xa5, 0xaf, 0x18, 0xa7, 0x83, 0x5c, 0xdf,
	0xa1, 0x2b, 0x6a, 0x22, 0x4e, 0x55, 0x07, 0xc2, 0xee, 0x33, 0x08, 0x75, 0xe2, 0xd0, 0xf5, 0xbd,
	0x60, 0x64, 0x1e, 0x04, 0xd1, 0xd8, 0x4a, 0x94, 0x1b, 0xcd, 0xc0, 0x4f, 0x09, 0x46, 0xe1, 0x8b,
	0x43, 0x2b, 0xb2, 0x6c, 0x3a, 0x3e, 0x89, 0xc4, 0xe4, 0x3c, 0x82, 0x54, 0xeb, 0x46, 0x8a, 0xdb,
	0x17, 0xc9, 0x3e, 0x61, 0x50, 0x2b, 0xe2, 0xd1, 0xcc, 0x71, 0xd5, 0xdd, 0x24, 0xd5, 0x44, 0xf3,
	0xaf, 0x2a, 0x88, 0x14, 0x6b, 0x4b, 0x19, 0x64, 0xb5, 0xb1, 0x26, 0xb1, 0xfb, 0x8c, 0x94, 0xe2,
	0xb8, 0x03, 0x1d, 0x71, 0x12, 0xba, 0x91, 0x40, 0xce, 0x89, 0x4d, 0xc7, 0x9a, 0xc6, 0xd2, 0x27,
	0x6a, 0x33, 0xfc, 0x71, 0x30, 0x8a, 0x1f, 0x5a, 0x53, 0x0a, 0x7c, 0xbb, 0xbe, 0x1f, 0x38, 0x43,
	0xe5, 0x14, 0x71, 0xcb, 0xf8, 0x3e, 0x5c, 0xe6, 0x27, 0x73, 0x38, 0x39, 0x38, 0x20, 0x6b, 0x1d,
	0x78, 0x66, 0x76, 0xff, 0x87, 0x5d, 0xe5, 0x2d, 0xa6, 0x79, 0x40, 0x24, 0x7b, 0x41, 0xe0, 0xf5,
	0xd3, 0xcb, 0x3f, 0x1f, 0xc2, 0xe6, 0x9c, 0x01, 0xd2, 0x5b, 0x38, 0xf5, 0xc1, 0x5a, 0xb1, 0x2f,
	0xc9, 0xe7, 0xfb, 0xb0, 0x2e, 0xbb, 0xa1, 0xd3, 0x6b, 0x86, 0x68, 0xca, 0xac, 0xa1, 0xa7, 0xae,
	0x56, 0x18, 0x8c, 0x44, 0xde, 0xdf, 0x13, 0xd1, 0x33, 0xc4, 0x18, 0xf7, 0xe1, 0xaa, 0xea, 0xe2,
	0x4d, 0xe2, 0x43, 0xfc, 0x64, 0xd3, 0x4a, 0xcc, 0x24, 0x3a, 0x31, 0xed, 0x60, 0x8c, 0xae, 0x7b,
	0x43, 0x9f, 0xec, 0xa7, 0x48, 0xf4, 0x38, 0x18, 0xdd, 0x4f, 0x9e, 0x45, 0x27, 0xbb, 0x44, 0x60,
	0xdc, 0x81, 0xd5, 0xdc, 0x10, 0x32, 0x0f, 0xc7, 0x41, 0xae, 0x15, 0xad, 0x9f, 0x4c, 0xc3, 0x91,
	0x77, 0x4b, 0xf4, 0x6e, 0x60, 0xda, 0x56, 0x68, 0xd9, 0x6e, 0xa2, 0xa2, 0xcb, 0x1d, 0xc6, 0xf4,
	0x83, 0x5d, 0x09, 0x47, 0x2b, 0x22, 0xa9, 0x71, 0x6a, 0x72, 0x39, 0x68, 0x25, 0x64, 0x9e, 0x89,
	0xb1, 0x8f, 0x83, 0x11, 0x2f, 0x06, 0x2d, 0xc4, 0x5d, 0x58, 0xd3, 0x3a, 0xd1, 0x62, 0xa4, 0x3a,
	0x2d, 0x9d, 0xd3, 0xe3, 0x60, 0x84, 0x4b, 0x41, 0x1d, 0x3e, 0x86, 0xad, 0x42, 0x87, 0xd8, 0x74,
	0x7d, 0x79, 0x73, 0x85, 0x63, 0xd1, 0xeb, 0xb9, 0x5e, 0x71, 0xdf, 0xe7, 0x33, 0xe9, 0x77, 0x61,
	0x5b, 0xf6, 0x44, 0xd9, 0x76, 0xdc, 0x28, 0x99, 0x9a, 0xa1, 0x35, 0x12, 0xb1, 0x19, 0xda, 0x89,
	0xbc, 0x1b, 0x24, 0xbf, 0xe0, 0x89, 0x75, 0xf2, 0x10, 0xf1, 0x7b, 0x88, 0xde, 0xb3, 0x13, 0xed,
	0xdb, 0x50, 0xa5, 0xe0, 0x72, 0x24, 0x87, 0xf8, 0x14, 0xcb, 0xeb, 0x1e, 0xf2, 0xdb, 0x50, 0xbb,
	0xf4, 0x83, 0x67, 0x8c, 0xd2, 0x78, 0xe3, 0x79, 0xe4, 0xa2, 0x3d, 0xcf, 0x7a, 0x71, 0x3d, 0xa9,
	0xfc, 0xf4, 0xff, 0x8f, 0xd8, 0xac, 0xdb, 0x5d, 0xdc, 0xa5, 0x44, 0xa0, 0xf0, 0xb8, 0xc7, 0x6c,
	0x5d, 0x83, 0x49, 0x22, 0x83, 0xd8, 0x86, 0x86, 0x7a, 0xc6, 0x18, 0xe3, 0x36, 0x2c, 0x1f, 0x89,
	0x69, 0x6e, 0xc5, 0xb9, 0x64, 0xab, 0x75, 0x24, 0xa6, 0xda, 0x5a, 0x6f, 0x42, 0x95, 0x76, 0xc6,
	0xf5, 0x55, 0x45, 0xaa, 0x17, 0x8c, 0x1e, 0xb8, 0x3e, 0x2a, 0x10, 0x44, 0x90, 0x3e, 0x96, 0x15,
	0x5c, 0x35, 0x2f, 0x18, 0x3d, 0xc2, 0xb6, 0xf1, 0x03, 0xf4, 0x67, 0x47, 0xe6, 0xd7, 0x13, 0x11,
	0xb9, 0x22, 0x36, 0x7d, 0xba, 0x4c, 0x44, 0xd5, 0x86, 0xbe, 0x23, 0x4e, 0x44, 0x4c, 0x55, 0x5d,
	0xf5, 0xc1, 0x96, 0x17, 0x8c, 0xfe, 0x1f, 0xd3, 0x3c, 0x0d, 0x92, 0x2f, 0x91, 0xa2, 0xcf, 0x04,
	0xc6, 0xdb, 0xb0, 0x82, 0x23, 0x50, 0xf4, 0xd6, 0x9c, 0x84, 0x0e, 0xda, 0x64, 0x59, 0xd1, 0xb5,
	0xec, 0x05, 0xa3, 0x7d, 0x84, 0x7f, 0xc9, 0x60, 0xfc, 0x16, 0x2f, 0xf0, 0xf9, 0x75, 0x53, 0x36,
	0x80, 0xdb, 0x7c, 0x46, 0x42, 0x30, 0xbe, 0x60, 0xaa, 0x5c, 0x16, 0x2f, 0x78, 0x2e, 0x22, 0xd3,
	0xb6, 0x62, 0xc1, 0xb2, 0x43, 0x6a, 0x33, 0x96, 0x65, 0xaa, 0xab, 0x84, 0xdd, 0xb5, 0x62, 0x41,
	0xd2, 0x83, 0x2a, 0x34, 0x46, 0x7e, 0xc6, 0xad, 0xb7, 0x3c, 0x44, 0x3a, 0x66, 0x68, 0xd9, 0x47,
	0x22, 0x91, 0x85, 0x5f, 0x9d, 0xb1, 0x75, 0x72, 0x9f, 0x11, 0x7b, 0x04, 0x57, 0xd4, 0x76, 0xe0,
	0xfb, 0xc2, 0x4e, 0x78, 0x75, 0xe2, 0xee, 0x15, 0xe6, 0xfe, 0xb1, 0x75, 0xb2, 0xcb, 0x08, 0x5a,
	0x25, 0xca, 0x8c, 0x68, 0xd4, 0x6e, 0xe0, 0xc7, 0xdd, 0xab, 0xac, 0x8a, 0x32, 0x52, 0x84, 0x1a,
	0xef, 0xc2, 0x2a, 0x12, 0x1e, 0x0a, 0x2b, 0x94, 0xf3, 0xa6, 0x1d, 0xbb, 0x96, 0xce, 0xe2, 0x33,
	0x61, 0x85, 0x34, 0x69, 0xda, 0xb4, 0x1d, 0xe8, 0x04, 0xa1, 0xf0, 0x25, 0xa7, 0xf3, 0x19, 0xfd,
	0x3a, 0x0f, 0x8c, 0x70, 0xe2, 0x70, 0x3e, 0xaa, 0xab, 0x4c, 0xe1, 0x0d, 0x2d, 0x53, 0xb8, 0x03,
	0x1d, 0x5e, 0x49, 0x2d, 0x43, 0xd6, 0xe3, 0xde, 0x04, 0xdf, 0x4d, 0xd3, 0x64, 0x05, 0x4a, 0xb2,
	0x33, 0x37, 0x8b, 0x94, 0xca, 0xdc, 0x44, 0xc2, 0xb3, 0xd8, 0x0d, 0x78, 0x43, 0x9e, 0x4e, 0x10,
	0x80, 0xa6, 0xfc, 0x36, 0x2c, 0xa7, 0x48, 0xe6, 0x90, 0xee, 0x2d, 0xe6, 0x45, 0x45, 0x42, 0x5c,
	0x41, 0xf9, 0xa1, 0x23, 0x79, 0xb1, 0xd9, 0x44, 0x57, 0xdb, 0x3b, 0x16, 0xdd, 0x37, 0x99, 0x27,
	0x10, 0x81, 0x1b, 0x36, 0x60, 0x30, 0x8e, 0xc9, 0xbc, 0x23, 0x4e, 0x84, 0xcd, 0x25, 0x0c, 0x3b,
	0x32, 0x19, 0x8d, 0xe0, 0x47, 0x27, 0xc2, 0xa6, 0x22, 0x06, 0x1c, 0x93, 0xe8, 0xa8, 0x00, 0x57,
	0x8a, 0xcd, 0x5b, 0x72, 0x4c, 0x44, 0x3c, 0x15, 0x89, 0x92, 0x99, 0x37, 0xa0, 0x4d, 0x2e, 0x07,
	0x7f, 0x33, 0x7e, 0xc9, 0xdb, 0x7c, 0x98, 0x46, 0x28, 0xb1, 0x19, 0x7e, 0xcd, 0xbb, 0xb0, 0x9a,
	0xa7, 0xa2, 0x6d, 0xe8, 0x7e, 0x8b, 0xf7, 0x4a, 0x27, 0x25, 0x0f, 0x69, 0x0b, 0x6a, 0xf1, 0xd7,
	0x1e, 0xcf, 0xf0, 0x1d, 0x99, 0xb2, 0xf8, 0xda, 0xa3, 0xb9, 0xa1, 0x53, 0x37, 0xf5, 0x6d, 0x93,
	0x2d, 0x68, 0xf7, 0x5d, 0xf6, 0x47, 0x10, 0xf4, 0x80, 0x20, 0xb8, 0xfe, 0x44, 0xa0, 0x7c, 0x53,
	0xff, 0x20, 0xe8, 0xde, 0xe1, 0xf5, 0x47, 0xf8, 0x13, 0xf6, 0x50, 0xfd, 0x83, 0x80, 0xa6, 0x8e,
	0x94, 0xd9, 0x26, 0xdc, 0x95, 0x53, 0x9f, 0xfa, 0xf6, 0x40, 0x6d, 0x04, 0x4e, 0x3d, 0x47, 0xc5,
	0x43, 0xbe, 0xc7, 0xec, 0xab, 0x93, 0xd2, 0xa0, 0x3b, 0xd0, 0x61, 0x66, 0x24, 0x66, 0x23, 0x1e,
	0xe8, 0xbe, 0xcf, 0xaf, 0x27, 0xf8, 0x17, 0xa1, 0xf0, 0x39, 0x43, 0xfc, 0x36, 0xac, 0xb0, 0x16,
	0xd3, 0x79, 0xea, 0x1e, 0xaf, 0x32, 0x23, 0x32, 0xa6, 0x7a, 0x03, 0xda, 0xc9, 0x38, 0xc7, 0xe6,
	0x1f, 0xb0, 0x23, 0x91, 0x8c, 0x35, 0x16, 0xdf, 0x80, 0x4a, 0x32, 0x0e, 0xd1, 0x2b, 0xf8, 0xb6,
	0xfc, 0xdb, 0x02, 0xb5, 0xd2, 0xd2, 0xc8, 0x0f, 0xb3, 0xd2, 0x48, 0x74, 0x5e, 0x9e, 0x5b, 0x6e,
	0xb6, 0xbd, 0x1f, 0xb1, 0xef, 0x8b, 0x30, 0xb9, 0xb5, 0xbd, 0x07, 0xec, 0x22, 0xa6, 0x27, 0xb5,
	0x0d, 0xa8, 0xf0, 0xa2, 0x2a, 0x17, 0x91, 0x5b, 0x78, 0x24, 0x4e, 0x82, 0x90, 0x18, 0x43, 0xfa,
	0x37, 0x69, 0xbb, 0xf7, 0x77, 0xe8, 0x67, 0x6a, 0x01, 0xe0, 0x57, 0x0b, 0x93, 0xe4, 0xae, 0xf6,
	0x94, 0x0a, 0x57, 0x7b, 0xe6, 0x85, 0xa0, 0x17, 0xe7, 0x86, 0xa0, 0xdf, 0x01, 0x23, 0x4f, 0xa9,
	0x1d, 0x92, 0x3b, 0x3a, 0xad, 0x8a, 0xe3, 0x4a, 0xb2, 0xf4, 0x90, 0x5c, 0xe6, 0x63, 0x84, 0x6b,
	0x93, 0x1c, 0x73, 0x44, 0xfb, 0x7d, 0xe9, 0xa6, 0xd2, 0x73, 0x1a, 0xe5, 0xae, 0x66, 0x51, 0x6e,
	0x09, 0xfb, 0x40, 0x3a, 0xa4, 0xf4, 0x2c, 0x61, 0xdf, 0x96, 0x3e, 0x0e, 0x3d, 0xe7, 0xc2, 0x08,
	0x90, 0x0f, 0x23, 0xfc, 0xf5, 0x02, 0xac, 0xe8, 0xcb, 0xf9, 0xc8, 0x4f, 0xa2, 0x69, 0x7e, 0x59,
	0x16, 0x0a, 0xcb, 0xf2, 0x01, 0x6c, 0xe4, 0x3f, 0x56, 0x60, 0x9f, 0x6c, 0x01, 0x57, 0xa3, 0xe2,
	0x78, 0x7d, 0xc7, 0xf8, 0x0e, 0x74, 0xe7, 0x75, 0xd2, 0xa2, 0x0d, 0xeb, 0x33, 0xdd, 0x68, 0xb1,
	0xd4, 0x5a, 0x2c, 0xcd, 0x59, 0x8b, 0xb2, 0x16, 0xf1, 0xff, 0xa3, 0x12, 0x34, 0xf8, 0x43, 0xf8,
	0xce, 0xc1, 0x2b, 0xb1, 0x45, 0xfe, 0x86, 0x5b, 0xe9, 0x9c, 0x1b, 0x6e, 0x8b, 0x33, 0x37, 0xdc,
	0xf4, 0x50, 0xf1, 0x52, 0x21, 0x54, 0x9c, 0xbf, 0xdd, 0x56, 0x9e, 0x73, 0xbb, 0x4d, 0xbb, 0xbe,
	0x56, 0x29, 0x5e, 0x5f, 0xcb, 0xed, 0x4c, 0xb5, 0xb0, 0x33, 0xfa, 0x3e, 0xd7, 0xf2, 0xfb, 0xfc,
	0xab, 0x05, 0x58, 0xdd, 0xbf, 0xf7, 0x50, 0x5d, 0x0e, 0x48, 0x8f, 0x1c, 0x37, 0x41, 0xdd, 0x18,
	0x90, 0xa7, 0x14, 0x79, 0xd9, 0x41, 0x02, 0xf9, 0xe8, 0x74, 0x7e, 0x0e, 0xe4, 0x0a, 0x00, 0x05,
	0x6f, 0x72, 0x05, 0x26, 0x04, 0xc9, 0x0e, 0x58, 0x74, 0x6a, 0xd4, 0x73, 0x9d, 0x0d, 0x09, 0x53,
	0xd9, 0xce, 0xc4, 0x8a, 0x46, 0xea, 0x82, 0x86, 0xcc, 0x7e, 0x30, 0x88, 0x02, 0x3d, 0xff, 0xb6,
	0x08, 0xb5, 0xfd, 0x7b, 0xf2, 0xbc, 0xf2, 0x9a, 0x53, 0x3a, 0xf9, 0xe8, 0xe9, 0x62, 0x31, 0x7a,
	0x6a, 0xc0, 0x92, 0x26, 0xe0, 0xf4, 0x5c, 0x88, 0x0e, 0x95, 0x8b, 0x29, 0xf3, 0xeb, 0xd0, 0x8c,
	0xef, 0xc9, 0x73, 0x98, 0x96, 0xbc, 0x89, 0xe5, 0x07, 0x71, 0xda, 0x25, 0xa3, 0x48, 0xc3, 0x5d,
	0x68, 0x3c, 0x24, 0x0d, 0x2d, 0x53, 0x71, 0x25, 0x6b, 0xb3, 0x2b, 0x79, 0x5a, 0x89, 0x51, 0x21,
	0x07, 0x0f, 0x2f, 0x55, 0x91, 0xd9, 0xb8, 0x58, 0x65, 0x46, 0xf3, 0xbc, 0xca, 0x8c, 0xd6, 0x59,
	0x31, 0x8e, 0x5f, 0x95, 0xa0, 0xbd, 0x7f, 0x6f, 0xff, 0xd0, 0x8a, 0x84, 0xf3, 0x8c, 0x38, 0xe1,
	0x75, 0x6f, 0xfc, 0x35, 0x68, 0x88, 0x13, 0xf4, 0xcf, 0x74, 0x46, 0x06, 0x06, 0x11, 0x27, 0x17,
	0xf7, 0x71, 0x69, 0x66, 0x1f, 0xd1, 0xbc, 0xdf, 0x33, 0x63, 0x9a, 0xb4, 0x29, 0x59, 0x3a, 0x0d,
	0xdf, 0x76, 0xe2, 0xdc, 0xe7, 0xf0, 0x2d, 0x20, 0x7d, 0x57, 0x2a, 0x17, 0xda, 0x95, 0x82, 0xd0,
	0x54, 0x67, 0x84, 0xe6, 0x1f, 0x4b, 0xd0, 0xda, 0xcf, 0xfd, 0x2d, 0xe0, 0x37, 0x2b, 0x39, 0xf9,
	0xe4, 0xf6, 0xd2, 0x99, 0xc9, 0xed, 0xf2, 0xf9, 0xc9, 0xed, 0xf9, 0xc5, 0x4c, 0x95, 0xf9, 0xc5,
	0x4c, 0x77, 0x60, 0xb5, 0x40, 0xab, 0x05, 0x7b, 0x56, 0x72, 0xd4, 0x72, 0xab, 0x99, 0xe5, 0x6b,
	0xa7, 0x5e, 0x85, 0xff, 0x79, 0x09, 0x8c, 0xdc, 0xea, 0xf6, 0xf7, 0xf6, 0x5f, 0x3f, 0x8f, 0x92,
	0x01, 0x89, 0xd5, 0x9e, 0xab, 0x25, 0x46, 0x08, 0x89, 0xff, 0x87, 0xb0, 0x59, 0x5c, 0x12, 0xa2,
	0xce, 0x12, 0x36, 0xf9, 0x85, 0x41, 0x64, 0xdf, 0x31, 0xfe, 0x17, 0x6c, 0xcd, 0xed, 0xa6, 0x67,
	0x6c, 0x66, 0x3b, 0xd2, 0x42, 0xc9, 0xbc, 0x47, 0x25, 0xcb, 0x7b, 0xfc, 0xb4, 0x04, 0x2b, 0xb9,
	0x85, 0xa1, 0xf4, 0xcd, 0x06, 0x54, 0xe4, 0x0f, 0x73, 0xa4, 0xbb, 0xc7, 0x2d, 0xbe, 0x17, 0xc5,
	0xf1, 0x79, 0x95, 0x95, 0x50, 0x6d, 0x79, 0x67, 0x8a, 0xcb, 0x7c, 0x17, 0xd3, 0x3b, 0x53, 0x5c,
	0xde, 0x3b, 0x77, 0xf3, 0x97, 0xe6, 0x6f, 0xfe, 0x07, 0xb0, 0x51, 0xa0, 0x55, 0x59, 0xa3, 0xb2,
	0x2a, 0xb5, 0x2d, 0x4c, 0x37, 0xad, 0x2c, 0x78, 0x29, 0x3f, 0xac, 0xf7, 0x8b, 0x05, 0x58, 0xcf,
	0x2d, 0x81, 0x0a, 0x75, 0xa3, 0x95, 0x2e, 0x64, 0xdf, 0xab, 0x23, 0x39, 0xcb, 0xf7, 0xa0, 0x8c,
	0xd3, 0x52, 0x65, 0xe4, 0xd9, 0x3f, 0xd3, 0x66, 0x16, 0x73, 0xc0, 0x84, 0xc6, 0x27, 0xb0, 0x5d,
	0xf8, 0xae, 0x34, 0x12, 0x9f, 0x7a, 0xab, 0x9b, 0xf1, 0xbc, 0x79, 0xf4, 0x9d, 0xde, 0x9f, 0xd3,
	0x36, 0x15, 0x4a, 0x8c, 0x5f, 0x37, 0xfb, 0xde, 0x85, 0x55, 0xbd, 0xd8, 0xd9, 0x0e, 0xfc, 0x44,
	0xf8, 0x49, 0x1a, 0x9b, 0xcc, 0x50, 0xbb, 0x8c, 0xd1, 0x6b, 0x4d, 0x8e, 0xc4, 0x54, 0x69, 0x5c,
	0x09, 0xfa, 0x5c, 0x4c, 0x4f, 0xaf, 0xa2, 0x2e, 0x9f, 0x5e, 0x45, 0xfd, 0x11, 0x4a, 0xc9, 0x4c,
	0x1f, 0x2d, 0x38, 0xbc, 0x3e, 0xd3, 0x8b, 0xb2, 0x93, 0xbf, 0xae, 0x42, 0x2d, 0xdd, 0xc9, 0xd7,
	0x2f, 0xe8, 0x87, 0x74, 0x9a, 0x3b, 0xb4, 0x5c, 0x75, 0x4f, 0xa5, 0x8e, 0x90, 0x5d, 0x04, 0x18,
	0x9b, 0x50, 0x75, 0x63, 0x13, 0xdb, 0x52, 0x91, 0x56, 0xdc, 0xf8, 0x33, 0x61, 0x91, 0x1b, 0xe8,
	0xc6, 0x66, 0x62, 0x1d, 0x09, 0x5f, 0x1e, 0x2e, 0xaa, 0x6e, 0xfc, 0x0c, 0x9b, 0xdf, 0xf0, 0xa5,
	0xae, 0x4b, 0x80, 0x3e, 0x9e, 0xf0, 0x13, 0xcd, 0x19, 0x65, 0x00, 0xe7, 0x35, 0xd3, 0xdb, 0x8e,
	0xb5, 0xc2, 0x6d, 0x47, 0xfd, 0x47, 0x67, 0xf5, 0xf3, 0x7f, 0x74, 0xa6, 0xdd, 0x78, 0x84, 0xb9,
	0x37, 0x1e, 0x1b, 0xda, 0x8d, 0x47, 0x3c, 0x5d, 0x69, 0x22, 0x20, 0x7f, 0xc8, 0x10, 0xa7, 0x5c,
	0x8f, 0x2e, 0x6f, 0x4a, 0xa0, 0x55, 0xe9, 0x37, 0x15, 0x90, 0x74, 0xda, 0xa7, 0xb0, 0x92, 0x12,
	0xa5, 0x53, 0x6d, 0xd3, 0x54, 0xb7, 0x32, 0xa9, 0x94, 0x14, 0xe9, 0x94, 0x3b, 0x71, 0x01, 0x62,
	0x7c, 0x5f, 0x7b, 0xd9, 0x0b, 0xfe, 0x8d, 0x2d, 0x9d, 0x08, 0xad, 0xb1, 0x3e, 0x5b, 0x52, 0xf8,
	0x9d, 0xfc, 0x6c, 0x0b, 0x2e, 0xdf, 0xca, 0x59, 0x2e, 0x9f, 0xf1, 0xd2, 0x75, 0xba, 0xab, 0xf3,
	0xeb, 0x74, 0xd7, 0x4e, 0xf5, 0x06, 0xd1, 0x33, 0x09, 0x12, 0xcb, 0x93, 0xa5, 0xc8, 0xeb, 0x7c,
	0xc6, 0x25, 0x50, 0x5a, 0x17, 0xcd, 0x04, 0xda, 0x95, 0xd5, 0x3a, 0x41, 0x28, 0xf2, 0x30, 0xd7,
	0x9b, 0xdc, 0x3c, 0xc5, 0x9b, 0xbc, 0x01, 0xcd, 0x63, 0x37, 0x4a, 0x26, 0x6a, 0x34, 0xbe, 0x7e,
	0xdf, 0x90, 0x30, 0x1a, 0x2f, 0x7f, 0xa3, 0x74, 0x6b, 0xe6, 0x46, 0xe9, 0xe7, 0xd0, 0x29, 0xee,
	0x66, 0xfe, 0x96, 0xf0, 0x42, 0xe1, 0x96, 0xb0, 0x7e, 0x1f, 0xb8, 0x94, 0xbf, 0x0f, 0xdc, 0xfb,
	0x10, 0x96, 0xe8, 0x66, 0xea, 0x1a, 0x94, 0xc5, 0xd8, 0x72, 0xd5, 0xc5, 0x21, 0x6e, 0xd0, 0xad,
	0xd7, 0x58, 0x8f, 0x38, 0x54, 0x26, 0xf4, 0xbf, 0xa7, 0xde, 0x77, 0x60, 0xe9, 0xb7, 0x03, 0x5f,
	0xdf, 0xcd, 0x85, 0xdc, 0x6e, 0x6a, 0x05, 0x24, 0xa5, 0x5c, 0x01, 0xc9, 0x3f, 0xb7, 0xa1, 0xba,
	0x2b, 0xaf, 0xc6, 0x5d, 0x83, 0xc6, 0xc8, 0x0b, 0x86, 0x96, 0x67, 0x4e, 0x26, 0x59, 0x21, 0x16,
	0x83, 0xbe, 0x9c, 0xb8, 0xce, 0x05, 0x92, 0xcf, 0x3f, 0x82, 0x4d, 0xbe, 0xcf, 0x23, 0xaf, 0xfa,
	0x08, 0xdf, 0x1a, 0x7a, 0x62, 0xac, 0xb4, 0x75, 0xe3, 0xde, 0xed, 0xac, 0x1c, 0x9d, 0xdf, 0x7e,
	0xe7, 0x33, 0xa2, 0xa7, 0xeb, 0x3f, 0x8f, 0x52, 0xea, 0xc1, 0xfa, 0xe1, 0x3c, 0x30, 0xd5, 0x18,
	0x1e, 0x8c, 0xc6, 0xa3, 0xb1, 0xe6, 0x9c, 0xd4, 0x25, 0xa4, 0xef, 0x18, 0x8f, 0xa0, 0x6d, 0x4f,
	0xe2, 0x24, 0x18, 0x9b, 0xf2, 0x2d, 0xf2, 0x8f, 0x31, 0x57, 0x67, 0xde, 0xba, 0x4b, 0x64, 0xfb,
	0x0c, 0x1d, 0xb4, 0x6c, 0xbd, 0x69, 0xac, 0x43, 0xc5, 0x0a, 0x35, 0xbf, 0xb0, 0x6c, 0x85, 0x68,
	0x6a, 0x3f, 0x87, 0x8e, 0xe5, 0x1c, 0x5b, 0xbe, 0x2d, 0x1c, 0xf9, 0x1b, 0xbf, 0x58, 0xa6, 0xad,
	0xaf, 0xcf, 0x8c, 0x7f, 0x5f, 0x12, 0xf2, 0xdf, 0xfd, 0xe2, 0xc1, 0xb2, 0x95, 0x07, 0x14, 0x7e,
	0x24, 0x55, 0x2b, 0xfe, 0x48, 0xea, 0x95, 0x2e, 0x29, 0xe0, 0xd8, 0x3c, 0x8f, 0x4c, 0xff, 0xd5,
	0x25, 0x44, 0xff, 0xa7, 0x60, 0x43, 0xbf, 0xad, 0xfe, 0x3d, 0x68, 0xca, 0x42, 0x81, 0x17, 0xbd,
	0x7e, 0xd7, 0x90, 0xf4, 0xf4, 0xce, 0x1f, 0xc0, 0x65, 0xd7, 0xb7, 0x23, 0xda, 0x26, 0xcb, 0x53,
	0xac, 0x12, 0x4f, 0x42, 0x3c, 0x07, 0x09, 0x47, 0xde, 0x53, 0xd8, 0xd6, 0x68, 0x98, 0x6d, 0xf6,
	0x15, 0x05, 0xfd, 0xac, 0x45, 0xce, 0x9a, 0xb4, 0x96, 0xcc, 0x84, 0x4b, 0x18, 0x29, 0xad, 0x33,
	0xfe, 0x34, 0xf9, 0x1e, 0xac, 0x8d, 0x45, 0x62, 0x39, 0x56, 0x62, 0x99, 0xa4, 0xf9, 0x2d, 0xdb,
	0x16, 0x71, 0x2c, 0x53, 0x41, 0x86, 0xc2, 0x0d, 0x82, 0x20, 0xb9, 0x4f, 0x18, 0xe3, 0x16, 0xb4,
	0xd5, 0x07, 0x4b, 0xd9, 0xe1, 0x1b, 0xf6, 0x2d, 0x09, 0xdd, 0x9f, 0xab, 0x10, 0xd7, 0x2e, 0xa4,
	0x10, 0xf3, 0x77, 0x35, 0xd6, 0x8b, 0x77, 0x35, 0xae, 0x41, 0x03, 0x19, 0x4d, 0x15, 0x4c, 0x70,
	0x22, 0x07, 0xac, 0x30, 0x54, 0xd5, 0x12, 0x2f, 0x74, 0x1d, 0x41, 0x93, 0xfe, 0x6e, 0x4e, 0xfa,
	0x0b, 0xfe, 0xc2, 0xd6, 0xac, 0xbf, 0xf0, 0x01, 0xd4, 0x88, 0xd3, 0xfd, 0x83, 0x80, 0x52, 0x27,
	0xfa, 0xdf, 0x7b, 0x53, 0x56, 0x0e, 0xc3, 0xbe, 0x7f, 0x10, 0x0c, 0xaa, 0x16, 0x3f, 0xcc, 0x57,
	0xb4, 0x57, 0x4e, 0x51, 0xb4, 0x54, 0xe5, 0x39, 0x89, 0x85, 0x49, 0xa5, 0x8d, 0x32, 0x8d, 0x02,
	0x04, 0xfa, 0x0c, 0x21, 0x85, 0x1f, 0xb2, 0x5d, 0x9b, 0xf9, 0x21, 0x1b, 0x97, 0x08, 0x25, 0xbe,
	0x88, 0xd4, 0x96, 0x72, 0x4e, 0xa4, 0x25, 0xa1, 0x72, 0x37, 0x55, 0x80, 0xa5, 0xa7, 0x05, 0x58,
	0xd6, 0xa0, 0x1c, 0x05, 0xe8, 0x1b, 0xdf, 0xa4, 0x3a, 0x35, 0x6e, 0xa0, 0xef, 0xe7, 0x59, 0xf1,
	0x1c, 0x8f, 0x86, 0xd3, 0x1f, 0xab, 0x12, 0x99, 0x73, 0x5b, 0x8a, 0x7f, 0xde, 0xbb, 0x35, 0xf3,
	0xe7, 0xbd, 0x35, 0x28, 0x3b, 0x62, 0x38, 0x19, 0x75, 0x6f, 0xf3, 0x7f, 0x75, 0xa9, 0x61, 0xfc,
	0x1f, 0xa8, 0xb0, 0x24, 0x50, 0xea, 0xe2, 0xc5, 0xd5, 0x9f, 0xec, 0x65, 0xf4, 0xa1, 0xa3, 0x31,
	0x08, 0xef, 0xd3, 0xdb, 0x34, 0xd2, 0xb5, 0x79, 0xfb, 0x24, 0xd9, 0x86, 0xb6, 0xab, 0x6d, 0xe5,
	0xda, 0xdb, 0x3f, 0x82, 0xf5, 0xb9, 0xef, 0x32, 0xda, 0x50, 0xb2, 0xb9, 0xda, 0xba, 0x36, 0x28,
	0xd9, 0x96, 0xd1, 0x85, 0x6a, 0x10, 0x39, 0x22, 0x12, 0x11, 0x29, 0xf9, 0xda, 0x40, 0x35, 0xc9,
	0x79, 0x13, 0x22, 0xa2, 0x22, 0x70, 0xd2, 0xe7, 0xb5, 0x41, 0x0d, 0x01, 0x4f, 0x03, 0x47, 0x6c,
	0x2f, 0x43, 0x2b, 0xa7, 0x54, 0xb7, 0x57, 0x60, 0xb9, 0xa0, 0x05, 0xb7, 0xbf, 0x80, 0xaa, 0xe4,
	0x26, 0xdc, 0x2f, 0xd7, 0x4e, 0xcf, 0x75, 0xf4, 0xac, 0xe9, 0xdd, 0x92, 0xae, 0x77, 0xb7, 0x98,
	0x49, 0xf5, 0x32, 0x33, 0x2b, 0xa4, 0x03, 0xf7, 0xf6, 0x1f, 0x2f, 0x40, 0x3b, 0xff, 0xdd, 0x45,
	0x79, 0x5d, 0xb8, 0xe8, 0x05, 0xfd, 0xb4, 0x7e, 0xec, 0xc8, 0x55, 0xa5, 0x12, 0x69, 0x9d, 0xf2,
	0xe7, 0x9c, 0x99, 0xd3, 0x66, 0x92, 0x46, 0xf2, 0xd2, 0x2d, 0x4a, 0xcd, 0x92, 0x84, 0xf4, 0x9d,
	0xde, 0x2f, 0x9b, 0xd0, 0xd8, 0x25, 0xb6, 0xa2, 0xa5, 0xc2, 0x93, 0xc4, 0x31, 0x1e, 0x12, 0x6c,
	0xf4, 0x3e, 0x6c, 0x8b, 0x7e, 0xf7, 0xc2, 0x95, 0x85, 0xea, 0x4e, 0xa4, 0x42, 0xef, 0x33, 0x56,
	0x96, 0x77, 0xea, 0xc1, 0xda, 0xc5, 0xfc, 0xaf, 0x6c, 0x6e, 0xcd, 0xb5, 0x7c, 0xf5, 0x17, 0xb4,
	0x6c, 0xe7, 0x18, 0x23, 0xae, 0x51, 0x0a, 0xd3, 0xa1, 0xeb, 0x32, 0x82, 0x98, 0x04, 0xa1, 0x1a,
	0xf8, 0x1a, 0x34, 0x48, 0x36, 0xa4, 0x88, 0xca, 0xd2, 0x62, 0x04, 0x49, 0xf9, 0x2c, 0x18, 0xb4,
	0xc6, 0x2b, 0x18, 0xb4, 0x66, 0xd1, 0xa0, 0xe5, 0x03, 0xa9, 0xad, 0x62, 0x20, 0x35, 0xb5, 0x77,
	0xcb, 0x85, 0x7f, 0xe8, 0xe6, 0x8a, 0xee, 0x3a, 0xb3, 0x45, 0x77, 0xe7, 0xd9, 0xb4, 0x95, 0x73,
	0x6d, 0xda, 0x25, 0xa8, 0x67, 0x81, 0xbf, 0x55, 0x55, 0xaa, 0x29, 0xc3, 0x7e, 0x5d, 0xa8, 0x8e,
	0x03, 0xdf, 0x4d, 0x82, 0x48, 0xfe, 0xb7, 0x45, 0x35, 0xd1, 0x83, 0x97, 0x6e, 0x94, 0x9c, 0x1c,
	0x97, 0x00, 0x34, 0x19, 0x98, 0xfd, 0x4d, 0xd5, 0x8d, 0xe5, 0xa4, 0xa4, 0x37, 0x5c, 0x73, 0x63,
	0x9e, 0xc1, 0x8c, 0xc2, 0xda, 0x9c, 0x51, 0x58, 0xea, 0x5f, 0x49, 0x6c, 0x32, 0xf8, 0x5f, 0x49,
	0x1b, 0x50, 0x91, 0xb7, 0x0e, 0xb7, 0xd2, 0x92, 0xf3, 0x20, 0x9a, 0x16, 0x65, 0x6a, 0xfb, 0x42,
	0x32, 0x45, 0xd7, 0x0c, 0x29, 0xed, 0x91, 0x32, 0xd0, 0x25, 0x99, 0x12, 0x63, 0xb0, 0xc6, 0x43,
	0xba, 0x35, 0xbc, 0x3c, 0x63, 0x0d, 0x33, 0x3b, 0x77, 0x25, 0x67, 0xe7, 0x76, 0xa0, 0x23, 0x1d,
	0xd8, 0x6c, 0xb1, 0x65, 0xbe, 0x9e, 0xe1, 0x69, 0xa4, 0x75, 0x07, 0x3a, 0x28, 0x70, 0xc2, 0x74,
	0xfd, 0x74, 0x32, 0x6c, 0x72, 0xda, 0x04, 0xef, 0xfb, 0xfa, 0x64, 0x32, 0x9f, 0x57, 0x66, 0xe9,
	0x21, 0x73, 0x77, 0xe7, 0x5b, 0xc1, 0x1b, 0xa7, 0x1f, 0x37, 0x72, 0x55, 0x7e, 0x37, 0x67, 0xab,
	0xfc, 0xf4, 0xdf, 0xca, 0xdc, 0xca, 0xff, 0x56, 0x26, 0x6f, 0x22, 0x6f, 0xcf, 0x98, 0xc8, 0x4d,
	0xa8, 0xaa, 0x7b, 0x39, 0x6f, 0xf2, 0xc2, 0xf8, 0x7c, 0x25, 0xe7, 0x4d, 0x58, 0xb6, 0x46, 0x74,
	0xd8, 0xf6, 0xe3, 0xc4, 0xf2, 0x3c, 0xe1, 0x50, 0xb2, 0x1d, 0xfd, 0x76, 0x04, 0xf7, 0x15, 0x94,
	0x8e, 0x8c, 0xb9, 0x1d, 0xfa, 0x96, 0x3c, 0x32, 0xea, 0xfb, 0x93, 0xff, 0x3f, 0xd8, 0x3b, 0x52,
	0xcb, 0xa5, 0xff, 0x07, 0x53, 0x8a, 0xf1, 0x5d, 0x4d, 0x31, 0xe6, 0x2f, 0x39, 0xdc, 0x99, 0xb9,
	0xe4, 0x40, 0x3f, 0x5e, 0x72, 0xb3, 0xd7, 0xbe, 0xc7, 0x42, 0x88, 0x30, 0x6d, 0x23, 0xf4, 0x7f,
	0xc9, 0xbd, 0x3f, 0xf3, 0x2f, 0xb9, 0xb7, 0x61, 0x85, 0xf7, 0x34, 0x98, 0x64, 0x03, 0xdd, 0x93,
	0x31, 0x3d, 0x44, 0x7c, 0x31, 0x49, 0x07, 0x43, 0xa6, 0x17, 0xa1, 0x27, 0x33, 0xd7, 0xf4, 0x8c,
	0x73, 0xd0, 0xcf, 0x2c, 0x32, 0x6f, 0xdd, 0xd0, 0x0e, 0x20, 0x99, 0x71, 0xff, 0x50, 0x37, 0xee,
	0xc8, 0x4c, 0xae, 0x3f, 0xf2, 0xe4, 0xad, 0x28, 0x1a, 0xf8, 0x23, 0xc9, 0x4c, 0x04, 0xa7, 0xcb,
	0xb6, 0xf8, 0x0a, 0x3d, 0x7e, 0xf7, 0x31, 0xfb, 0xad, 0x2a, 0x7e, 0xd7, 0x81, 0x45, 0x3b, 0x9c,
	0x74, 0xbf, 0xcb, 0x17, 0x2a, 0xec, 0x70, 0x32, 0xac, 0x90, 0x3c, 0x7d, 0xf0, 0x5f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x01, 0x62, 0x4a, 0x46, 0x77, 0x62, 0x00, 0x00,
}
