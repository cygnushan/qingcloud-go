// Code generated by protoc-gen-go. DO NOT EDIT.
// source: snapshot.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/chai2010/qingcloud-go/spec.pb/qingcloud_sdk_rule"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import "github.com/chai2010/qingcloud-go/request/data"

var _ = config.Config{}
var _ = request.Request{}
var _ = data.Operation{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SnapshotServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *SnapshotServiceProperties) Reset()                    { *m = SnapshotServiceProperties{} }
func (m *SnapshotServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*SnapshotServiceProperties) ProtoMessage()               {}
func (*SnapshotServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{0} }

func (m *SnapshotServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func init() {
	proto.RegisterType((*SnapshotServiceProperties)(nil), "service.SnapshotServiceProperties")
}

type SnapshotServiceInterface interface {
	DescribeSnapshots(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	CreateSnapshots(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	DeleteSnapshots(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	ApplySnapshots(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	ModifySnapshotAttributes(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	CaptureInstanceFromSnapshot(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
	CreateVolumeFromSnapshot(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error)
}

type SnapshotService struct {
	Config           *config.Config
	Properties       *SnapshotServiceProperties
	LastResponseBody string
}

func NewSnapshotService(conf *config.Config, zone string) (p *SnapshotService) {
	return &SnapshotService{
		Config:     conf,
		Properties: &SnapshotServiceProperties{Zone: zone},
	}
}

func (s *QingCloudService) Snapshot(zone string) (*SnapshotService, error) {
	properties := &SnapshotServiceProperties{
		Zone: zone,
	}

	return &SnapshotService{Config: s.Config, Properties: properties}, nil
}

func (p *SnapshotService) DescribeSnapshots(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeSnapshots",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SnapshotService) CreateSnapshots(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateSnapshots",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SnapshotService) DeleteSnapshots(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteSnapshots",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SnapshotService) ApplySnapshots(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ApplySnapshots",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SnapshotService) ModifySnapshotAttributes(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifySnapshotAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SnapshotService) CaptureInstanceFromSnapshot(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CaptureInstanceFromSnapshot",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SnapshotService) CreateVolumeFromSnapshot(in *google_protobuf1.Empty) (out *google_protobuf1.Empty, err error) {
	if in == nil {
		in = &google_protobuf1.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateVolumeFromSnapshot",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf1.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func init() { proto.RegisterFile("snapshot.proto", fileDescriptor22) }

var fileDescriptor22 = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0xd2, 0xdd, 0x4a, 0xc3, 0x30,
	0x14, 0x07, 0x70, 0x06, 0x45, 0x5d, 0x2e, 0x36, 0x0c, 0x28, 0x5b, 0x87, 0x20, 0x5e, 0x79, 0xd5,
	0x82, 0xbe, 0x80, 0xa5, 0x53, 0x50, 0x18, 0xa8, 0x03, 0x6f, 0x47, 0x3f, 0xce, 0x6a, 0x30, 0xcd,
	0x89, 0xc9, 0x89, 0x30, 0x1f, 0xc1, 0xa7, 0xf0, 0x15, 0x7d, 0x03, 0x69, 0x63, 0xbd, 0x10, 0xbc,
	0xd8, 0x7a, 0x13, 0x92, 0x9c, 0x93, 0xdf, 0x3f, 0x84, 0xb0, 0x91, 0x55, 0x99, 0xb6, 0xcf, 0x48,
	0x91, 0x36, 0x48, 0xc8, 0xf7, 0x2d, 0x98, 0x37, 0x51, 0x40, 0x78, 0xf2, 0x2a, 0x54, 0x55, 0x48,
	0x74, 0xe5, 0xca, 0x96, 0x2f, 0x2b, 0xe3, 0x24, 0xc4, 0xcd, 0xe0, 0xfb, 0xc2, 0x59, 0x85, 0x58,
	0x49, 0x88, 0xdb, 0x55, 0xee, 0xd6, 0x31, 0xd4, 0x9a, 0x36, 0xbe, 0x78, 0x16, 0xb3, 0xe9, 0xf2,
	0x87, 0x5d, 0x7a, 0xee, 0xde, 0xa0, 0x06, 0x43, 0x02, 0x2c, 0xe7, 0x2c, 0x78, 0x47, 0x05, 0x93,
	0xc1, 0xe9, 0xe0, 0x7c, 0xf8, 0xd8, 0xce, 0x2f, 0x3e, 0x03, 0x36, 0xfe, 0x73, 0x82, 0xa7, 0xec,
	0x70, 0x0e, 0xb6, 0x30, 0x22, 0x87, 0xae, 0x64, 0xf9, 0x71, 0xe4, 0x73, 0xa3, 0x2e, 0x37, 0xba,
	0x6e, 0x72, 0xc3, 0x7f, 0xf6, 0x79, 0xc2, 0xc6, 0xa9, 0x81, 0x8c, 0xfa, 0x11, 0x73, 0x90, 0xd0,
	0x87, 0xb8, 0x62, 0xa3, 0x44, 0x6b, 0xb9, 0xd9, 0x5d, 0xb8, 0x63, 0x93, 0x05, 0x96, 0x62, 0xfd,
	0x4b, 0x24, 0x44, 0x46, 0xe4, 0x8e, 0x60, 0x7b, 0x6b, 0xc1, 0x66, 0x69, 0xa6, 0xc9, 0x19, 0xb8,
	0x55, 0x96, 0x32, 0x55, 0xc0, 0x8d, 0xc1, 0xba, 0x83, 0x77, 0xb9, 0x9a, 0x7f, 0xe2, 0x27, 0x94,
	0xae, 0xee, 0x65, 0x85, 0xd3, 0x8f, 0xaf, 0xe0, 0x88, 0x0d, 0x1f, 0x84, 0xaa, 0xd2, 0xe6, 0xeb,
	0xf1, 0x83, 0x8e, 0xca, 0xf7, 0xda, 0xd6, 0xcb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x34,
	0xfc, 0xd7, 0xb1, 0x02, 0x00, 0x00,
}
