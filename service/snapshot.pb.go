// Code generated by protoc-gen-go. DO NOT EDIT.
// source: snapshot.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import "github.com/chai2010/qingcloud-go/request/data"

var _ = config.Config{}
var _ = request.Request{}
var _ = data.Operation{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SnapshotServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *SnapshotServiceProperties) Reset()                    { *m = SnapshotServiceProperties{} }
func (m *SnapshotServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*SnapshotServiceProperties) ProtoMessage()               {}
func (*SnapshotServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor21, []int{0} }

func (m *SnapshotServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func init() {
	proto.RegisterType((*SnapshotServiceProperties)(nil), "service.SnapshotServiceProperties")
}

type SnapshotServiceInterface interface {
	DescribeSnapshots(in *google_protobuf.Empty) (out *google_protobuf.Empty, err error)
	CreateSnapshots(in *google_protobuf.Empty) (out *google_protobuf.Empty, err error)
	DeleteSnapshots(in *google_protobuf.Empty) (out *google_protobuf.Empty, err error)
	ApplySnapshots(in *google_protobuf.Empty) (out *google_protobuf.Empty, err error)
	ModifySnapshotAttributes(in *google_protobuf.Empty) (out *google_protobuf.Empty, err error)
	CaptureInstanceFromSnapshot(in *google_protobuf.Empty) (out *google_protobuf.Empty, err error)
	CreateVolumeFromSnapshot(in *google_protobuf.Empty) (out *google_protobuf.Empty, err error)
}

type SnapshotService struct {
	Config     *config.Config
	Properties *SnapshotServiceProperties
}

func NewSnapshotService(conf *config.Config, zone string) (p *SnapshotService, err error) {
	return &SnapshotService{
		Config:     conf,
		Properties: &SnapshotServiceProperties{Zone: zone},
	}, nil
}

func (p *SnapshotService) DescribeSnapshots(in *google_protobuf.Empty) (out *google_protobuf.Empty, err error) {
	if in == nil {
		in = &google_protobuf.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeSnapshots",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SnapshotService) CreateSnapshots(in *google_protobuf.Empty) (out *google_protobuf.Empty, err error) {
	if in == nil {
		in = &google_protobuf.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateSnapshots",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SnapshotService) DeleteSnapshots(in *google_protobuf.Empty) (out *google_protobuf.Empty, err error) {
	if in == nil {
		in = &google_protobuf.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteSnapshots",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SnapshotService) ApplySnapshots(in *google_protobuf.Empty) (out *google_protobuf.Empty, err error) {
	if in == nil {
		in = &google_protobuf.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ApplySnapshots",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SnapshotService) ModifySnapshotAttributes(in *google_protobuf.Empty) (out *google_protobuf.Empty, err error) {
	if in == nil {
		in = &google_protobuf.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifySnapshotAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SnapshotService) CaptureInstanceFromSnapshot(in *google_protobuf.Empty) (out *google_protobuf.Empty, err error) {
	if in == nil {
		in = &google_protobuf.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CaptureInstanceFromSnapshot",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *SnapshotService) CreateVolumeFromSnapshot(in *google_protobuf.Empty) (out *google_protobuf.Empty, err error) {
	if in == nil {
		in = &google_protobuf.Empty{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateVolumeFromSnapshot",
		RequestMethod: "GET", // GET or POST
	}

	x := &google_protobuf.Empty{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	if err != nil {
		return nil, err
	}

	return x, err
}

func init() { proto.RegisterFile("snapshot.proto", fileDescriptor21) }

var fileDescriptor21 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x90, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0x29, 0x14, 0xc5, 0x39, 0xb4, 0x98, 0x83, 0xd4, 0xf6, 0x22, 0x9e, 0x3c, 0xed, 0x82,
	0xfe, 0x01, 0x97, 0xad, 0x82, 0x42, 0x41, 0x2c, 0x78, 0x4f, 0xd6, 0x69, 0x0d, 0x64, 0x33, 0x61,
	0x32, 0x11, 0xea, 0xdd, 0xff, 0x2d, 0x6e, 0x5c, 0x0f, 0x82, 0x87, 0x76, 0x6f, 0xc9, 0x9b, 0xf7,
	0xbe, 0x37, 0x0c, 0x4c, 0xa2, 0xd7, 0x21, 0xbe, 0x91, 0x14, 0x81, 0x49, 0x48, 0x1d, 0x47, 0xe4,
	0x77, 0xdb, 0xe0, 0x7c, 0xb1, 0x25, 0xda, 0x3a, 0x2c, 0x3b, 0xd9, 0xa4, 0x4d, 0x89, 0x6d, 0x90,
	0x5d, 0x76, 0x5d, 0x96, 0x70, 0xbe, 0xfe, 0xc9, 0xad, 0xb3, 0xff, 0x89, 0x29, 0x20, 0x8b, 0xc5,
	0xa8, 0x14, 0x8c, 0x3f, 0xc8, 0xe3, 0x6c, 0x74, 0x31, 0xba, 0x3a, 0x79, 0xee, 0xde, 0xd7, 0x9f,
	0x63, 0x98, 0xfe, 0x49, 0xa8, 0x1a, 0x4e, 0x97, 0x18, 0x1b, 0xb6, 0x06, 0xfb, 0x51, 0x54, 0x67,
	0x45, 0xee, 0x2d, 0xfa, 0xde, 0xe2, 0xee, 0xbb, 0x77, 0xfe, 0x8f, 0xae, 0x2a, 0x98, 0xd6, 0x8c,
	0x5a, 0x86, 0x21, 0x96, 0xe8, 0x70, 0x08, 0xe2, 0x16, 0x26, 0x55, 0x08, 0x6e, 0x77, 0x38, 0xe1,
	0x11, 0x66, 0x2b, 0x7a, 0xb5, 0x9b, 0x5f, 0x44, 0x25, 0xc2, 0xd6, 0x24, 0xc1, 0xfd, 0x59, 0x2b,
	0x58, 0xd4, 0x3a, 0x48, 0x62, 0x7c, 0xf0, 0x51, 0xb4, 0x6f, 0xf0, 0x9e, 0xa9, 0xed, 0xc1, 0x87,
	0xac, 0x96, 0x4f, 0xfc, 0x42, 0x2e, 0xb5, 0x83, 0x58, 0xe6, 0xa8, 0xfb, 0xdf, 0x7c, 0x05, 0x00,
	0x00, 0xff, 0xff, 0x11, 0xf6, 0x2f, 0x7d, 0x77, 0x02, 0x00, 0x00,
}
