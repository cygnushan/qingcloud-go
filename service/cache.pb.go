// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cache.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/chai2010/qingcloud-go/spec.pb/qingcloud_sdk_rule"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import "github.com/chai2010/qingcloud-go/config"
import "github.com/chai2010/qingcloud-go/request"
import "github.com/chai2010/qingcloud-go/request/data"

var _ = config.Config{}
var _ = request.Request{}
var _ = data.Operation{}

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CacheServiceProperties struct {
	Zone string `protobuf:"bytes,1,opt,name=zone" json:"zone,omitempty"`
}

func (m *CacheServiceProperties) Reset()                    { *m = CacheServiceProperties{} }
func (m *CacheServiceProperties) String() string            { return proto.CompactTextString(m) }
func (*CacheServiceProperties) ProtoMessage()               {}
func (*CacheServiceProperties) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *CacheServiceProperties) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

type DescribeCachesInput struct {
	Caches     []string `protobuf:"bytes,1,rep,name=caches" json:"caches,omitempty"`
	Status     []string `protobuf:"bytes,2,rep,name=status" json:"status,omitempty"`
	CacheType  []string `protobuf:"bytes,3,rep,name=cache_type,json=cacheType" json:"cache_type,omitempty"`
	SearchWord string   `protobuf:"bytes,4,opt,name=search_word,json=searchWord" json:"search_word,omitempty"`
	Tags       []string `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	Verbose    int32    `protobuf:"varint,6,opt,name=verbose" json:"verbose,omitempty"`
	Offset     int32    `protobuf:"varint,7,opt,name=offset" json:"offset,omitempty"`
	Limit      int32    `protobuf:"varint,8,opt,name=limit" json:"limit,omitempty"`
}

func (m *DescribeCachesInput) Reset()                    { *m = DescribeCachesInput{} }
func (m *DescribeCachesInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeCachesInput) ProtoMessage()               {}
func (*DescribeCachesInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *DescribeCachesInput) GetCaches() []string {
	if m != nil {
		return m.Caches
	}
	return nil
}

func (m *DescribeCachesInput) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeCachesInput) GetCacheType() []string {
	if m != nil {
		return m.CacheType
	}
	return nil
}

func (m *DescribeCachesInput) GetSearchWord() string {
	if m != nil {
		return m.SearchWord
	}
	return ""
}

func (m *DescribeCachesInput) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *DescribeCachesInput) GetVerbose() int32 {
	if m != nil {
		return m.Verbose
	}
	return 0
}

func (m *DescribeCachesInput) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeCachesInput) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type DescribeCachesOutput struct {
	Action     string                               `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode    int32                                `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message    string                               `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	CacheSet   []*DescribeCachesOutput_ResponseItem `protobuf:"bytes,4,rep,name=cache_set,json=cacheSet" json:"cache_set,omitempty"`
	TotalCount int32                                `protobuf:"varint,5,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *DescribeCachesOutput) Reset()                    { *m = DescribeCachesOutput{} }
func (m *DescribeCachesOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeCachesOutput) ProtoMessage()               {}
func (*DescribeCachesOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *DescribeCachesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeCachesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeCachesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeCachesOutput) GetCacheSet() []*DescribeCachesOutput_ResponseItem {
	if m != nil {
		return m.CacheSet
	}
	return nil
}

func (m *DescribeCachesOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type DescribeCachesOutput_ResponseItem struct {
	CacheId               string                      `protobuf:"bytes,1,opt,name=cache_id,json=cacheId" json:"cache_id,omitempty"`
	CacheName             string                      `protobuf:"bytes,2,opt,name=cache_name,json=cacheName" json:"cache_name,omitempty"`
	CacheType             string                      `protobuf:"bytes,3,opt,name=cache_type,json=cacheType" json:"cache_type,omitempty"`
	CachePort             int32                       `protobuf:"varint,4,opt,name=cache_port,json=cachePort" json:"cache_port,omitempty"`
	CacheSize             int32                       `protobuf:"varint,5,opt,name=cache_size,json=cacheSize" json:"cache_size,omitempty"`
	NodeCount             int32                       `protobuf:"varint,6,opt,name=node_count,json=nodeCount" json:"node_count,omitempty"`
	Description           int32                       `protobuf:"varint,7,opt,name=description" json:"description,omitempty"`
	Nodes                 []*CacheNode                `protobuf:"bytes,8,rep,name=nodes" json:"nodes,omitempty"`
	AutoBackupTime        int32                       `protobuf:"varint,9,opt,name=auto_backup_time,json=autoBackupTime" json:"auto_backup_time,omitempty"`
	IsApplied             int32                       `protobuf:"varint,10,opt,name=is_applied,json=isApplied" json:"is_applied,omitempty"`
	Status                string                      `protobuf:"bytes,11,opt,name=status" json:"status,omitempty"`
	TransitionStatus      string                      `protobuf:"bytes,12,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	Vxnet                 map[string]string           `protobuf:"bytes,13,rep,name=vxnet" json:"vxnet,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreateTime            *google_protobuf1.Timestamp `protobuf:"bytes,14,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime            *google_protobuf1.Timestamp `protobuf:"bytes,15,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
	SecurityGroupId       string                      `protobuf:"bytes,16,opt,name=security_group_id,json=securityGroupId" json:"security_group_id,omitempty"`
	CacheParameterGroupId string                      `protobuf:"bytes,17,opt,name=cache_parameter_group_id,json=cacheParameterGroupId" json:"cache_parameter_group_id,omitempty"`
	MaxMemory             float64                     `protobuf:"fixed64,18,opt,name=max_memory,json=maxMemory" json:"max_memory,omitempty"`
}

func (m *DescribeCachesOutput_ResponseItem) Reset()         { *m = DescribeCachesOutput_ResponseItem{} }
func (m *DescribeCachesOutput_ResponseItem) String() string { return proto.CompactTextString(m) }
func (*DescribeCachesOutput_ResponseItem) ProtoMessage()    {}
func (*DescribeCachesOutput_ResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{2, 0}
}

func (m *DescribeCachesOutput_ResponseItem) GetCacheId() string {
	if m != nil {
		return m.CacheId
	}
	return ""
}

func (m *DescribeCachesOutput_ResponseItem) GetCacheName() string {
	if m != nil {
		return m.CacheName
	}
	return ""
}

func (m *DescribeCachesOutput_ResponseItem) GetCacheType() string {
	if m != nil {
		return m.CacheType
	}
	return ""
}

func (m *DescribeCachesOutput_ResponseItem) GetCachePort() int32 {
	if m != nil {
		return m.CachePort
	}
	return 0
}

func (m *DescribeCachesOutput_ResponseItem) GetCacheSize() int32 {
	if m != nil {
		return m.CacheSize
	}
	return 0
}

func (m *DescribeCachesOutput_ResponseItem) GetNodeCount() int32 {
	if m != nil {
		return m.NodeCount
	}
	return 0
}

func (m *DescribeCachesOutput_ResponseItem) GetDescription() int32 {
	if m != nil {
		return m.Description
	}
	return 0
}

func (m *DescribeCachesOutput_ResponseItem) GetNodes() []*CacheNode {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *DescribeCachesOutput_ResponseItem) GetAutoBackupTime() int32 {
	if m != nil {
		return m.AutoBackupTime
	}
	return 0
}

func (m *DescribeCachesOutput_ResponseItem) GetIsApplied() int32 {
	if m != nil {
		return m.IsApplied
	}
	return 0
}

func (m *DescribeCachesOutput_ResponseItem) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DescribeCachesOutput_ResponseItem) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *DescribeCachesOutput_ResponseItem) GetVxnet() map[string]string {
	if m != nil {
		return m.Vxnet
	}
	return nil
}

func (m *DescribeCachesOutput_ResponseItem) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *DescribeCachesOutput_ResponseItem) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *DescribeCachesOutput_ResponseItem) GetSecurityGroupId() string {
	if m != nil {
		return m.SecurityGroupId
	}
	return ""
}

func (m *DescribeCachesOutput_ResponseItem) GetCacheParameterGroupId() string {
	if m != nil {
		return m.CacheParameterGroupId
	}
	return ""
}

func (m *DescribeCachesOutput_ResponseItem) GetMaxMemory() float64 {
	if m != nil {
		return m.MaxMemory
	}
	return 0
}

type CreateCacheInput struct {
	Vxnet               string            `protobuf:"bytes,1,opt,name=vxnet" json:"vxnet,omitempty"`
	CacheSize           int32             `protobuf:"varint,2,opt,name=cache_size,json=cacheSize" json:"cache_size,omitempty"`
	CacheType           string            `protobuf:"bytes,3,opt,name=cache_type,json=cacheType" json:"cache_type,omitempty"`
	NodeCount           int32             `protobuf:"varint,4,opt,name=node_count,json=nodeCount" json:"node_count,omitempty"`
	CacheName           string            `protobuf:"bytes,5,opt,name=cache_name,json=cacheName" json:"cache_name,omitempty"`
	CacheParameterGroup string            `protobuf:"bytes,6,opt,name=cache_parameter_group,json=cacheParameterGroup" json:"cache_parameter_group,omitempty"`
	PrivateIps          []*CachePrivateIP `protobuf:"bytes,7,rep,name=private_ips,json=privateIps" json:"private_ips,omitempty"`
	AutoBackupTime      int32             `protobuf:"varint,8,opt,name=auto_backup_time,json=autoBackupTime" json:"auto_backup_time,omitempty"`
	CacheClass          int32             `protobuf:"varint,9,opt,name=cache_class,json=cacheClass" json:"cache_class,omitempty"`
}

func (m *CreateCacheInput) Reset()                    { *m = CreateCacheInput{} }
func (m *CreateCacheInput) String() string            { return proto.CompactTextString(m) }
func (*CreateCacheInput) ProtoMessage()               {}
func (*CreateCacheInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *CreateCacheInput) GetVxnet() string {
	if m != nil {
		return m.Vxnet
	}
	return ""
}

func (m *CreateCacheInput) GetCacheSize() int32 {
	if m != nil {
		return m.CacheSize
	}
	return 0
}

func (m *CreateCacheInput) GetCacheType() string {
	if m != nil {
		return m.CacheType
	}
	return ""
}

func (m *CreateCacheInput) GetNodeCount() int32 {
	if m != nil {
		return m.NodeCount
	}
	return 0
}

func (m *CreateCacheInput) GetCacheName() string {
	if m != nil {
		return m.CacheName
	}
	return ""
}

func (m *CreateCacheInput) GetCacheParameterGroup() string {
	if m != nil {
		return m.CacheParameterGroup
	}
	return ""
}

func (m *CreateCacheInput) GetPrivateIps() []*CachePrivateIP {
	if m != nil {
		return m.PrivateIps
	}
	return nil
}

func (m *CreateCacheInput) GetAutoBackupTime() int32 {
	if m != nil {
		return m.AutoBackupTime
	}
	return 0
}

func (m *CreateCacheInput) GetCacheClass() int32 {
	if m != nil {
		return m.CacheClass
	}
	return 0
}

type CreateCacheOutput struct {
	Action     string   `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode    int32    `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message    string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	CacheId    string   `protobuf:"bytes,4,opt,name=cache_id,json=cacheId" json:"cache_id,omitempty"`
	CacheNodes []string `protobuf:"bytes,5,rep,name=cache_nodes,json=cacheNodes" json:"cache_nodes,omitempty"`
}

func (m *CreateCacheOutput) Reset()                    { *m = CreateCacheOutput{} }
func (m *CreateCacheOutput) String() string            { return proto.CompactTextString(m) }
func (*CreateCacheOutput) ProtoMessage()               {}
func (*CreateCacheOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *CreateCacheOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CreateCacheOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CreateCacheOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateCacheOutput) GetCacheId() string {
	if m != nil {
		return m.CacheId
	}
	return ""
}

func (m *CreateCacheOutput) GetCacheNodes() []string {
	if m != nil {
		return m.CacheNodes
	}
	return nil
}

type StopCachesInput struct {
	Caches []string `protobuf:"bytes,1,rep,name=caches" json:"caches,omitempty"`
}

func (m *StopCachesInput) Reset()                    { *m = StopCachesInput{} }
func (m *StopCachesInput) String() string            { return proto.CompactTextString(m) }
func (*StopCachesInput) ProtoMessage()               {}
func (*StopCachesInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *StopCachesInput) GetCaches() []string {
	if m != nil {
		return m.Caches
	}
	return nil
}

type StopCachesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *StopCachesOutput) Reset()                    { *m = StopCachesOutput{} }
func (m *StopCachesOutput) String() string            { return proto.CompactTextString(m) }
func (*StopCachesOutput) ProtoMessage()               {}
func (*StopCachesOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *StopCachesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *StopCachesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *StopCachesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *StopCachesOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type StartCachesInput struct {
	Caches []string `protobuf:"bytes,1,rep,name=caches" json:"caches,omitempty"`
}

func (m *StartCachesInput) Reset()                    { *m = StartCachesInput{} }
func (m *StartCachesInput) String() string            { return proto.CompactTextString(m) }
func (*StartCachesInput) ProtoMessage()               {}
func (*StartCachesInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *StartCachesInput) GetCaches() []string {
	if m != nil {
		return m.Caches
	}
	return nil
}

type StartCachesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *StartCachesOutput) Reset()                    { *m = StartCachesOutput{} }
func (m *StartCachesOutput) String() string            { return proto.CompactTextString(m) }
func (*StartCachesOutput) ProtoMessage()               {}
func (*StartCachesOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *StartCachesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *StartCachesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *StartCachesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *StartCachesOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type RestartCachesInput struct {
	Caches []string `protobuf:"bytes,1,rep,name=caches" json:"caches,omitempty"`
}

func (m *RestartCachesInput) Reset()                    { *m = RestartCachesInput{} }
func (m *RestartCachesInput) String() string            { return proto.CompactTextString(m) }
func (*RestartCachesInput) ProtoMessage()               {}
func (*RestartCachesInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *RestartCachesInput) GetCaches() []string {
	if m != nil {
		return m.Caches
	}
	return nil
}

type RestartCachesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *RestartCachesOutput) Reset()                    { *m = RestartCachesOutput{} }
func (m *RestartCachesOutput) String() string            { return proto.CompactTextString(m) }
func (*RestartCachesOutput) ProtoMessage()               {}
func (*RestartCachesOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *RestartCachesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *RestartCachesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *RestartCachesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RestartCachesOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type DeleteCachesInput struct {
	Caches []string `protobuf:"bytes,1,rep,name=caches" json:"caches,omitempty"`
}

func (m *DeleteCachesInput) Reset()                    { *m = DeleteCachesInput{} }
func (m *DeleteCachesInput) String() string            { return proto.CompactTextString(m) }
func (*DeleteCachesInput) ProtoMessage()               {}
func (*DeleteCachesInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *DeleteCachesInput) GetCaches() []string {
	if m != nil {
		return m.Caches
	}
	return nil
}

type DeleteCachesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *DeleteCachesOutput) Reset()                    { *m = DeleteCachesOutput{} }
func (m *DeleteCachesOutput) String() string            { return proto.CompactTextString(m) }
func (*DeleteCachesOutput) ProtoMessage()               {}
func (*DeleteCachesOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *DeleteCachesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DeleteCachesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DeleteCachesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeleteCachesOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type ResizeCachesInput struct {
	Caches    []string `protobuf:"bytes,1,rep,name=caches" json:"caches,omitempty"`
	CacheSize int32    `protobuf:"varint,2,opt,name=cache_size,json=cacheSize" json:"cache_size,omitempty"`
}

func (m *ResizeCachesInput) Reset()                    { *m = ResizeCachesInput{} }
func (m *ResizeCachesInput) String() string            { return proto.CompactTextString(m) }
func (*ResizeCachesInput) ProtoMessage()               {}
func (*ResizeCachesInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *ResizeCachesInput) GetCaches() []string {
	if m != nil {
		return m.Caches
	}
	return nil
}

func (m *ResizeCachesInput) GetCacheSize() int32 {
	if m != nil {
		return m.CacheSize
	}
	return 0
}

type ResizeCachesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *ResizeCachesOutput) Reset()                    { *m = ResizeCachesOutput{} }
func (m *ResizeCachesOutput) String() string            { return proto.CompactTextString(m) }
func (*ResizeCachesOutput) ProtoMessage()               {}
func (*ResizeCachesOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *ResizeCachesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ResizeCachesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ResizeCachesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ResizeCachesOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type UpdateCacheInput struct {
	Cache      string            `protobuf:"bytes,1,opt,name=cache" json:"cache,omitempty"`
	PrivateIps []*CachePrivateIP `protobuf:"bytes,2,rep,name=private_ips,json=privateIps" json:"private_ips,omitempty"`
}

func (m *UpdateCacheInput) Reset()                    { *m = UpdateCacheInput{} }
func (m *UpdateCacheInput) String() string            { return proto.CompactTextString(m) }
func (*UpdateCacheInput) ProtoMessage()               {}
func (*UpdateCacheInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *UpdateCacheInput) GetCache() string {
	if m != nil {
		return m.Cache
	}
	return ""
}

func (m *UpdateCacheInput) GetPrivateIps() []*CachePrivateIP {
	if m != nil {
		return m.PrivateIps
	}
	return nil
}

type UpdateCacheOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *UpdateCacheOutput) Reset()                    { *m = UpdateCacheOutput{} }
func (m *UpdateCacheOutput) String() string            { return proto.CompactTextString(m) }
func (*UpdateCacheOutput) ProtoMessage()               {}
func (*UpdateCacheOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *UpdateCacheOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *UpdateCacheOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *UpdateCacheOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateCacheOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type ChangeCacheVxnetInput struct {
	Cache      string            `protobuf:"bytes,1,opt,name=cache" json:"cache,omitempty"`
	Vxnet      string            `protobuf:"bytes,2,opt,name=vxnet" json:"vxnet,omitempty"`
	PrivateIps []*CachePrivateIP `protobuf:"bytes,3,rep,name=private_ips,json=privateIps" json:"private_ips,omitempty"`
}

func (m *ChangeCacheVxnetInput) Reset()                    { *m = ChangeCacheVxnetInput{} }
func (m *ChangeCacheVxnetInput) String() string            { return proto.CompactTextString(m) }
func (*ChangeCacheVxnetInput) ProtoMessage()               {}
func (*ChangeCacheVxnetInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *ChangeCacheVxnetInput) GetCache() string {
	if m != nil {
		return m.Cache
	}
	return ""
}

func (m *ChangeCacheVxnetInput) GetVxnet() string {
	if m != nil {
		return m.Vxnet
	}
	return ""
}

func (m *ChangeCacheVxnetInput) GetPrivateIps() []*CachePrivateIP {
	if m != nil {
		return m.PrivateIps
	}
	return nil
}

type ChangeCacheVxnetOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *ChangeCacheVxnetOutput) Reset()                    { *m = ChangeCacheVxnetOutput{} }
func (m *ChangeCacheVxnetOutput) String() string            { return proto.CompactTextString(m) }
func (*ChangeCacheVxnetOutput) ProtoMessage()               {}
func (*ChangeCacheVxnetOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *ChangeCacheVxnetOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ChangeCacheVxnetOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ChangeCacheVxnetOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ChangeCacheVxnetOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type ModifyCacheAttributesInput struct {
	Cache          string `protobuf:"bytes,1,opt,name=cache" json:"cache,omitempty"`
	CacheName      string `protobuf:"bytes,2,opt,name=cache_name,json=cacheName" json:"cache_name,omitempty"`
	Description    string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	AutoBackupTime int32  `protobuf:"varint,4,opt,name=auto_backup_time,json=autoBackupTime" json:"auto_backup_time,omitempty"`
}

func (m *ModifyCacheAttributesInput) Reset()                    { *m = ModifyCacheAttributesInput{} }
func (m *ModifyCacheAttributesInput) String() string            { return proto.CompactTextString(m) }
func (*ModifyCacheAttributesInput) ProtoMessage()               {}
func (*ModifyCacheAttributesInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *ModifyCacheAttributesInput) GetCache() string {
	if m != nil {
		return m.Cache
	}
	return ""
}

func (m *ModifyCacheAttributesInput) GetCacheName() string {
	if m != nil {
		return m.CacheName
	}
	return ""
}

func (m *ModifyCacheAttributesInput) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ModifyCacheAttributesInput) GetAutoBackupTime() int32 {
	if m != nil {
		return m.AutoBackupTime
	}
	return 0
}

type ModifyCacheAttributesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ModifyCacheAttributesOutput) Reset()                    { *m = ModifyCacheAttributesOutput{} }
func (m *ModifyCacheAttributesOutput) String() string            { return proto.CompactTextString(m) }
func (*ModifyCacheAttributesOutput) ProtoMessage()               {}
func (*ModifyCacheAttributesOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *ModifyCacheAttributesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ModifyCacheAttributesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ModifyCacheAttributesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DescribeCacheNodesInput struct {
	Cache      string   `protobuf:"bytes,1,opt,name=cache" json:"cache,omitempty"`
	CacheNodes []string `protobuf:"bytes,2,rep,name=cache_nodes,json=cacheNodes" json:"cache_nodes,omitempty"`
	Status     []string `protobuf:"bytes,3,rep,name=status" json:"status,omitempty"`
	SearchWord string   `protobuf:"bytes,4,opt,name=search_word,json=searchWord" json:"search_word,omitempty"`
	Verbose    int32    `protobuf:"varint,5,opt,name=verbose" json:"verbose,omitempty"`
	Offset     int32    `protobuf:"varint,6,opt,name=offset" json:"offset,omitempty"`
	Limit      int32    `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
}

func (m *DescribeCacheNodesInput) Reset()                    { *m = DescribeCacheNodesInput{} }
func (m *DescribeCacheNodesInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeCacheNodesInput) ProtoMessage()               {}
func (*DescribeCacheNodesInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

func (m *DescribeCacheNodesInput) GetCache() string {
	if m != nil {
		return m.Cache
	}
	return ""
}

func (m *DescribeCacheNodesInput) GetCacheNodes() []string {
	if m != nil {
		return m.CacheNodes
	}
	return nil
}

func (m *DescribeCacheNodesInput) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeCacheNodesInput) GetSearchWord() string {
	if m != nil {
		return m.SearchWord
	}
	return ""
}

func (m *DescribeCacheNodesInput) GetVerbose() int32 {
	if m != nil {
		return m.Verbose
	}
	return 0
}

func (m *DescribeCacheNodesInput) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeCacheNodesInput) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type DescribeCacheNodesOutput struct {
	Action       string                                   `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode      int32                                    `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message      string                                   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	CacheNodeSet []*DescribeCacheNodesOutput_ResponseItem `protobuf:"bytes,4,rep,name=cache_node_set,json=cacheNodeSet" json:"cache_node_set,omitempty"`
	TotalCount   int32                                    `protobuf:"varint,5,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *DescribeCacheNodesOutput) Reset()                    { *m = DescribeCacheNodesOutput{} }
func (m *DescribeCacheNodesOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeCacheNodesOutput) ProtoMessage()               {}
func (*DescribeCacheNodesOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{22} }

func (m *DescribeCacheNodesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeCacheNodesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeCacheNodesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeCacheNodesOutput) GetCacheNodeSet() []*DescribeCacheNodesOutput_ResponseItem {
	if m != nil {
		return m.CacheNodeSet
	}
	return nil
}

func (m *DescribeCacheNodesOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type DescribeCacheNodesOutput_ResponseItem struct {
	CacheNodeId      string                      `protobuf:"bytes,1,opt,name=cache_node_id,json=cacheNodeId" json:"cache_node_id,omitempty"`
	CacheId          string                      `protobuf:"bytes,2,opt,name=cache_id,json=cacheId" json:"cache_id,omitempty"`
	CacheNodeName    string                      `protobuf:"bytes,3,opt,name=cache_node_name,json=cacheNodeName" json:"cache_node_name,omitempty"`
	CacheRole        string                      `protobuf:"bytes,4,opt,name=cache_role,json=cacheRole" json:"cache_role,omitempty"`
	CacheType        string                      `protobuf:"bytes,5,opt,name=cache_type,json=cacheType" json:"cache_type,omitempty"`
	PrivateIp        string                      `protobuf:"bytes,6,opt,name=private_ip,json=privateIp" json:"private_ip,omitempty"`
	Status           string                      `protobuf:"bytes,7,opt,name=status" json:"status,omitempty"`
	TransitionStatus string                      `protobuf:"bytes,8,opt,name=transition_status,json=transitionStatus" json:"transition_status,omitempty"`
	CreateTime       *google_protobuf1.Timestamp `protobuf:"bytes,9,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime       *google_protobuf1.Timestamp `protobuf:"bytes,10,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
}

func (m *DescribeCacheNodesOutput_ResponseItem) Reset()         { *m = DescribeCacheNodesOutput_ResponseItem{} }
func (m *DescribeCacheNodesOutput_ResponseItem) String() string { return proto.CompactTextString(m) }
func (*DescribeCacheNodesOutput_ResponseItem) ProtoMessage()    {}
func (*DescribeCacheNodesOutput_ResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{22, 0}
}

func (m *DescribeCacheNodesOutput_ResponseItem) GetCacheNodeId() string {
	if m != nil {
		return m.CacheNodeId
	}
	return ""
}

func (m *DescribeCacheNodesOutput_ResponseItem) GetCacheId() string {
	if m != nil {
		return m.CacheId
	}
	return ""
}

func (m *DescribeCacheNodesOutput_ResponseItem) GetCacheNodeName() string {
	if m != nil {
		return m.CacheNodeName
	}
	return ""
}

func (m *DescribeCacheNodesOutput_ResponseItem) GetCacheRole() string {
	if m != nil {
		return m.CacheRole
	}
	return ""
}

func (m *DescribeCacheNodesOutput_ResponseItem) GetCacheType() string {
	if m != nil {
		return m.CacheType
	}
	return ""
}

func (m *DescribeCacheNodesOutput_ResponseItem) GetPrivateIp() string {
	if m != nil {
		return m.PrivateIp
	}
	return ""
}

func (m *DescribeCacheNodesOutput_ResponseItem) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DescribeCacheNodesOutput_ResponseItem) GetTransitionStatus() string {
	if m != nil {
		return m.TransitionStatus
	}
	return ""
}

func (m *DescribeCacheNodesOutput_ResponseItem) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *DescribeCacheNodesOutput_ResponseItem) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type AddCacheNodesInput struct {
	Cache      string            `protobuf:"bytes,1,opt,name=cache" json:"cache,omitempty"`
	NodeCount  int32             `protobuf:"varint,2,opt,name=node_count,json=nodeCount" json:"node_count,omitempty"`
	PrivateIps []*CachePrivateIP `protobuf:"bytes,3,rep,name=private_ips,json=privateIps" json:"private_ips,omitempty"`
}

func (m *AddCacheNodesInput) Reset()                    { *m = AddCacheNodesInput{} }
func (m *AddCacheNodesInput) String() string            { return proto.CompactTextString(m) }
func (*AddCacheNodesInput) ProtoMessage()               {}
func (*AddCacheNodesInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

func (m *AddCacheNodesInput) GetCache() string {
	if m != nil {
		return m.Cache
	}
	return ""
}

func (m *AddCacheNodesInput) GetNodeCount() int32 {
	if m != nil {
		return m.NodeCount
	}
	return 0
}

func (m *AddCacheNodesInput) GetPrivateIps() []*CachePrivateIP {
	if m != nil {
		return m.PrivateIps
	}
	return nil
}

type AddCacheNodesOutput struct {
	Action     string   `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode    int32    `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message    string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	CacheNodes []string `protobuf:"bytes,4,rep,name=cache_nodes,json=cacheNodes" json:"cache_nodes,omitempty"`
}

func (m *AddCacheNodesOutput) Reset()                    { *m = AddCacheNodesOutput{} }
func (m *AddCacheNodesOutput) String() string            { return proto.CompactTextString(m) }
func (*AddCacheNodesOutput) ProtoMessage()               {}
func (*AddCacheNodesOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{24} }

func (m *AddCacheNodesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *AddCacheNodesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *AddCacheNodesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AddCacheNodesOutput) GetCacheNodes() []string {
	if m != nil {
		return m.CacheNodes
	}
	return nil
}

type DeleteCacheNodesInput struct {
	Cache      string   `protobuf:"bytes,1,opt,name=cache" json:"cache,omitempty"`
	CacheNodes []string `protobuf:"bytes,2,rep,name=cache_nodes,json=cacheNodes" json:"cache_nodes,omitempty"`
}

func (m *DeleteCacheNodesInput) Reset()                    { *m = DeleteCacheNodesInput{} }
func (m *DeleteCacheNodesInput) String() string            { return proto.CompactTextString(m) }
func (*DeleteCacheNodesInput) ProtoMessage()               {}
func (*DeleteCacheNodesInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{25} }

func (m *DeleteCacheNodesInput) GetCache() string {
	if m != nil {
		return m.Cache
	}
	return ""
}

func (m *DeleteCacheNodesInput) GetCacheNodes() []string {
	if m != nil {
		return m.CacheNodes
	}
	return nil
}

type DeleteCacheNodesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteCacheNodesOutput) Reset()                    { *m = DeleteCacheNodesOutput{} }
func (m *DeleteCacheNodesOutput) String() string            { return proto.CompactTextString(m) }
func (*DeleteCacheNodesOutput) ProtoMessage()               {}
func (*DeleteCacheNodesOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{26} }

func (m *DeleteCacheNodesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DeleteCacheNodesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DeleteCacheNodesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type RestartCacheNodesInput struct {
	Cache      string   `protobuf:"bytes,1,opt,name=cache" json:"cache,omitempty"`
	CacheNodes []string `protobuf:"bytes,2,rep,name=cache_nodes,json=cacheNodes" json:"cache_nodes,omitempty"`
}

func (m *RestartCacheNodesInput) Reset()                    { *m = RestartCacheNodesInput{} }
func (m *RestartCacheNodesInput) String() string            { return proto.CompactTextString(m) }
func (*RestartCacheNodesInput) ProtoMessage()               {}
func (*RestartCacheNodesInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{27} }

func (m *RestartCacheNodesInput) GetCache() string {
	if m != nil {
		return m.Cache
	}
	return ""
}

func (m *RestartCacheNodesInput) GetCacheNodes() []string {
	if m != nil {
		return m.CacheNodes
	}
	return nil
}

type RestartCacheNodesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *RestartCacheNodesOutput) Reset()                    { *m = RestartCacheNodesOutput{} }
func (m *RestartCacheNodesOutput) String() string            { return proto.CompactTextString(m) }
func (*RestartCacheNodesOutput) ProtoMessage()               {}
func (*RestartCacheNodesOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{28} }

func (m *RestartCacheNodesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *RestartCacheNodesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *RestartCacheNodesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RestartCacheNodesOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type ModifyCacheNodeAttributesInput struct {
	CacheNode     string `protobuf:"bytes,1,opt,name=cache_node,json=cacheNode" json:"cache_node,omitempty"`
	CacheNodeName string `protobuf:"bytes,2,opt,name=cache_node_name,json=cacheNodeName" json:"cache_node_name,omitempty"`
}

func (m *ModifyCacheNodeAttributesInput) Reset()                    { *m = ModifyCacheNodeAttributesInput{} }
func (m *ModifyCacheNodeAttributesInput) String() string            { return proto.CompactTextString(m) }
func (*ModifyCacheNodeAttributesInput) ProtoMessage()               {}
func (*ModifyCacheNodeAttributesInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{29} }

func (m *ModifyCacheNodeAttributesInput) GetCacheNode() string {
	if m != nil {
		return m.CacheNode
	}
	return ""
}

func (m *ModifyCacheNodeAttributesInput) GetCacheNodeName() string {
	if m != nil {
		return m.CacheNodeName
	}
	return ""
}

type ModifyCacheNodeAttributesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ModifyCacheNodeAttributesOutput) Reset()         { *m = ModifyCacheNodeAttributesOutput{} }
func (m *ModifyCacheNodeAttributesOutput) String() string { return proto.CompactTextString(m) }
func (*ModifyCacheNodeAttributesOutput) ProtoMessage()    {}
func (*ModifyCacheNodeAttributesOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{30}
}

func (m *ModifyCacheNodeAttributesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ModifyCacheNodeAttributesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ModifyCacheNodeAttributesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateCacheFromSnapshotInput struct {
	Snapshot            string            `protobuf:"bytes,1,opt,name=snapshot" json:"snapshot,omitempty"`
	Vxnet               string            `protobuf:"bytes,2,opt,name=vxnet" json:"vxnet,omitempty"`
	NodeCount           int32             `protobuf:"varint,3,opt,name=node_count,json=nodeCount" json:"node_count,omitempty"`
	CacheName           string            `protobuf:"bytes,4,opt,name=cache_name,json=cacheName" json:"cache_name,omitempty"`
	CacheParameterGroup string            `protobuf:"bytes,5,opt,name=cache_parameter_group,json=cacheParameterGroup" json:"cache_parameter_group,omitempty"`
	AutoBackupTime      int32             `protobuf:"varint,6,opt,name=auto_backup_time,json=autoBackupTime" json:"auto_backup_time,omitempty"`
	PrivateIps          []*CachePrivateIP `protobuf:"bytes,7,rep,name=private_ips,json=privateIps" json:"private_ips,omitempty"`
	CacheClass          int32             `protobuf:"varint,8,opt,name=cache_class,json=cacheClass" json:"cache_class,omitempty"`
}

func (m *CreateCacheFromSnapshotInput) Reset()                    { *m = CreateCacheFromSnapshotInput{} }
func (m *CreateCacheFromSnapshotInput) String() string            { return proto.CompactTextString(m) }
func (*CreateCacheFromSnapshotInput) ProtoMessage()               {}
func (*CreateCacheFromSnapshotInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{31} }

func (m *CreateCacheFromSnapshotInput) GetSnapshot() string {
	if m != nil {
		return m.Snapshot
	}
	return ""
}

func (m *CreateCacheFromSnapshotInput) GetVxnet() string {
	if m != nil {
		return m.Vxnet
	}
	return ""
}

func (m *CreateCacheFromSnapshotInput) GetNodeCount() int32 {
	if m != nil {
		return m.NodeCount
	}
	return 0
}

func (m *CreateCacheFromSnapshotInput) GetCacheName() string {
	if m != nil {
		return m.CacheName
	}
	return ""
}

func (m *CreateCacheFromSnapshotInput) GetCacheParameterGroup() string {
	if m != nil {
		return m.CacheParameterGroup
	}
	return ""
}

func (m *CreateCacheFromSnapshotInput) GetAutoBackupTime() int32 {
	if m != nil {
		return m.AutoBackupTime
	}
	return 0
}

func (m *CreateCacheFromSnapshotInput) GetPrivateIps() []*CachePrivateIP {
	if m != nil {
		return m.PrivateIps
	}
	return nil
}

func (m *CreateCacheFromSnapshotInput) GetCacheClass() int32 {
	if m != nil {
		return m.CacheClass
	}
	return 0
}

type CreateCacheFromSnapshotOutput struct {
	Action     string   `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode    int32    `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message    string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	CacheId    string   `protobuf:"bytes,4,opt,name=cache_id,json=cacheId" json:"cache_id,omitempty"`
	CacheNodes []string `protobuf:"bytes,5,rep,name=cache_nodes,json=cacheNodes" json:"cache_nodes,omitempty"`
}

func (m *CreateCacheFromSnapshotOutput) Reset()                    { *m = CreateCacheFromSnapshotOutput{} }
func (m *CreateCacheFromSnapshotOutput) String() string            { return proto.CompactTextString(m) }
func (*CreateCacheFromSnapshotOutput) ProtoMessage()               {}
func (*CreateCacheFromSnapshotOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{32} }

func (m *CreateCacheFromSnapshotOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CreateCacheFromSnapshotOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CreateCacheFromSnapshotOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateCacheFromSnapshotOutput) GetCacheId() string {
	if m != nil {
		return m.CacheId
	}
	return ""
}

func (m *CreateCacheFromSnapshotOutput) GetCacheNodes() []string {
	if m != nil {
		return m.CacheNodes
	}
	return nil
}

type DescribeCacheParameterGroupsInput struct {
	CacheParameterGroups []string `protobuf:"bytes,1,rep,name=cache_parameter_groups,json=cacheParameterGroups" json:"cache_parameter_groups,omitempty"`
	CacheType            string   `protobuf:"bytes,2,opt,name=cache_type,json=cacheType" json:"cache_type,omitempty"`
	SearchWord           int32    `protobuf:"varint,3,opt,name=search_word,json=searchWord" json:"search_word,omitempty"`
	Verbose              int32    `protobuf:"varint,4,opt,name=verbose" json:"verbose,omitempty"`
	Offset               int32    `protobuf:"varint,5,opt,name=offset" json:"offset,omitempty"`
	Limit                int32    `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty"`
}

func (m *DescribeCacheParameterGroupsInput) Reset()         { *m = DescribeCacheParameterGroupsInput{} }
func (m *DescribeCacheParameterGroupsInput) String() string { return proto.CompactTextString(m) }
func (*DescribeCacheParameterGroupsInput) ProtoMessage()    {}
func (*DescribeCacheParameterGroupsInput) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{33}
}

func (m *DescribeCacheParameterGroupsInput) GetCacheParameterGroups() []string {
	if m != nil {
		return m.CacheParameterGroups
	}
	return nil
}

func (m *DescribeCacheParameterGroupsInput) GetCacheType() string {
	if m != nil {
		return m.CacheType
	}
	return ""
}

func (m *DescribeCacheParameterGroupsInput) GetSearchWord() int32 {
	if m != nil {
		return m.SearchWord
	}
	return 0
}

func (m *DescribeCacheParameterGroupsInput) GetVerbose() int32 {
	if m != nil {
		return m.Verbose
	}
	return 0
}

func (m *DescribeCacheParameterGroupsInput) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeCacheParameterGroupsInput) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type DescribeCacheParameterGroupsOutput struct {
	Action                 string                                             `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode                int32                                              `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message                string                                             `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	CacheParameterGroupSet []*DescribeCacheParameterGroupsOutput_ResponseItem `protobuf:"bytes,4,rep,name=cache_parameter_group_set,json=cacheParameterGroupSet" json:"cache_parameter_group_set,omitempty"`
	TotalCount             int32                                              `protobuf:"varint,5,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *DescribeCacheParameterGroupsOutput) Reset()         { *m = DescribeCacheParameterGroupsOutput{} }
func (m *DescribeCacheParameterGroupsOutput) String() string { return proto.CompactTextString(m) }
func (*DescribeCacheParameterGroupsOutput) ProtoMessage()    {}
func (*DescribeCacheParameterGroupsOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{34}
}

func (m *DescribeCacheParameterGroupsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeCacheParameterGroupsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeCacheParameterGroupsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeCacheParameterGroupsOutput) GetCacheParameterGroupSet() []*DescribeCacheParameterGroupsOutput_ResponseItem {
	if m != nil {
		return m.CacheParameterGroupSet
	}
	return nil
}

func (m *DescribeCacheParameterGroupsOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type DescribeCacheParameterGroupsOutput_ResponseItem struct {
	CacheParameterGroupId   string `protobuf:"bytes,1,opt,name=cache_parameter_group_id,json=cacheParameterGroupId" json:"cache_parameter_group_id,omitempty"`
	CacheType               string `protobuf:"bytes,2,opt,name=cache_type,json=cacheType" json:"cache_type,omitempty"`
	CacheParameterGroupName string `protobuf:"bytes,3,opt,name=cache_parameter_group_name,json=cacheParameterGroupName" json:"cache_parameter_group_name,omitempty"`
	Description             string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	IsApplied               int32  `protobuf:"varint,5,opt,name=is_applied,json=isApplied" json:"is_applied,omitempty"`
}

func (m *DescribeCacheParameterGroupsOutput_ResponseItem) Reset() {
	*m = DescribeCacheParameterGroupsOutput_ResponseItem{}
}
func (m *DescribeCacheParameterGroupsOutput_ResponseItem) String() string {
	return proto.CompactTextString(m)
}
func (*DescribeCacheParameterGroupsOutput_ResponseItem) ProtoMessage() {}
func (*DescribeCacheParameterGroupsOutput_ResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{34, 0}
}

func (m *DescribeCacheParameterGroupsOutput_ResponseItem) GetCacheParameterGroupId() string {
	if m != nil {
		return m.CacheParameterGroupId
	}
	return ""
}

func (m *DescribeCacheParameterGroupsOutput_ResponseItem) GetCacheType() string {
	if m != nil {
		return m.CacheType
	}
	return ""
}

func (m *DescribeCacheParameterGroupsOutput_ResponseItem) GetCacheParameterGroupName() string {
	if m != nil {
		return m.CacheParameterGroupName
	}
	return ""
}

func (m *DescribeCacheParameterGroupsOutput_ResponseItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DescribeCacheParameterGroupsOutput_ResponseItem) GetIsApplied() int32 {
	if m != nil {
		return m.IsApplied
	}
	return 0
}

type CreateCacheParameterGroupInput struct {
	CacheType               string `protobuf:"bytes,1,opt,name=cache_type,json=cacheType" json:"cache_type,omitempty"`
	CacheParameterGroupName string `protobuf:"bytes,2,opt,name=cache_parameter_group_name,json=cacheParameterGroupName" json:"cache_parameter_group_name,omitempty"`
}

func (m *CreateCacheParameterGroupInput) Reset()                    { *m = CreateCacheParameterGroupInput{} }
func (m *CreateCacheParameterGroupInput) String() string            { return proto.CompactTextString(m) }
func (*CreateCacheParameterGroupInput) ProtoMessage()               {}
func (*CreateCacheParameterGroupInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{35} }

func (m *CreateCacheParameterGroupInput) GetCacheType() string {
	if m != nil {
		return m.CacheType
	}
	return ""
}

func (m *CreateCacheParameterGroupInput) GetCacheParameterGroupName() string {
	if m != nil {
		return m.CacheParameterGroupName
	}
	return ""
}

type CreateCacheParameterGroupOutput struct {
	Action                string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode               int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message               string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	CacheParameterGroupId string `protobuf:"bytes,4,opt,name=cache_parameter_group_id,json=cacheParameterGroupId" json:"cache_parameter_group_id,omitempty"`
}

func (m *CreateCacheParameterGroupOutput) Reset()         { *m = CreateCacheParameterGroupOutput{} }
func (m *CreateCacheParameterGroupOutput) String() string { return proto.CompactTextString(m) }
func (*CreateCacheParameterGroupOutput) ProtoMessage()    {}
func (*CreateCacheParameterGroupOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{36}
}

func (m *CreateCacheParameterGroupOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *CreateCacheParameterGroupOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *CreateCacheParameterGroupOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CreateCacheParameterGroupOutput) GetCacheParameterGroupId() string {
	if m != nil {
		return m.CacheParameterGroupId
	}
	return ""
}

type ApplyCacheParameterGroupInput struct {
	CacheParameterGroup string   `protobuf:"bytes,1,opt,name=cache_parameter_group,json=cacheParameterGroup" json:"cache_parameter_group,omitempty"`
	Caches              []string `protobuf:"bytes,2,rep,name=caches" json:"caches,omitempty"`
}

func (m *ApplyCacheParameterGroupInput) Reset()                    { *m = ApplyCacheParameterGroupInput{} }
func (m *ApplyCacheParameterGroupInput) String() string            { return proto.CompactTextString(m) }
func (*ApplyCacheParameterGroupInput) ProtoMessage()               {}
func (*ApplyCacheParameterGroupInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{37} }

func (m *ApplyCacheParameterGroupInput) GetCacheParameterGroup() string {
	if m != nil {
		return m.CacheParameterGroup
	}
	return ""
}

func (m *ApplyCacheParameterGroupInput) GetCaches() []string {
	if m != nil {
		return m.Caches
	}
	return nil
}

type ApplyCacheParameterGroupOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId   string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
}

func (m *ApplyCacheParameterGroupOutput) Reset()                    { *m = ApplyCacheParameterGroupOutput{} }
func (m *ApplyCacheParameterGroupOutput) String() string            { return proto.CompactTextString(m) }
func (*ApplyCacheParameterGroupOutput) ProtoMessage()               {}
func (*ApplyCacheParameterGroupOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{38} }

func (m *ApplyCacheParameterGroupOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ApplyCacheParameterGroupOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ApplyCacheParameterGroupOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ApplyCacheParameterGroupOutput) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

type DeleteCacheParameterGroupsInput struct {
	CacheParameterGroups []string `protobuf:"bytes,1,rep,name=cache_parameter_groups,json=cacheParameterGroups" json:"cache_parameter_groups,omitempty"`
}

func (m *DeleteCacheParameterGroupsInput) Reset()         { *m = DeleteCacheParameterGroupsInput{} }
func (m *DeleteCacheParameterGroupsInput) String() string { return proto.CompactTextString(m) }
func (*DeleteCacheParameterGroupsInput) ProtoMessage()    {}
func (*DeleteCacheParameterGroupsInput) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{39}
}

func (m *DeleteCacheParameterGroupsInput) GetCacheParameterGroups() []string {
	if m != nil {
		return m.CacheParameterGroups
	}
	return nil
}

type DeleteCacheParameterGroupsOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteCacheParameterGroupsOutput) Reset()         { *m = DeleteCacheParameterGroupsOutput{} }
func (m *DeleteCacheParameterGroupsOutput) String() string { return proto.CompactTextString(m) }
func (*DeleteCacheParameterGroupsOutput) ProtoMessage()    {}
func (*DeleteCacheParameterGroupsOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{40}
}

func (m *DeleteCacheParameterGroupsOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DeleteCacheParameterGroupsOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DeleteCacheParameterGroupsOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ModifyCacheParameterGroupAttributesInput struct {
	CacheParameterGroup     string `protobuf:"bytes,1,opt,name=cache_parameter_group,json=cacheParameterGroup" json:"cache_parameter_group,omitempty"`
	CacheParameterGroupName string `protobuf:"bytes,2,opt,name=cache_parameter_group_name,json=cacheParameterGroupName" json:"cache_parameter_group_name,omitempty"`
	Description             string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *ModifyCacheParameterGroupAttributesInput) Reset() {
	*m = ModifyCacheParameterGroupAttributesInput{}
}
func (m *ModifyCacheParameterGroupAttributesInput) String() string { return proto.CompactTextString(m) }
func (*ModifyCacheParameterGroupAttributesInput) ProtoMessage()    {}
func (*ModifyCacheParameterGroupAttributesInput) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{41}
}

func (m *ModifyCacheParameterGroupAttributesInput) GetCacheParameterGroup() string {
	if m != nil {
		return m.CacheParameterGroup
	}
	return ""
}

func (m *ModifyCacheParameterGroupAttributesInput) GetCacheParameterGroupName() string {
	if m != nil {
		return m.CacheParameterGroupName
	}
	return ""
}

func (m *ModifyCacheParameterGroupAttributesInput) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ModifyCacheParameterGroupAttributesOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ModifyCacheParameterGroupAttributesOutput) Reset() {
	*m = ModifyCacheParameterGroupAttributesOutput{}
}
func (m *ModifyCacheParameterGroupAttributesOutput) String() string { return proto.CompactTextString(m) }
func (*ModifyCacheParameterGroupAttributesOutput) ProtoMessage()    {}
func (*ModifyCacheParameterGroupAttributesOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{42}
}

func (m *ModifyCacheParameterGroupAttributesOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ModifyCacheParameterGroupAttributesOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ModifyCacheParameterGroupAttributesOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DescribeCacheParametersInput struct {
	CacheParameterGroup string `protobuf:"bytes,1,opt,name=cache_parameter_group,json=cacheParameterGroup" json:"cache_parameter_group,omitempty"`
}

func (m *DescribeCacheParametersInput) Reset()                    { *m = DescribeCacheParametersInput{} }
func (m *DescribeCacheParametersInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeCacheParametersInput) ProtoMessage()               {}
func (*DescribeCacheParametersInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{43} }

func (m *DescribeCacheParametersInput) GetCacheParameterGroup() string {
	if m != nil {
		return m.CacheParameterGroup
	}
	return ""
}

type DescribeCacheParametersOutput struct {
	Action            string                                        `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode           int32                                         `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message           string                                        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	CacheParameterSet []*DescribeCacheParametersOutput_ResponseItem `protobuf:"bytes,4,rep,name=cache_parameter_set,json=cacheParameterSet" json:"cache_parameter_set,omitempty"`
	TotalCount        int32                                         `protobuf:"varint,5,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
}

func (m *DescribeCacheParametersOutput) Reset()                    { *m = DescribeCacheParametersOutput{} }
func (m *DescribeCacheParametersOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeCacheParametersOutput) ProtoMessage()               {}
func (*DescribeCacheParametersOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{44} }

func (m *DescribeCacheParametersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DescribeCacheParametersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *DescribeCacheParametersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DescribeCacheParametersOutput) GetCacheParameterSet() []*DescribeCacheParametersOutput_ResponseItem {
	if m != nil {
		return m.CacheParameterSet
	}
	return nil
}

func (m *DescribeCacheParametersOutput) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type DescribeCacheParametersOutput_ResponseItem struct {
	CacheParameterType  string `protobuf:"bytes,1,opt,name=cache_parameter_type,json=cacheParameterType" json:"cache_parameter_type,omitempty"`
	CacheParameterName  string `protobuf:"bytes,2,opt,name=cache_parameter_name,json=cacheParameterName" json:"cache_parameter_name,omitempty"`
	CacheParameterValue string `protobuf:"bytes,3,opt,name=cache_parameter_value,json=cacheParameterValue" json:"cache_parameter_value,omitempty"`
	ValueRange          string `protobuf:"bytes,4,opt,name=value_range,json=valueRange" json:"value_range,omitempty"`
	IsReadonly          int32  `protobuf:"varint,5,opt,name=is_readonly,json=isReadonly" json:"is_readonly,omitempty"`
}

func (m *DescribeCacheParametersOutput_ResponseItem) Reset() {
	*m = DescribeCacheParametersOutput_ResponseItem{}
}
func (m *DescribeCacheParametersOutput_ResponseItem) String() string {
	return proto.CompactTextString(m)
}
func (*DescribeCacheParametersOutput_ResponseItem) ProtoMessage() {}
func (*DescribeCacheParametersOutput_ResponseItem) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{44, 0}
}

func (m *DescribeCacheParametersOutput_ResponseItem) GetCacheParameterType() string {
	if m != nil {
		return m.CacheParameterType
	}
	return ""
}

func (m *DescribeCacheParametersOutput_ResponseItem) GetCacheParameterName() string {
	if m != nil {
		return m.CacheParameterName
	}
	return ""
}

func (m *DescribeCacheParametersOutput_ResponseItem) GetCacheParameterValue() string {
	if m != nil {
		return m.CacheParameterValue
	}
	return ""
}

func (m *DescribeCacheParametersOutput_ResponseItem) GetValueRange() string {
	if m != nil {
		return m.ValueRange
	}
	return ""
}

func (m *DescribeCacheParametersOutput_ResponseItem) GetIsReadonly() int32 {
	if m != nil {
		return m.IsReadonly
	}
	return 0
}

type UpdateCacheParametersInput struct {
	CacheParameterGroup string            `protobuf:"bytes,1,opt,name=cache_parameter_group,json=cacheParameterGroup" json:"cache_parameter_group,omitempty"`
	Parameters          []*CacheParameter `protobuf:"bytes,2,rep,name=parameters" json:"parameters,omitempty"`
}

func (m *UpdateCacheParametersInput) Reset()                    { *m = UpdateCacheParametersInput{} }
func (m *UpdateCacheParametersInput) String() string            { return proto.CompactTextString(m) }
func (*UpdateCacheParametersInput) ProtoMessage()               {}
func (*UpdateCacheParametersInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{45} }

func (m *UpdateCacheParametersInput) GetCacheParameterGroup() string {
	if m != nil {
		return m.CacheParameterGroup
	}
	return ""
}

func (m *UpdateCacheParametersInput) GetParameters() []*CacheParameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type UpdateCacheParametersOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateCacheParametersOutput) Reset()                    { *m = UpdateCacheParametersOutput{} }
func (m *UpdateCacheParametersOutput) String() string            { return proto.CompactTextString(m) }
func (*UpdateCacheParametersOutput) ProtoMessage()               {}
func (*UpdateCacheParametersOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{46} }

func (m *UpdateCacheParametersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *UpdateCacheParametersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *UpdateCacheParametersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ResetCacheParametersInput struct {
	CacheParameterGroup string   `protobuf:"bytes,1,opt,name=cache_parameter_group,json=cacheParameterGroup" json:"cache_parameter_group,omitempty"`
	CacheParameterNames []string `protobuf:"bytes,2,rep,name=cache_parameter_names,json=cacheParameterNames" json:"cache_parameter_names,omitempty"`
}

func (m *ResetCacheParametersInput) Reset()                    { *m = ResetCacheParametersInput{} }
func (m *ResetCacheParametersInput) String() string            { return proto.CompactTextString(m) }
func (*ResetCacheParametersInput) ProtoMessage()               {}
func (*ResetCacheParametersInput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{47} }

func (m *ResetCacheParametersInput) GetCacheParameterGroup() string {
	if m != nil {
		return m.CacheParameterGroup
	}
	return ""
}

func (m *ResetCacheParametersInput) GetCacheParameterNames() []string {
	if m != nil {
		return m.CacheParameterNames
	}
	return nil
}

type ResetCacheParametersOutput struct {
	Action  string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ResetCacheParametersOutput) Reset()                    { *m = ResetCacheParametersOutput{} }
func (m *ResetCacheParametersOutput) String() string            { return proto.CompactTextString(m) }
func (*ResetCacheParametersOutput) ProtoMessage()               {}
func (*ResetCacheParametersOutput) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{48} }

func (m *ResetCacheParametersOutput) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *ResetCacheParametersOutput) GetRetCode() int32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *ResetCacheParametersOutput) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*CacheServiceProperties)(nil), "service.CacheServiceProperties")
	proto.RegisterType((*DescribeCachesInput)(nil), "service.DescribeCachesInput")
	proto.RegisterType((*DescribeCachesOutput)(nil), "service.DescribeCachesOutput")
	proto.RegisterType((*DescribeCachesOutput_ResponseItem)(nil), "service.DescribeCachesOutput.ResponseItem")
	proto.RegisterType((*CreateCacheInput)(nil), "service.CreateCacheInput")
	proto.RegisterType((*CreateCacheOutput)(nil), "service.CreateCacheOutput")
	proto.RegisterType((*StopCachesInput)(nil), "service.StopCachesInput")
	proto.RegisterType((*StopCachesOutput)(nil), "service.StopCachesOutput")
	proto.RegisterType((*StartCachesInput)(nil), "service.StartCachesInput")
	proto.RegisterType((*StartCachesOutput)(nil), "service.StartCachesOutput")
	proto.RegisterType((*RestartCachesInput)(nil), "service.RestartCachesInput")
	proto.RegisterType((*RestartCachesOutput)(nil), "service.RestartCachesOutput")
	proto.RegisterType((*DeleteCachesInput)(nil), "service.DeleteCachesInput")
	proto.RegisterType((*DeleteCachesOutput)(nil), "service.DeleteCachesOutput")
	proto.RegisterType((*ResizeCachesInput)(nil), "service.ResizeCachesInput")
	proto.RegisterType((*ResizeCachesOutput)(nil), "service.ResizeCachesOutput")
	proto.RegisterType((*UpdateCacheInput)(nil), "service.UpdateCacheInput")
	proto.RegisterType((*UpdateCacheOutput)(nil), "service.UpdateCacheOutput")
	proto.RegisterType((*ChangeCacheVxnetInput)(nil), "service.ChangeCacheVxnetInput")
	proto.RegisterType((*ChangeCacheVxnetOutput)(nil), "service.ChangeCacheVxnetOutput")
	proto.RegisterType((*ModifyCacheAttributesInput)(nil), "service.ModifyCacheAttributesInput")
	proto.RegisterType((*ModifyCacheAttributesOutput)(nil), "service.ModifyCacheAttributesOutput")
	proto.RegisterType((*DescribeCacheNodesInput)(nil), "service.DescribeCacheNodesInput")
	proto.RegisterType((*DescribeCacheNodesOutput)(nil), "service.DescribeCacheNodesOutput")
	proto.RegisterType((*DescribeCacheNodesOutput_ResponseItem)(nil), "service.DescribeCacheNodesOutput.ResponseItem")
	proto.RegisterType((*AddCacheNodesInput)(nil), "service.AddCacheNodesInput")
	proto.RegisterType((*AddCacheNodesOutput)(nil), "service.AddCacheNodesOutput")
	proto.RegisterType((*DeleteCacheNodesInput)(nil), "service.DeleteCacheNodesInput")
	proto.RegisterType((*DeleteCacheNodesOutput)(nil), "service.DeleteCacheNodesOutput")
	proto.RegisterType((*RestartCacheNodesInput)(nil), "service.RestartCacheNodesInput")
	proto.RegisterType((*RestartCacheNodesOutput)(nil), "service.RestartCacheNodesOutput")
	proto.RegisterType((*ModifyCacheNodeAttributesInput)(nil), "service.ModifyCacheNodeAttributesInput")
	proto.RegisterType((*ModifyCacheNodeAttributesOutput)(nil), "service.ModifyCacheNodeAttributesOutput")
	proto.RegisterType((*CreateCacheFromSnapshotInput)(nil), "service.CreateCacheFromSnapshotInput")
	proto.RegisterType((*CreateCacheFromSnapshotOutput)(nil), "service.CreateCacheFromSnapshotOutput")
	proto.RegisterType((*DescribeCacheParameterGroupsInput)(nil), "service.DescribeCacheParameterGroupsInput")
	proto.RegisterType((*DescribeCacheParameterGroupsOutput)(nil), "service.DescribeCacheParameterGroupsOutput")
	proto.RegisterType((*DescribeCacheParameterGroupsOutput_ResponseItem)(nil), "service.DescribeCacheParameterGroupsOutput.ResponseItem")
	proto.RegisterType((*CreateCacheParameterGroupInput)(nil), "service.CreateCacheParameterGroupInput")
	proto.RegisterType((*CreateCacheParameterGroupOutput)(nil), "service.CreateCacheParameterGroupOutput")
	proto.RegisterType((*ApplyCacheParameterGroupInput)(nil), "service.ApplyCacheParameterGroupInput")
	proto.RegisterType((*ApplyCacheParameterGroupOutput)(nil), "service.ApplyCacheParameterGroupOutput")
	proto.RegisterType((*DeleteCacheParameterGroupsInput)(nil), "service.DeleteCacheParameterGroupsInput")
	proto.RegisterType((*DeleteCacheParameterGroupsOutput)(nil), "service.DeleteCacheParameterGroupsOutput")
	proto.RegisterType((*ModifyCacheParameterGroupAttributesInput)(nil), "service.ModifyCacheParameterGroupAttributesInput")
	proto.RegisterType((*ModifyCacheParameterGroupAttributesOutput)(nil), "service.ModifyCacheParameterGroupAttributesOutput")
	proto.RegisterType((*DescribeCacheParametersInput)(nil), "service.DescribeCacheParametersInput")
	proto.RegisterType((*DescribeCacheParametersOutput)(nil), "service.DescribeCacheParametersOutput")
	proto.RegisterType((*DescribeCacheParametersOutput_ResponseItem)(nil), "service.DescribeCacheParametersOutput.ResponseItem")
	proto.RegisterType((*UpdateCacheParametersInput)(nil), "service.UpdateCacheParametersInput")
	proto.RegisterType((*UpdateCacheParametersOutput)(nil), "service.UpdateCacheParametersOutput")
	proto.RegisterType((*ResetCacheParametersInput)(nil), "service.ResetCacheParametersInput")
	proto.RegisterType((*ResetCacheParametersOutput)(nil), "service.ResetCacheParametersOutput")
}

type CacheServiceInterface interface {
	DescribeCaches(in *DescribeCachesInput) (out *DescribeCachesOutput, err error)
	CreateCache(in *CreateCacheInput) (out *CreateCacheOutput, err error)
	StopCaches(in *StopCachesInput) (out *StopCachesOutput, err error)
	StartCaches(in *StartCachesInput) (out *StartCachesOutput, err error)
	RestartCaches(in *RestartCachesInput) (out *RestartCachesOutput, err error)
	DeleteCaches(in *DeleteCachesInput) (out *DeleteCachesOutput, err error)
	ResizeCaches(in *ResizeCachesInput) (out *ResizeCachesOutput, err error)
	UpdateCache(in *UpdateCacheInput) (out *UpdateCacheOutput, err error)
	ChangeCacheVxnet(in *ChangeCacheVxnetInput) (out *ChangeCacheVxnetOutput, err error)
	ModifyCacheAttributes(in *ModifyCacheAttributesInput) (out *ModifyCacheAttributesOutput, err error)
	DescribeCacheNodes(in *DescribeCacheNodesInput) (out *DescribeCacheNodesOutput, err error)
	AddCacheNodes(in *AddCacheNodesInput) (out *AddCacheNodesOutput, err error)
	DeleteCacheNodes(in *DeleteCacheNodesInput) (out *DeleteCacheNodesOutput, err error)
	RestartCacheNodes(in *RestartCacheNodesInput) (out *RestartCacheNodesOutput, err error)
	ModifyCacheNodeAttributes(in *ModifyCacheNodeAttributesInput) (out *ModifyCacheNodeAttributesOutput, err error)
	CreateCacheFromSnapshot(in *CreateCacheFromSnapshotInput) (out *CreateCacheFromSnapshotOutput, err error)
	DescribeCacheParameterGroups(in *DescribeCacheParameterGroupsInput) (out *DescribeCacheParameterGroupsOutput, err error)
	CreateCacheParameterGroup(in *CreateCacheParameterGroupInput) (out *CreateCacheParameterGroupOutput, err error)
	ApplyCacheParameterGroup(in *ApplyCacheParameterGroupInput) (out *ApplyCacheParameterGroupOutput, err error)
	DeleteCacheParameterGroups(in *DeleteCacheParameterGroupsInput) (out *DeleteCacheParameterGroupsOutput, err error)
	ModifyCacheParameterGroupAttributes(in *ModifyCacheParameterGroupAttributesInput) (out *ModifyCacheParameterGroupAttributesOutput, err error)
	DescribeCacheParameters(in *DescribeCacheParametersInput) (out *DescribeCacheParametersOutput, err error)
	UpdateCacheParameters(in *UpdateCacheParametersInput) (out *UpdateCacheParametersOutput, err error)
	ResetCacheParameters(in *ResetCacheParametersInput) (out *ResetCacheParametersOutput, err error)
}

type CacheService struct {
	Config           *config.Config
	Properties       *CacheServiceProperties
	LastResponseBody string
}

func NewCacheService(conf *config.Config, zone string) (p *CacheService) {
	return &CacheService{
		Config:     conf,
		Properties: &CacheServiceProperties{Zone: zone},
	}
}

func (s *QingCloudService) Cache(zone string) (*CacheService, error) {
	properties := &CacheServiceProperties{
		Zone: zone,
	}

	return &CacheService{Config: s.Config, Properties: properties}, nil
}

func (p *CacheService) DescribeCaches(in *DescribeCachesInput) (out *DescribeCachesOutput, err error) {
	if in == nil {
		in = &DescribeCachesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeCaches",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeCachesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DescribeCachesInput) Validate() error {
	return nil
}

func (p *CacheService) CreateCache(in *CreateCacheInput) (out *CreateCacheOutput, err error) {
	if in == nil {
		in = &CreateCacheInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateCache",
		RequestMethod: "GET", // GET or POST
	}

	x := &CreateCacheOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *CreateCacheInput) Validate() error {
	return nil
}

func (p *CacheService) StopCaches(in *StopCachesInput) (out *StopCachesOutput, err error) {
	if in == nil {
		in = &StopCachesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "StopCaches",
		RequestMethod: "GET", // GET or POST
	}

	x := &StopCachesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *StopCachesInput) Validate() error {
	return nil
}

func (p *CacheService) StartCaches(in *StartCachesInput) (out *StartCachesOutput, err error) {
	if in == nil {
		in = &StartCachesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "StartCaches",
		RequestMethod: "GET", // GET or POST
	}

	x := &StartCachesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *StartCachesInput) Validate() error {
	return nil
}

func (p *CacheService) RestartCaches(in *RestartCachesInput) (out *RestartCachesOutput, err error) {
	if in == nil {
		in = &RestartCachesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "RestartCaches",
		RequestMethod: "GET", // GET or POST
	}

	x := &RestartCachesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RestartCachesInput) Validate() error {
	return nil
}

func (p *CacheService) DeleteCaches(in *DeleteCachesInput) (out *DeleteCachesOutput, err error) {
	if in == nil {
		in = &DeleteCachesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteCaches",
		RequestMethod: "GET", // GET or POST
	}

	x := &DeleteCachesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DeleteCachesInput) Validate() error {
	return nil
}

func (p *CacheService) ResizeCaches(in *ResizeCachesInput) (out *ResizeCachesOutput, err error) {
	if in == nil {
		in = &ResizeCachesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ResizeCaches",
		RequestMethod: "GET", // GET or POST
	}

	x := &ResizeCachesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *ResizeCachesInput) Validate() error {
	return nil
}

func (p *CacheService) UpdateCache(in *UpdateCacheInput) (out *UpdateCacheOutput, err error) {
	if in == nil {
		in = &UpdateCacheInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "UpdateCache",
		RequestMethod: "GET", // GET or POST
	}

	x := &UpdateCacheOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *UpdateCacheInput) Validate() error {
	return nil
}

func (p *CacheService) ChangeCacheVxnet(in *ChangeCacheVxnetInput) (out *ChangeCacheVxnetOutput, err error) {
	if in == nil {
		in = &ChangeCacheVxnetInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ChangeCacheVxnet",
		RequestMethod: "GET", // GET or POST
	}

	x := &ChangeCacheVxnetOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *ChangeCacheVxnetInput) Validate() error {
	return nil
}

func (p *CacheService) ModifyCacheAttributes(in *ModifyCacheAttributesInput) (out *ModifyCacheAttributesOutput, err error) {
	if in == nil {
		in = &ModifyCacheAttributesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifyCacheAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &ModifyCacheAttributesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *ModifyCacheAttributesInput) Validate() error {
	return nil
}

func (p *CacheService) DescribeCacheNodes(in *DescribeCacheNodesInput) (out *DescribeCacheNodesOutput, err error) {
	if in == nil {
		in = &DescribeCacheNodesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeCacheNodes",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeCacheNodesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DescribeCacheNodesInput) Validate() error {
	return nil
}

func (p *CacheService) AddCacheNodes(in *AddCacheNodesInput) (out *AddCacheNodesOutput, err error) {
	if in == nil {
		in = &AddCacheNodesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "AddCacheNodes",
		RequestMethod: "GET", // GET or POST
	}

	x := &AddCacheNodesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *AddCacheNodesInput) Validate() error {
	return nil
}

func (p *CacheService) DeleteCacheNodes(in *DeleteCacheNodesInput) (out *DeleteCacheNodesOutput, err error) {
	if in == nil {
		in = &DeleteCacheNodesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteCacheNodes",
		RequestMethod: "GET", // GET or POST
	}

	x := &DeleteCacheNodesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DeleteCacheNodesInput) Validate() error {
	return nil
}

func (p *CacheService) RestartCacheNodes(in *RestartCacheNodesInput) (out *RestartCacheNodesOutput, err error) {
	if in == nil {
		in = &RestartCacheNodesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "RestartCacheNodes",
		RequestMethod: "GET", // GET or POST
	}

	x := &RestartCacheNodesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *RestartCacheNodesInput) Validate() error {
	return nil
}

func (p *CacheService) ModifyCacheNodeAttributes(in *ModifyCacheNodeAttributesInput) (out *ModifyCacheNodeAttributesOutput, err error) {
	if in == nil {
		in = &ModifyCacheNodeAttributesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifyCacheNodeAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &ModifyCacheNodeAttributesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *ModifyCacheNodeAttributesInput) Validate() error {
	return nil
}

func (p *CacheService) CreateCacheFromSnapshot(in *CreateCacheFromSnapshotInput) (out *CreateCacheFromSnapshotOutput, err error) {
	if in == nil {
		in = &CreateCacheFromSnapshotInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateCacheFromSnapshot",
		RequestMethod: "GET", // GET or POST
	}

	x := &CreateCacheFromSnapshotOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *CreateCacheFromSnapshotInput) Validate() error {
	return nil
}

func (p *CacheService) DescribeCacheParameterGroups(in *DescribeCacheParameterGroupsInput) (out *DescribeCacheParameterGroupsOutput, err error) {
	if in == nil {
		in = &DescribeCacheParameterGroupsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeCacheParameterGroups",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeCacheParameterGroupsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DescribeCacheParameterGroupsInput) Validate() error {
	return nil
}

func (p *CacheService) CreateCacheParameterGroup(in *CreateCacheParameterGroupInput) (out *CreateCacheParameterGroupOutput, err error) {
	if in == nil {
		in = &CreateCacheParameterGroupInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "CreateCacheParameterGroup",
		RequestMethod: "GET", // GET or POST
	}

	x := &CreateCacheParameterGroupOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *CreateCacheParameterGroupInput) Validate() error {
	return nil
}

func (p *CacheService) ApplyCacheParameterGroup(in *ApplyCacheParameterGroupInput) (out *ApplyCacheParameterGroupOutput, err error) {
	if in == nil {
		in = &ApplyCacheParameterGroupInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ApplyCacheParameterGroup",
		RequestMethod: "GET", // GET or POST
	}

	x := &ApplyCacheParameterGroupOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *ApplyCacheParameterGroupInput) Validate() error {
	return nil
}

func (p *CacheService) DeleteCacheParameterGroups(in *DeleteCacheParameterGroupsInput) (out *DeleteCacheParameterGroupsOutput, err error) {
	if in == nil {
		in = &DeleteCacheParameterGroupsInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DeleteCacheParameterGroups",
		RequestMethod: "GET", // GET or POST
	}

	x := &DeleteCacheParameterGroupsOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DeleteCacheParameterGroupsInput) Validate() error {
	return nil
}

func (p *CacheService) ModifyCacheParameterGroupAttributes(in *ModifyCacheParameterGroupAttributesInput) (out *ModifyCacheParameterGroupAttributesOutput, err error) {
	if in == nil {
		in = &ModifyCacheParameterGroupAttributesInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ModifyCacheParameterGroupAttributes",
		RequestMethod: "GET", // GET or POST
	}

	x := &ModifyCacheParameterGroupAttributesOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *ModifyCacheParameterGroupAttributesInput) Validate() error {
	return nil
}

func (p *CacheService) DescribeCacheParameters(in *DescribeCacheParametersInput) (out *DescribeCacheParametersOutput, err error) {
	if in == nil {
		in = &DescribeCacheParametersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "DescribeCacheParameters",
		RequestMethod: "GET", // GET or POST
	}

	x := &DescribeCacheParametersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *DescribeCacheParametersInput) Validate() error {
	return nil
}

func (p *CacheService) UpdateCacheParameters(in *UpdateCacheParametersInput) (out *UpdateCacheParametersOutput, err error) {
	if in == nil {
		in = &UpdateCacheParametersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "UpdateCacheParameters",
		RequestMethod: "GET", // GET or POST
	}

	x := &UpdateCacheParametersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *UpdateCacheParametersInput) Validate() error {
	return nil
}

func (p *CacheService) ResetCacheParameters(in *ResetCacheParametersInput) (out *ResetCacheParametersOutput, err error) {
	if in == nil {
		in = &ResetCacheParametersInput{}
	}
	o := &data.Operation{
		Config:        p.Config,
		Properties:    p.Properties,
		APIName:       "ResetCacheParameters",
		RequestMethod: "GET", // GET or POST
	}

	x := &ResetCacheParametersOutput{}
	r, err := request.New(o, in, x)
	if err != nil {
		return nil, err
	}

	err = r.Send()
	p.LastResponseBody = o.ResponseBody

	if err != nil {
		return nil, err
	}

	return x, err
}

func (p *ResetCacheParametersInput) Validate() error {
	return nil
}

func init() { proto.RegisterFile("cache.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 2234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0xcd, 0x73, 0x1b, 0x49,
	0x15, 0xaf, 0xd1, 0x87, 0x6d, 0x3d, 0xe5, 0xc3, 0x6e, 0x7f, 0x8d, 0xc7, 0x71, 0xac, 0x9d, 0xc0,
	0xae, 0x92, 0x6c, 0x29, 0xe0, 0x85, 0xda, 0x14, 0x39, 0x05, 0x07, 0x52, 0x5e, 0x2a, 0xd9, 0x30,
	0x0e, 0xd9, 0xe2, 0xa4, 0x1a, 0x69, 0x3a, 0xf2, 0xc4, 0xd2, 0xcc, 0xec, 0x74, 0xcb, 0xb1, 0x52,
	0xbb, 0xa7, 0x70, 0x81, 0xe2, 0xc2, 0x1d, 0x4e, 0x1c, 0xe0, 0x9f, 0xe0, 0xcc, 0x99, 0x0b, 0xb7,
	0x3d, 0x6c, 0x15, 0x07, 0x4e, 0x54, 0x01, 0xff, 0x00, 0xd5, 0x1f, 0xd2, 0xf4, 0x8c, 0x7a, 0x46,
	0xca, 0x87, 0x5c, 0x5c, 0x5c, 0x9a, 0xee, 0xd7, 0xdd, 0xef, 0xab, 0xdf, 0xfb, 0xbd, 0xd7, 0x86,
	0x7a, 0xd7, 0xed, 0x9e, 0xe0, 0x56, 0x14, 0x87, 0x34, 0x44, 0xcb, 0x04, 0xc7, 0x67, 0x7e, 0x17,
	0x5b, 0x75, 0x3a, 0x8a, 0x30, 0x11, 0xa3, 0xd6, 0xde, 0x97, 0x7e, 0xd0, 0xeb, 0xf6, 0xc3, 0xa1,
	0xd7, 0x26, 0xde, 0x69, 0x3b, 0x1e, 0xf6, 0xf1, 0x1d, 0xf6, 0x47, 0x4e, 0xef, 0xf7, 0xc2, 0xb0,
	0xd7, 0xc7, 0x77, 0xf8, 0x57, 0x67, 0xf8, 0xfc, 0x0e, 0xf5, 0x07, 0x98, 0x50, 0x77, 0x10, 0x09,
	0x02, 0xfb, 0x63, 0xd8, 0x3a, 0x64, 0x87, 0x1c, 0x8b, 0xcd, 0x9f, 0xc4, 0x61, 0x84, 0x63, 0xea,
	0x63, 0x82, 0x10, 0x54, 0x5e, 0x85, 0x01, 0x36, 0x8d, 0x86, 0xd1, 0xac, 0x39, 0xfc, 0xb7, 0xfd,
	0xad, 0x01, 0xeb, 0x0f, 0x30, 0xe9, 0xc6, 0x7e, 0x07, 0xf3, 0x65, 0xe4, 0x28, 0x88, 0x86, 0x14,
	0x6d, 0xc1, 0x12, 0x67, 0x95, 0x98, 0x46, 0xa3, 0xdc, 0xac, 0x39, 0xf2, 0x8b, 0x8d, 0x13, 0xea,
	0xd2, 0x21, 0x31, 0x4b, 0x62, 0x5c, 0x7c, 0xa1, 0x3d, 0x00, 0x4e, 0xd1, 0x66, 0xa2, 0x98, 0x65,
	0x3e, 0x57, 0xe3, 0x23, 0x4f, 0x47, 0x11, 0x46, 0xfb, 0x50, 0x27, 0xd8, 0x8d, 0xbb, 0x27, 0xed,
	0x97, 0x61, 0xec, 0x99, 0x15, 0xce, 0x01, 0x88, 0xa1, 0x2f, 0xc2, 0xd8, 0x63, 0xbc, 0x51, 0xb7,
	0x47, 0xcc, 0x2a, 0x5f, 0xc9, 0x7f, 0x23, 0x13, 0x96, 0xcf, 0x70, 0xdc, 0x09, 0x09, 0x36, 0x97,
	0x1a, 0x46, 0xb3, 0xea, 0x8c, 0x3f, 0x19, 0x17, 0xe1, 0xf3, 0xe7, 0x04, 0x53, 0x73, 0x99, 0x4f,
	0xc8, 0x2f, 0xb4, 0x01, 0xd5, 0xbe, 0x3f, 0xf0, 0xa9, 0xb9, 0xc2, 0x87, 0xc5, 0x87, 0xfd, 0xdf,
	0x65, 0xd8, 0x48, 0xcb, 0xf8, 0xf9, 0x90, 0x4a, 0x21, 0xdd, 0x2e, 0xf5, 0xc3, 0x40, 0xaa, 0x44,
	0x7e, 0xa1, 0x1d, 0x58, 0x89, 0x31, 0x6d, 0x77, 0x43, 0x0f, 0x9b, 0x25, 0x71, 0x72, 0x8c, 0xe9,
	0x61, 0xe8, 0x61, 0xc6, 0xd3, 0x00, 0x13, 0xe2, 0xf6, 0x98, 0x90, 0x6c, 0xcd, 0xf8, 0x13, 0x3d,
	0x04, 0x21, 0x6f, 0x9b, 0xb1, 0x55, 0x69, 0x94, 0x9b, 0xf5, 0x83, 0x5b, 0x2d, 0x69, 0xe1, 0x96,
	0xee, 0xf8, 0x96, 0x83, 0x49, 0x14, 0x06, 0x04, 0x1f, 0x51, 0x3c, 0x70, 0x56, 0xba, 0xc2, 0x68,
	0x94, 0xe9, 0x8a, 0x86, 0xd4, 0xed, 0xb7, 0xbb, 0xe1, 0x30, 0xa0, 0x66, 0x95, 0x33, 0x00, 0x7c,
	0xe8, 0x90, 0x8d, 0x58, 0x7f, 0x5c, 0x82, 0x4b, 0xea, 0x5a, 0xc6, 0xaf, 0x38, 0xda, 0xf7, 0xa4,
	0x24, 0xcb, 0xfc, 0xfb, 0xc8, 0x4b, 0xec, 0x12, 0xb8, 0x03, 0x21, 0xcc, 0xd8, 0x2e, 0x8f, 0xdd,
	0x01, 0x9e, 0x32, 0x9b, 0x91, 0x36, 0xdb, 0x64, 0x3a, 0x0a, 0x63, 0xca, 0xad, 0x56, 0x95, 0xd3,
	0x4f, 0xc2, 0x98, 0x26, 0xd3, 0xc4, 0x7f, 0x85, 0x25, 0xa3, 0x62, 0xfa, 0xd8, 0x7f, 0xc5, 0x57,
	0x07, 0xa1, 0x87, 0xa5, 0x1c, 0xc2, 0x84, 0x35, 0x36, 0xc2, 0xc5, 0x40, 0x0d, 0xa8, 0x7b, 0x5c,
	0x2d, 0x11, 0x37, 0x81, 0xb0, 0xa4, 0x3a, 0x84, 0x9a, 0x50, 0x65, 0xe4, 0xc4, 0x5c, 0xe1, 0xea,
	0x44, 0x13, 0x75, 0x72, 0x35, 0x3e, 0x0e, 0x3d, 0xec, 0x08, 0x02, 0xd4, 0x84, 0x55, 0x77, 0x48,
	0xc3, 0x76, 0xc7, 0xed, 0x9e, 0x0e, 0xa3, 0x36, 0xbb, 0x13, 0x66, 0x8d, 0x6f, 0x78, 0x85, 0x8d,
	0xff, 0x98, 0x0f, 0x3f, 0xf5, 0x85, 0xc4, 0x3e, 0x69, 0xbb, 0x51, 0xd4, 0xf7, 0xb1, 0x67, 0x82,
	0x60, 0xca, 0x27, 0xf7, 0xc5, 0x80, 0xe2, 0xdf, 0x75, 0xe1, 0x12, 0xd2, 0xbf, 0x6f, 0xc3, 0x1a,
	0x8d, 0xdd, 0x80, 0xf8, 0x8c, 0xb1, 0xb6, 0x24, 0xb9, 0xc4, 0x49, 0x56, 0x93, 0x89, 0x63, 0x41,
	0xfc, 0x33, 0xa8, 0x9e, 0x9d, 0x07, 0x98, 0x9a, 0x97, 0x39, 0xdf, 0x3f, 0x9c, 0xdf, 0x0d, 0x5a,
	0xcf, 0xd8, 0xba, 0x9f, 0x04, 0x34, 0x1e, 0x39, 0x62, 0x0f, 0x74, 0x0f, 0xea, 0xdd, 0x18, 0xbb,
	0x14, 0x0b, 0xa9, 0xae, 0x34, 0x8c, 0x66, 0xfd, 0xc0, 0x6a, 0x89, 0x30, 0xd0, 0x1a, 0x87, 0x81,
	0xd6, 0xd3, 0x71, 0x18, 0x70, 0x40, 0x90, 0x73, 0x69, 0xef, 0x41, 0x5d, 0xf0, 0x2a, 0x16, 0x5f,
	0x9d, 0xbd, 0x58, 0x90, 0xf3, 0xc5, 0xb7, 0x60, 0x8d, 0xe0, 0xee, 0x30, 0xf6, 0xe9, 0xa8, 0xdd,
	0x8b, 0xc3, 0x61, 0xc4, 0xfc, 0x6b, 0x95, 0xcb, 0x7c, 0x75, 0x3c, 0xf1, 0x90, 0x8d, 0x1f, 0x79,
	0xe8, 0x53, 0x30, 0xa5, 0xa7, 0xb8, 0xb1, 0x3b, 0xc0, 0x14, 0xc7, 0xc9, 0x92, 0x35, 0xbe, 0x64,
	0x53, 0xf8, 0xcd, 0x78, 0x7a, 0xbc, 0x70, 0x0f, 0x60, 0xe0, 0x9e, 0xb7, 0x07, 0x78, 0x10, 0xc6,
	0x23, 0x13, 0x35, 0x8c, 0xa6, 0xe1, 0xd4, 0x06, 0xee, 0xf9, 0x23, 0x3e, 0x60, 0xdd, 0x05, 0x48,
	0x54, 0x82, 0x56, 0xa1, 0x7c, 0x8a, 0x47, 0xd2, 0xc7, 0xd9, 0x4f, 0x76, 0xe3, 0xcf, 0xdc, 0xfe,
	0x70, 0xec, 0xda, 0xe2, 0xe3, 0x47, 0xa5, 0xbb, 0x86, 0xfd, 0x4d, 0x09, 0x56, 0x0f, 0xb9, 0x26,
	0xb8, 0xb6, 0x45, 0x58, 0xdb, 0x18, 0x5b, 0xc6, 0x90, 0xe4, 0x5c, 0xc5, 0x69, 0x3f, 0x2e, 0x69,
	0xfc, 0x78, 0xc6, 0x25, 0x51, 0xdc, 0xbc, 0x92, 0x75, 0xf3, 0xf4, 0x0d, 0xac, 0x66, 0x6f, 0xe0,
	0x01, 0x6c, 0x6a, 0x15, 0xc7, 0xef, 0x4b, 0xcd, 0x59, 0xd7, 0x68, 0x0d, 0xdd, 0x85, 0x7a, 0x14,
	0xfb, 0x67, 0xcc, 0x27, 0xfc, 0x88, 0x98, 0xcb, 0xdc, 0xcb, 0xb6, 0xd3, 0xb7, 0xe3, 0x89, 0x20,
	0x38, 0x7a, 0xe2, 0x80, 0xa4, 0x3d, 0x8a, 0xf4, 0xf7, 0x64, 0x45, 0x7b, 0x4f, 0xf6, 0x65, 0xae,
	0x6a, 0x77, 0xfb, 0x2e, 0x21, 0xf2, 0x32, 0x09, 0x49, 0x0e, 0xd9, 0x88, 0xfd, 0x7b, 0x03, 0xd6,
	0x14, 0xfd, 0x2e, 0x22, 0xa4, 0xaa, 0x71, 0xad, 0x92, 0x8e, 0x6b, 0x13, 0xf6, 0x44, 0x80, 0x10,
	0x69, 0x43, 0xb0, 0xc7, 0xe2, 0x02, 0xb1, 0x6f, 0xc2, 0xd5, 0x63, 0x1a, 0x46, 0x73, 0xe4, 0x34,
	0xfb, 0x0c, 0x56, 0x13, 0xd2, 0x45, 0xc8, 0xb1, 0x09, 0x4b, 0x2f, 0xc2, 0x4e, 0x22, 0x45, 0xf5,
	0x45, 0xd8, 0x39, 0xf2, 0xec, 0x5b, 0xec, 0x5c, 0x37, 0xa6, 0xf3, 0xf0, 0xf8, 0x12, 0xd6, 0x14,
	0xda, 0x0b, 0x64, 0xf2, 0x63, 0x40, 0x0e, 0x8b, 0x0d, 0xf3, 0xb1, 0x39, 0x82, 0xf5, 0x14, 0xf5,
	0x05, 0x32, 0x7a, 0x1b, 0xd6, 0x1e, 0xe0, 0x3e, 0xa6, 0xf3, 0xc0, 0x18, 0xfb, 0x1c, 0x90, 0x4a,
	0x7c, 0x81, 0x6c, 0x7e, 0x06, 0x6b, 0x0e, 0x66, 0x71, 0x66, 0x1e, 0xb4, 0x55, 0x1c, 0x98, 0x98,
	0x14, 0xea, 0x5e, 0x17, 0x28, 0x45, 0x07, 0x56, 0x7f, 0x11, 0x79, 0x53, 0xb1, 0x95, 0xb3, 0x36,
	0x8e, 0xad, 0xfc, 0x23, 0x1b, 0xab, 0x4a, 0x73, 0xc7, 0x2a, 0xe6, 0xf2, 0xca, 0x19, 0x17, 0x28,
	0xdc, 0xd7, 0xb0, 0x79, 0x78, 0xe2, 0x06, 0x3d, 0x71, 0x30, 0x4f, 0x3f, 0x45, 0x12, 0x4e, 0x72,
	0x4a, 0x49, 0xcd, 0x29, 0x19, 0xb9, 0xcb, 0xf3, 0xcb, 0xfd, 0x15, 0x6c, 0x65, 0x8f, 0xbf, 0x40,
	0xe1, 0xff, 0x60, 0x80, 0xf5, 0x28, 0xf4, 0xfc, 0xe7, 0x23, 0x7e, 0xfc, 0x7d, 0x4a, 0x63, 0xbf,
	0x33, 0xa4, 0x63, 0x4f, 0xd5, 0xab, 0x60, 0x06, 0xca, 0xcc, 0x20, 0x3d, 0xc1, 0x48, 0x06, 0xe9,
	0x4d, 0xe7, 0xa5, 0x8a, 0x2e, 0x2f, 0xd9, 0x2f, 0x60, 0x57, 0xcb, 0xde, 0x02, 0x54, 0x64, 0xff,
	0xcd, 0x80, 0xed, 0x14, 0x64, 0xe3, 0xa9, 0xa5, 0x48, 0x11, 0x99, 0xb4, 0x54, 0xca, 0xa6, 0x25,
	0x05, 0x5f, 0x96, 0x53, 0xf5, 0xd3, 0xcc, 0x02, 0x49, 0x29, 0x86, 0xaa, 0x79, 0xc5, 0xd0, 0x92,
	0xbe, 0x18, 0x5a, 0x56, 0x8b, 0xa1, 0xff, 0x54, 0xc0, 0x9c, 0x96, 0x69, 0x11, 0x0e, 0xf6, 0x14,
	0xae, 0x24, 0xba, 0x50, 0xaa, 0xa2, 0x96, 0x1e, 0x0e, 0x2b, 0x7c, 0xa4, 0x2b, 0xa3, 0x4b, 0x13,
	0xf5, 0xcd, 0x55, 0x1d, 0xfd, 0xae, 0x9c, 0xa9, 0x8e, 0x6c, 0xb8, 0xac, 0xf0, 0x31, 0x29, 0x91,
	0xea, 0x93, 0x6d, 0x8f, 0xbc, 0x14, 0xd2, 0x28, 0xa5, 0x91, 0xc6, 0x87, 0x70, 0x55, 0x59, 0xce,
	0x1d, 0x5c, 0x08, 0x7a, 0x79, 0xb2, 0x41, 0xba, 0x94, 0x8a, 0xc3, 0x3e, 0x96, 0x06, 0x14, 0x77,
	0xc0, 0x09, 0xfb, 0x59, 0x10, 0x59, 0xd5, 0x80, 0xc8, 0x24, 0x5c, 0x48, 0xec, 0x57, 0x9b, 0x04,
	0x05, 0xc5, 0x6d, 0x96, 0x67, 0x97, 0x25, 0x2b, 0x39, 0x65, 0x49, 0xa6, 0x92, 0xa8, 0xbd, 0x4b,
	0x25, 0x01, 0x6f, 0x52, 0x49, 0xd8, 0xaf, 0x0d, 0x40, 0xf7, 0x3d, 0x6f, 0xbe, 0x3b, 0x94, 0xc6,
	0xd3, 0xa5, 0x2c, 0x9e, 0x7e, 0xfb, 0xc0, 0xfa, 0xda, 0x80, 0xf5, 0x14, 0x17, 0x8b, 0xf0, 0xfa,
	0x4c, 0x04, 0xa8, 0x4c, 0x01, 0xd3, 0xc7, 0xb0, 0xa9, 0x40, 0x8f, 0x77, 0x8e, 0x28, 0x36, 0x86,
	0xad, 0xec, 0x7e, 0x8b, 0x88, 0x85, 0x9f, 0xc3, 0x96, 0x8a, 0xec, 0xde, 0x9d, 0xef, 0xaf, 0x61,
	0x7b, 0x6a, 0xc3, 0x0b, 0xcc, 0x73, 0x3d, 0xb8, 0xae, 0xe4, 0x11, 0x76, 0x7a, 0x36, 0xd5, 0x25,
	0x49, 0x8d, 0x9d, 0x67, 0xa8, 0x49, 0x8d, 0x9d, 0xa8, 0x89, 0x0b, 0x25, 0x4d, 0x5c, 0xb0, 0x03,
	0xd8, 0xcf, 0x3d, 0x68, 0x11, 0x86, 0xfa, 0x6b, 0x09, 0xae, 0x29, 0x75, 0xd9, 0x4f, 0xe3, 0x70,
	0x70, 0x1c, 0xb8, 0x11, 0x39, 0x09, 0x25, 0x8a, 0xb1, 0x60, 0x85, 0xc8, 0x01, 0x79, 0xde, 0xe4,
	0x3b, 0x07, 0xcb, 0xa4, 0x6f, 0x64, 0xb9, 0xb8, 0xc2, 0xad, 0xcc, 0x5d, 0xe1, 0x56, 0xf3, 0x2b,
	0x5c, 0x1d, 0x1e, 0x58, 0xd2, 0xd6, 0xa9, 0x6f, 0x5f, 0x0b, 0x67, 0x2a, 0xdc, 0x95, 0xa9, 0x0a,
	0xf7, 0xcf, 0x06, 0xec, 0xe5, 0x68, 0xf2, 0xff, 0xad, 0xda, 0xfd, 0xd6, 0x80, 0x0f, 0x52, 0xd9,
	0x34, 0xad, 0x4f, 0xe9, 0xd1, 0x3f, 0x80, 0x2d, 0xad, 0x25, 0xc6, 0x65, 0xc7, 0x86, 0xc6, 0x14,
	0xd9, 0xd6, 0x6e, 0x29, 0x9b, 0xb9, 0x32, 0xc8, 0x45, 0x78, 0x47, 0x0e, 0x72, 0xa9, 0xe4, 0x21,
	0x97, 0xaa, 0x1e, 0xb9, 0x2c, 0xa9, 0xc8, 0xe5, 0x5f, 0x65, 0xb0, 0x8b, 0x64, 0x5c, 0x84, 0x4d,
	0x08, 0xec, 0xe8, 0xdb, 0x5a, 0x09, 0x9c, 0xb9, 0xab, 0x87, 0x33, 0x5a, 0xe6, 0xd2, 0xc0, 0x66,
	0x4b, 0xa3, 0xee, 0xb9, 0x20, 0xce, 0x3f, 0x8c, 0x0c, 0xc4, 0x29, 0xea, 0xbe, 0x19, 0x33, 0xba,
	0x6f, 0x45, 0xb6, 0xbd, 0x07, 0x96, 0x7e, 0x5f, 0x05, 0x06, 0x6d, 0x6b, 0x76, 0xd6, 0xa1, 0xfe,
	0xca, 0x34, 0xea, 0x4f, 0xf7, 0x62, 0xab, 0x99, 0x5e, 0xac, 0xfd, 0x15, 0x5c, 0x57, 0xae, 0x5f,
	0x86, 0xf7, 0x74, 0x88, 0xe6, 0xec, 0x1b, 0x6f, 0xc6, 0x7e, 0xa9, 0x90, 0x7d, 0xfb, 0x4f, 0x06,
	0xec, 0xe7, 0x1e, 0xbf, 0x08, 0x5f, 0x2b, 0x32, 0x62, 0xa5, 0xc0, 0x88, 0xf6, 0x29, 0xec, 0x31,
	0x95, 0x8d, 0x72, 0xd5, 0x94, 0x1b, 0x81, 0x8d, 0xfc, 0x08, 0x9c, 0xb4, 0x24, 0x4a, 0xa9, 0xce,
	0xc9, 0xaf, 0x0c, 0xb8, 0x9e, 0x77, 0xda, 0x05, 0xa6, 0xef, 0x2f, 0x60, 0x5f, 0x41, 0x3d, 0xef,
	0x2f, 0xda, 0xd9, 0x21, 0x34, 0xf2, 0x37, 0x5e, 0x44, 0xbe, 0xfe, 0x8b, 0x01, 0x4d, 0x05, 0x20,
	0xa4, 0x4f, 0xcc, 0x62, 0x92, 0xb7, 0xb1, 0xe4, 0xbb, 0xdc, 0x82, 0xd9, 0xa5, 0xbb, 0x7d, 0x0e,
	0x37, 0xe7, 0x60, 0x7f, 0x11, 0x9a, 0x73, 0xe0, 0x9a, 0x3e, 0xe4, 0xbe, 0xbd, 0xb2, 0xec, 0x6f,
	0xca, 0xb0, 0x97, 0xb3, 0xe9, 0x22, 0xbc, 0xbb, 0x0b, 0xeb, 0x59, 0x16, 0x93, 0xcc, 0xf2, 0xc9,
	0x8c, 0xcc, 0xa2, 0x4d, 0x2a, 0x6b, 0x69, 0xa9, 0xe6, 0xca, 0x27, 0xff, 0xcc, 0xe6, 0x93, 0xef,
	0xc1, 0x46, 0x96, 0x2d, 0x25, 0xc2, 0xa2, 0xf4, 0x11, 0x3c, 0xd4, 0x6a, 0x56, 0x28, 0xee, 0x95,
	0x59, 0x91, 0x07, 0x0b, 0xc5, 0x4b, 0x4e, 0x59, 0x67, 0x9d, 0x67, 0x6c, 0x8a, 0x49, 0xc2, 0x69,
	0xda, 0xb1, 0x1b, 0xf4, 0xc6, 0x50, 0x13, 0xf8, 0x90, 0xc3, 0x46, 0x18, 0x81, 0x4f, 0xda, 0x31,
	0x76, 0xbd, 0x30, 0xe8, 0x8f, 0xc6, 0xa2, 0xfa, 0xc4, 0x91, 0x23, 0xf6, 0xaf, 0x0d, 0xb0, 0x94,
	0xae, 0xe2, 0x7b, 0x70, 0x19, 0xf4, 0x29, 0xc0, 0x84, 0x3a, 0xaf, 0xc1, 0x39, 0x9e, 0x77, 0x14,
	0x52, 0xfb, 0x05, 0xec, 0x6a, 0x59, 0x59, 0xc4, 0x5d, 0x79, 0x6d, 0xc0, 0x8e, 0x83, 0x09, 0xa6,
	0xef, 0x4d, 0x6c, 0xcd, 0x1a, 0x66, 0xf1, 0x71, 0xbe, 0x58, 0x9f, 0x36, 0x39, 0xb1, 0x7d, 0xb0,
	0x74, 0x4c, 0x2c, 0x40, 0xe0, 0x83, 0xbf, 0xaf, 0xc1, 0x25, 0xf5, 0xff, 0x20, 0xd0, 0x23, 0xb8,
	0x92, 0x7e, 0x7e, 0x45, 0xd7, 0x72, 0xde, 0x65, 0xb9, 0x4e, 0xac, 0xbd, 0xc2, 0x57, 0x5b, 0xf4,
	0x00, 0xea, 0x0a, 0x3a, 0x40, 0x3b, 0x89, 0xc1, 0x33, 0x6f, 0x8e, 0x96, 0xa5, 0x9b, 0x92, 0xbb,
	0xdc, 0x07, 0x48, 0x9e, 0x9e, 0x90, 0x39, 0xa1, 0xcc, 0x3c, 0x5d, 0x59, 0x3b, 0x9a, 0x99, 0x84,
	0x11, 0xe5, 0x65, 0x08, 0xa9, 0x94, 0xe9, 0x47, 0x1b, 0x85, 0x91, 0xe9, 0xa7, 0xa4, 0xcf, 0xe0,
	0x72, 0xea, 0xe1, 0x06, 0xed, 0x4e, 0x88, 0xa7, 0x9f, 0x7f, 0xac, 0x6b, 0xfa, 0x49, 0xb9, 0xd7,
	0x43, 0xb8, 0xa4, 0x3e, 0xae, 0x20, 0x4b, 0xd1, 0x64, 0xe6, 0x81, 0xc6, 0xda, 0xd5, 0xce, 0x25,
	0x1b, 0xa9, 0xef, 0x1b, 0xca, 0x46, 0x53, 0x4f, 0x28, 0xd6, 0xae, 0x76, 0x2e, 0xd1, 0x91, 0x72,
	0xd3, 0x14, 0x1d, 0x65, 0x1f, 0x31, 0x14, 0x1d, 0x4d, 0xbf, 0x3d, 0x1c, 0xc3, 0x6a, 0xb6, 0x31,
	0x8f, 0xae, 0x27, 0xc6, 0xd5, 0x3d, 0x19, 0x58, 0xfb, 0xb9, 0xf3, 0x72, 0xd3, 0x0e, 0x6c, 0x6a,
	0xfb, 0xd9, 0xe8, 0xc6, 0x64, 0x65, 0x7e, 0x3b, 0xde, 0xfa, 0x4e, 0x31, 0x91, 0x3c, 0xe3, 0x97,
	0x80, 0xa6, 0x5b, 0xad, 0xa8, 0x51, 0xd0, 0x87, 0x15, 0xbb, 0x7f, 0x30, 0xb3, 0x53, 0xcb, 0xfc,
	0x26, 0xd5, 0x52, 0x53, 0xfc, 0x66, 0xba, 0xe1, 0xa7, 0xf8, 0x8d, 0xae, 0x0f, 0x77, 0x0c, 0xab,
	0xd9, 0x4e, 0x96, 0xa2, 0x5f, 0x6d, 0xd3, 0x4c, 0xd1, 0x6f, 0x4e, 0x13, 0xec, 0x19, 0x7f, 0x6f,
	0x4b, 0xb7, 0x99, 0xd0, 0xbe, 0xd6, 0x7f, 0x95, 0x6d, 0x1b, 0xf9, 0x04, 0x72, 0xdf, 0x00, 0x76,
	0x72, 0xdb, 0x3a, 0xe8, 0x23, 0x9d, 0x59, 0x34, 0x3d, 0x26, 0xab, 0x39, 0x9b, 0x50, 0x9e, 0x77,
	0x02, 0xdb, 0x39, 0xbd, 0x08, 0xf4, 0x5d, 0x5d, 0x80, 0x99, 0xea, 0xfb, 0x58, 0x1f, 0xce, 0x22,
	0x93, 0x27, 0xbd, 0xcc, 0x83, 0x55, 0xb2, 0x1f, 0x70, 0x6b, 0xae, 0x82, 0x57, 0x9c, 0x79, 0xfb,
	0x0d, 0x8a, 0x63, 0xa6, 0xd2, 0xdc, 0x82, 0x4b, 0x51, 0x69, 0x71, 0x4d, 0xa8, 0xa8, 0x74, 0x56,
	0xf5, 0x76, 0x0a, 0x66, 0x5e, 0x25, 0x83, 0x12, 0x65, 0x15, 0x96, 0x56, 0xd6, 0x47, 0x33, 0xe9,
	0xe4, 0x61, 0x5f, 0x82, 0x95, 0x5f, 0x57, 0xa0, 0xa6, 0xce, 0x8d, 0xb5, 0x1a, 0xbd, 0x39, 0x07,
	0xa5, 0x3c, 0xf2, 0xb7, 0x06, 0xdc, 0x98, 0x03, 0x9a, 0xa3, 0xef, 0xeb, 0x9c, 0xb0, 0xb0, 0x0e,
	0xb1, 0x0e, 0xde, 0x64, 0x49, 0xe2, 0xc1, 0x39, 0x38, 0x56, 0xf1, 0xe0, 0x22, 0x40, 0xaf, 0x78,
	0x70, 0x31, 0x44, 0xef, 0xc0, 0xa6, 0x16, 0x58, 0x29, 0x31, 0x35, 0x1f, 0x03, 0x2a, 0x31, 0xb5,
	0x08, 0x9d, 0xb5, 0x61, 0x43, 0x07, 0x65, 0x90, 0xad, 0x46, 0x0e, 0x3d, 0xdc, 0xb2, 0x6e, 0x14,
	0xd2, 0x88, 0x03, 0xac, 0xad, 0xdf, 0xfc, 0xbb, 0x82, 0x50, 0xed, 0xe7, 0x7e, 0xd0, 0x3b, 0xec,
	0x87, 0x43, 0xcf, 0xaa, 0x72, 0xba, 0xce, 0x12, 0x7f, 0x6b, 0xf9, 0xe4, 0x7f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x1e, 0x85, 0x15, 0xfc, 0x4b, 0x2a, 0x00, 0x00,
}
